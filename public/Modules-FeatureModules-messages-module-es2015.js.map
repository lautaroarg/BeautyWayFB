{"version":3,"sources":["./src/app/components/messages/chat-list/chat-list.component.css","./src/app/components/messages/chat-container/chat-container.component.ts","./src/app/components/messages/messages.component.css","./src/app/Modules/FeatureModules/messages.module.ts","./src/app/components/messages/chat-container/chat-container.component.css","./src/app/components/messages/chat-container/chat-container.component.html","./node_modules/@angular/material/__ivy_ngcc__/fesm2015/sidenav.js","./src/app/components/messages/messages.component.html","./src/app/Modules/FeatureRoutings/messages-routing.module.ts","./src/app/components/messages/chat-list/chat-list.component.ts","./src/app/components/messages/chat-list/chat-list.component.html","./src/app/components/messages/messages.component.ts"],"names":[],"mappings":"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EAAE,GAAG;AACnE,sBAAsB,oDAAM;AAC5B,uBAAuB,gEAAU;AACjC,aAAa,GAAG,GAAG,OAAO,wDAAiB,EAAE,GAAG,OAAO,uEAAuB,EAAE,GAAG,OAAO,oDAAa,EAAE,EAAE,EAAE,QAAQ,EAAE;AACvH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,4CAAO;AAC5C;AACA,iCAAiC,4CAAO;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,0DAAY;AACxB;AACA,oDAAoD,8DAAM,UAAU,2DAAG,QAAQ,EAAE;AACjF;AACA,uDAAuD,8DAAM,qEAAqE,6DAAK;AACvI;AACA,oDAAoD,8DAAM,WAAW,2DAAG,QAAQ,EAAE;AAClF;AACA,uDAAuD,8DAAM,0DAA0D,6DAAK;AAC5H;AACA,8BAA8B,4CAAO;AACrC;AACA;AACA,qCAAqC,0DAAY;AACjD;AACA;AACA;AACA;AACA,gCAAgC,4CAAO;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,sDAAS,iDAAiD,8DAAM;AAC5E,yCAAyC,4DAAM,2BAA2B,4EAAc;AACxF,aAAa,GAAG,iEAAS;AACzB;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,gCAAgC,4EAAoB;AACpD;AACA,SAAS;AACT,mBAAmB,qBAAqB;AACxC;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B,gBAAgB,mBAAmB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,2BAA2B;AACnD,6BAA6B,sBAAsB,mFAAqB,QAAQ;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,mBAAmB,mFAAqB,QAAQ;AAC1E;AACA;AACA;AACA;AACA,kBAAkB,qBAAqB;AACvC,uBAAuB,aAAa,mFAAqB,SAAS;AAClmCAAmC,4DAAI;AACvC,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,6BAA6B,+DAAwB,CAAC,wDAAiB,GAAG,+DAAwB,CAAC,kEAAuB,GAAG,+DAAwB,CAAC,8DAAmB,GAAG,+DAAwB,CAAC,8DAAe,GAAG,+DAAwB,CAAC,oDAAa,GAAG,+DAAwB,CAAC,wDAAQ,MAAM,+DAAwB,2BAA2B;AAC1Y,iBAAiB,+DAAwB,EAAE,qKAAqK;AAChN,QAAQ,qEAA8B,8FAA8F,4CAA4C,EAAE,6FAA6F,2CAA2C,EAAE;AAC5T,KAAK;AACL,QAAQ,yDAAkB;AAC1B,QAAQ,qEAA8B;AACtC,QAAQ,yDAAkB;AAC1B,KAAK,EAAE,WAAW,6GAA6G,YAAY,+KAA+K,yLAAyL;AACnf,QAAQ,6DAAsB;AAC9B,QAAQ,4DAAqB;AAC7B,QAAQ,0DAAmB;AAC3B,QAAQ,0DAAmB;AAC3B,KAAK,EAAE,eAAe,oEAAoB,4BAA4B,mDAAmD,sBAAsB;AAC/I;AACA,KAAK,OAAO,wDAAU,EAAE;AACxB,KAAK,OAAO,kEAAgB,EAAE;AAC9B,KAAK,OAAO,8DAAY,EAAE;AAC1B,KAAK,OAAO,8DAAQ,EAAE;AACtB,KAAK,OAAO,oDAAM,EAAE;AACpB,KAAK,gCAAgC,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,SAAS,wDAAQ,IAAI,GAAG;AAC9F,KAAK,yCAAyC,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,iCAAiC;AAChH;AACA;AACA,gBAAgB,OAAO,mDAAK,EAAE;AAC9B,YAAY,OAAO,mDAAK,EAAE;AAC1B,oBAAoB,OAAO,mDAAK,EAAE;AAClC,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,cAAc,OAAO,mDAAK,EAAE;AAC5B,uBAAuB,OAAO,yDAAW,yBAAyB;AAClE,oBAAoB,OAAO,oDAAM,EAAE;AACnC,qBAAqB,OAAO,oDAAM,qBAAqB;AACvD,mBAAmB,OAAO,oDAAM,EAAE;AAClC,qBAAqB,OAAO,oDAAM,qBAAqB;AACvD,mBAAmB,OAAO,oDAAM,EAAE;AAClC,yBAAyB,OAAO,oDAAM,8BAA8B;AACpE,+BAA+B,OAAO,0DAAY,2CAA2C;AAC7F,8BAA8B,OAAO,0DAAY,0CAA0C;AAC3F;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,uDAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,iCAAiC,qEAAuB;AACxD,+BAA+B,+DAAiB;AAChD,aAAa;AACb,KAAK,gBAAgB,UAAU,OAAO,wDAAiB,EAAE,GAAG,OAAO,kEAAuB,EAAE,GAAG,OAAO,8DAAmB,EAAE,GAAG,OAAO,8DAAe,EAAE,GAAG,OAAO,oDAAa,EAAE,GAAG;AAClL,sBAAsB,sDAAQ;AAC9B,aAAa;AACb,sBAAsB,oDAAM;AAC5B,uBAAuB,wDAAQ;AAC/B,aAAa,GAAG,GAAG;AACnB,sBAAsB,sDAAQ;AAC9B,aAAa;AACb,sBAAsB,oDAAM;AAC5B;AACA,aAAa,GAAG,EAAE,EAAE,GAAG;AACvB,kBAAkB,yDAAW;AAC7B;AACA,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB;AACA,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB;AACA,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB;AACA,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,0DAAY;AAC9B;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,0DAAY;AAC9B;AACA,SAAS,GAAG,EAAE,EAAE;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,uDAAS;AACrC;AACA,iCAAiC,0DAAY;AAC7C;AACA,8BAA8B,4CAAO;AACrC;AACA,mCAAmC,4CAAO;AAC1C;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC,yCAAyC,4CAAO;AAChD;AACA;AACA;AACA,6BAA6B,iEAAS;AACtC;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,kBAAkB,iEAAS;AAC3B;AACA;AACA;AACA;AACA,iBAAiB,oBAAoB;AACrC;AACA,eAAe,kBAAkB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C,yBAAyB,kBAAkB,mFAAqB,QAAQ;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,mFAAqB;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,iEAAS,oBAAoB,iEAAS;AACxD;AACA;AACA;AACA,SAAS;AACT,mCAAmC,iEAAS;AAC5C;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,sCAAsC,oEAAY;AAClD,YAAY,iEAAS;AACrB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,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","file":"Modules-FeatureModules-messages-module-es2015.js","sourcesContent":["export default \".user-tab {\\r\\n    border-left: 5px solid transparent;\\r\\n}\\r\\n\\r\\n.active-route {\\r\\n    border-color: #db7093 !important;\\r\\n}\\r\\n\\r\\n.unread {\\r\\n    color:#fd0606;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNoYXQtbGlzdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksa0NBQWtDO0FBQ3RDOztBQUVBO0lBQ0ksZ0NBQWdDO0FBQ3BDOztBQUVBO0lBQ0ksYUFBYTtBQUNqQiIsImZpbGUiOiJjaGF0LWxpc3QuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi51c2VyLXRhYiB7XHJcbiAgICBib3JkZXItbGVmdDogNXB4IHNvbGlkIHRyYW5zcGFyZW50O1xyXG59XHJcblxyXG4uYWN0aXZlLXJvdXRlIHtcclxuICAgIGJvcmRlci1jb2xvcjogI2RiNzA5MyAhaW1wb3J0YW50O1xyXG59XHJcblxyXG4udW5yZWFkIHtcclxuICAgIGNvbG9yOiNmZDA2MDY7XHJcbn0iXX0= */\";","import { Component, OnInit, ViewChild, ElementRef, AfterViewChecked } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { IUser } from 'src/app/Models/i-user';\r\nimport { IMessage } from '../../../Models/i-message'\r\nimport { MyAuthService } from 'src/app/Services/my-auth.service';\r\nimport { Observable } from 'rxjs';\r\nimport { tap, map, first } from 'rxjs/operators';\r\nimport * as moment from 'moment';\r\nimport { ChatsService } from 'src/app/Services/chats.service';\r\nimport { ConfirmationDialogComponent } from '../../Dialogs/confirmation-dialog/confirmation-dialog.component';\r\n\r\n@Component({\r\n  selector: 'app-chat-container',\r\n  templateUrl: './chat-container.component.html',\r\n  styleUrls: ['./chat-container.component.css']\r\n})\r\nexport class ChatContainerComponent implements OnInit, AfterViewChecked {\r\n  User$: Observable<IUser>;\r\n  Messages$: Observable<IMessage[]>;\r\n\r\n  @ViewChild('MessageDiv', { static: false }) private MessageDiv: ElementRef;\r\n\r\n  User: IUser;\r\n  Messages: IMessage[] = [];\r\n\r\n  MessageText: string;\r\n  ParamUserId: string;\r\n  SendingMessage: boolean = false;\r\n\r\n  moment = moment;\r\n\r\n  DateTimeFormat = {\r\n    sameDay: '[Today] - h:mm a',\r\n    nextDay: '[Tomorrow] - h:mm a',\r\n    nextWeek: 'dddd - h:mm a',\r\n    lastDay: '[Yesterday] - h:mm a',\r\n    lastWeek: '[Last] ddd - h:mm a',\r\n    sameElse: 'D/M/YY - h:mm a'\r\n  }\r\n\r\n  constructor(\r\n    public MyAuth: MyAuthService,\r\n    public Chatsrv: ChatsService,\r\n    public activatedRoute: ActivatedRoute) { }\r\n\r\n  ngOnInit() {\r\n    this.activatedRoute.paramMap.subscribe(params => {\r\n      this.ParamUserId = params.get('UserId');\r\n\r\n      this.LoadUser(this.ParamUserId);\r\n      this.LoadMessages(this.ParamUserId);\r\n    })\r\n  }\r\n\r\n  ngAfterViewChecked(): void {\r\n    try {\r\n      this.MessageDiv.nativeElement.scrollTop = this.MessageDiv.nativeElement.scrollHeight;\r\n    } catch (e) {\r\n      // console.error(e);\r\n    }\r\n  }\r\n\r\n  LoadUser(UserId: string) {\r\n    this.User$ = this.MyAuth.GetAUserInfoFromStore(UserId)\r\n      .pipe(tap(r => {\r\n        this.User = r;\r\n      }))\r\n  }\r\n\r\n  LoadMessages(OfUserId: string) {\r\n    this.Messages$ = this.Chatsrv.LoadMessages(OfUserId).pipe(\r\n      map(docs => {\r\n        return docs.sort((a, b) => {\r\n          return a.SentOn - b.SentOn;\r\n        })\r\n      }),\r\n      tap(r => {\r\n        this.Messages = r;\r\n        const _filter = r.filter(e => e.ToId == this.MyAuth.LoggedUser.Id).filter(e => e.Status == 1 || e.Status == 2);\r\n        this.UpdateMessageStatus(_filter);\r\n      })\r\n    )\r\n  }\r\n\r\n  UpdateMessageStatus(Messages: IMessage[]) {\r\n    Messages.forEach(message => {\r\n      this.Chatsrv.UpdateMessageStatus(message.DocId, 3).subscribe()\r\n    })\r\n  }\r\n\r\n  Send(Text: string) {\r\n    this.SendingMessage = true;\r\n    this.MessageText = '';\r\n    const newMessage: IMessage = {\r\n      FromId: this.MyAuth.LoggedUser.Id,\r\n      DocId: `${Date.now()}`,\r\n      SentOn: Date.now(),\r\n      Status: 0,\r\n      Text: Text,\r\n      ToId: this.ParamUserId,\r\n    }\r\n    this.Messages.push(newMessage)\r\n    this.Chatsrv.SendAMessage(this.ParamUserId, Text)\r\n      .pipe(first())\r\n      .subscribe(() => {\r\n        this.SendingMessage = false;\r\n      })\r\n  }\r\n\r\n  DeleteAMessage(MessageId: string) {\r\n    const confirmationDialogRef = this.MyAuth.Dialogs.open(ConfirmationDialogComponent, {\r\n      data: {\r\n        MessageId: MessageId,\r\n        Title: 'Delete message',\r\n        Message: 'You are about to delete a message, are you sure?'\r\n      }\r\n    })\r\n\r\n    confirmationDialogRef.afterClosed().subscribe(res => {\r\n      if (res) {\r\n        this.Chatsrv.DeleteAMessage(MessageId).subscribe(r => {\r\n          if (r.Code = 202)\r\n            this.MyAuth.Notify.openSnackBar(r.Message, '')\r\n          else\r\n            this.MyAuth.Notify.openSnackBar('Deletion failed, please try again.', '')\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  DeleteChat() {\r\n\r\n  }\r\n}\r\n","export default \".chat-list-container {\\r\\n    /* height: 87vh; */\\r\\n}\\r\\n\\r\\n.chat-heads-container-mobile {\\r\\n    height: calc(100vh - 202.5px);\\r\\n    overflow: auto visible;\\r\\n}\\r\\n\\r\\n.chat-heads-container {\\r\\n    height: calc(100vh - 209.5px);\\r\\n    overflow: auto;\\r\\n}\\r\\n\\r\\n.chat-card-container {\\r\\n    height: calc(100vh - 112px);\\r\\n}\\r\\n\\r\\n.messages-main-box {\\r\\n    height: calc(100vh - 56px);\\r\\n    background: rgb(230, 234, 234);\\r\\n}\\r\\n\\r\\n.chat-list-container-mobile {\\r\\n    height: calc(100vh - 112px);\\r\\n    padding: 0px 0px 0px 3px;\\r\\n}\\r\\n\\r\\n.chat-list-container h3, .chat-list-container-mobile h4 {\\r\\n    margin: 0 0 2px 0;\\r\\n}\\r\\n\\r\\n.my-container {\\r\\n    height: calc(100vh - 112px);\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1lc3NhZ2VzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSw2QkFBNkI7SUFDN0Isc0JBQXNCO0FBQzFCOztBQUVBO0lBQ0ksNkJBQTZCO0lBQzdCLGNBQWM7QUFDbEI7O0FBRUE7SUFDSSwyQkFBMkI7QUFDL0I7O0FBRUE7SUFDSSwwQkFBMEI7SUFDMUIsOEJBQThCO0FBQ2xDOztBQUVBO0lBQ0ksMkJBQTJCO0lBQzNCLHdCQUF3QjtBQUM1Qjs7QUFFQTtJQUNJLGlCQUFpQjtBQUNyQjs7QUFFQTtJQUNJLDJCQUEyQjtBQUMvQiIsImZpbGUiOiJtZXNzYWdlcy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNoYXQtbGlzdC1jb250YWluZXIge1xyXG4gICAgLyogaGVpZ2h0OiA4N3ZoOyAqL1xyXG59XHJcblxyXG4uY2hhdC1oZWFkcy1jb250YWluZXItbW9iaWxlIHtcclxuICAgIGhlaWdodDogY2FsYygxMDB2aCAtIDIwMi41cHgpO1xyXG4gICAgb3ZlcmZsb3c6IGF1dG8gdmlzaWJsZTtcclxufVxyXG5cclxuLmNoYXQtaGVhZHMtY29udGFpbmVyIHtcclxuICAgIGhlaWdodDogY2FsYygxMDB2aCAtIDIwOS41cHgpO1xyXG4gICAgb3ZlcmZsb3c6IGF1dG87XHJcbn1cclxuXHJcbi5jaGF0LWNhcmQtY29udGFpbmVyIHtcclxuICAgIGhlaWdodDogY2FsYygxMDB2aCAtIDExMnB4KTtcclxufVxyXG5cclxuLm1lc3NhZ2VzLW1haW4tYm94IHtcclxuICAgIGhlaWdodDogY2FsYygxMDB2aCAtIDU2cHgpO1xyXG4gICAgYmFja2dyb3VuZDogcmdiKDIzMCwgMjM0LCAyMzQpO1xyXG59XHJcblxyXG4uY2hhdC1saXN0LWNvbnRhaW5lci1tb2JpbGUge1xyXG4gICAgaGVpZ2h0OiBjYWxjKDEwMHZoIC0gMTEycHgpO1xyXG4gICAgcGFkZGluZzogMHB4IDBweCAwcHggM3B4O1xyXG59XHJcblxyXG4uY2hhdC1saXN0LWNvbnRhaW5lciBoMywgLmNoYXQtbGlzdC1jb250YWluZXItbW9iaWxlIGg0IHtcclxuICAgIG1hcmdpbjogMCAwIDJweCAwO1xyXG59XHJcblxyXG4ubXktY29udGFpbmVyIHtcclxuICAgIGhlaWdodDogY2FsYygxMDB2aCAtIDExMnB4KTtcclxufVxyXG4iXX0= */\";","import { NgModule } from '@angular/core';\r\nimport { MessagesComponent } from 'src/app/components/messages/messages.component';\r\nimport { ChatContainerComponent } from 'src/app/components/messages/chat-container/chat-container.component';\r\nimport { ChatListComponent } from 'src/app/components/messages/chat-list/chat-list.component';\r\nimport { SharedModule } from '../shared.module';\r\nimport { MessagesRoutingModule } from '../FeatureRoutings/messages-routing.module';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatOptionModule } from '@angular/material/core';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\n// import { MatSidenavModule, MatCardModule, MatTabsModule, MatFormFieldModule, MatOptionModule, MatSelectModule, MatInputModule, MatIconModule, MatButtonModule, MatRadioModule, MatDatepickerModule, MatDialogModule, MatMenuModule } from '@angular/material';\r\n// import { MatMomentDateModule } from '@angular/material-moment-adapter';\r\n// import { MaterialModule2 } from '../Material.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    MessagesComponent, \r\n    ChatContainerComponent, \r\n    ChatListComponent\r\n  ],\r\n  imports: [\r\n    SharedModule,\r\n    MessagesRoutingModule,\r\n\r\n    //Material modules\r\n    // MaterialModule,\r\n    MatSidenavModule,\r\n    MatCardModule,\r\n    MatMenuModule,\r\n    MatTabsModule,\r\n    MatFormFieldModule,\r\n    MatOptionModule,\r\n    MatSelectModule,\r\n    MatInputModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatRadioModule,\r\n    // MatMomentDateModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n  ]\r\n})\r\nexport class MessagesModule { }\r\n","export default \".chat-card {\\r\\n    height: calc(100vh - 118px);\\r\\n    /* margin-top: 10px; */\\r\\n}\\r\\n\\r\\n.btn-card-menu {\\r\\n    position: absolute;\\r\\n    right: 5px;\\r\\n}\\r\\n\\r\\n.chat-card-content {\\r\\n    height: calc(100vh - 265px);\\r\\n    overflow: auto;\\r\\n}\\r\\n\\r\\n.sent-message {\\r\\n    display: flex !important;\\r\\n    justify-content: flex-end;\\r\\n    align-items: center;\\r\\n}\\r\\n\\r\\n.received-message {\\r\\n    display: flex !important;\\r\\n    justify-content: flex-start;\\r\\n    align-items: center;\\r\\n}\\r\\n\\r\\n.message-box {\\r\\n    margin: 5px;\\r\\n    padding: 5px;\\r\\n    border-radius: 10px;\\r\\n}\\r\\n\\r\\n.message-time {\\r\\n    font-size: 9px;\\r\\n    text-align: end;\\r\\n}\\r\\n\\r\\n.from-pic img {\\r\\n    width: inherit;\\r\\n    min-width: 30px;\\r\\n    -o-object-fit: cover;\\r\\n       object-fit: cover;\\r\\n    border-radius: 50%;\\r\\n}\\r\\n\\r\\n.sent-message .message-box {\\r\\n    background: rgb(147, 248, 189);\\r\\n    margin-right: 10px;\\r\\n    margin-top: 3px;\\r\\n    padding: 0 10px;\\r\\n}\\r\\n\\r\\n.received-message .message-box {\\r\\n    background: antiquewhite;\\r\\n    margin-right: 10px;\\r\\n    margin-top: 3px;\\r\\n    padding: 0 10px;\\r\\n}\\r\\n\\r\\n.delete-div {\\r\\n    position: absolute;\\r\\n    right: 0;\\r\\n    padding-right: 5px;\\r\\n    padding-top: 5px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNoYXQtY29udGFpbmVyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSwyQkFBMkI7SUFDM0Isc0JBQXNCO0FBQzFCOztBQUVBO0lBQ0ksa0JBQWtCO0lBQ2xCLFVBQVU7QUFDZDs7QUFFQTtJQUNJLDJCQUEyQjtJQUMzQixjQUFjO0FBQ2xCOztBQUVBO0lBQ0ksd0JBQXdCO0lBQ3hCLHlCQUF5QjtJQUN6QixtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSx3QkFBd0I7SUFDeEIsMkJBQTJCO0lBQzNCLG1CQUFtQjtBQUN2Qjs7QUFFQTtJQUNJLFdBQVc7SUFDWCxZQUFZO0lBQ1osbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0ksY0FBYztJQUNkLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsZUFBZTtJQUNmLG9CQUFpQjtPQUFqQixpQkFBaUI7SUFDakIsa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksOEJBQThCO0lBQzlCLGtCQUFrQjtJQUNsQixlQUFlO0lBQ2YsZUFBZTtBQUNuQjs7QUFFQTtJQUNJLHdCQUF3QjtJQUN4QixrQkFBa0I7SUFDbEIsZUFBZTtJQUNmLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSxrQkFBa0I7SUFDbEIsUUFBUTtJQUNSLGtCQUFrQjtJQUNsQixnQkFBZ0I7QUFDcEIiLCJmaWxlIjoiY2hhdC1jb250YWluZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jaGF0LWNhcmQge1xyXG4gICAgaGVpZ2h0OiBjYWxjKDEwMHZoIC0gMTE4cHgpO1xyXG4gICAgLyogbWFyZ2luLXRvcDogMTBweDsgKi9cclxufVxyXG5cclxuLmJ0bi1jYXJkLW1lbnUge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgcmlnaHQ6IDVweDtcclxufVxyXG5cclxuLmNoYXQtY2FyZC1jb250ZW50IHtcclxuICAgIGhlaWdodDogY2FsYygxMDB2aCAtIDI2NXB4KTtcclxuICAgIG92ZXJmbG93OiBhdXRvO1xyXG59XHJcblxyXG4uc2VudC1tZXNzYWdlIHtcclxuICAgIGRpc3BsYXk6IGZsZXggIWltcG9ydGFudDtcclxuICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG59XHJcblxyXG4ucmVjZWl2ZWQtbWVzc2FnZSB7XHJcbiAgICBkaXNwbGF5OiBmbGV4ICFpbXBvcnRhbnQ7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG59XHJcblxyXG4ubWVzc2FnZS1ib3gge1xyXG4gICAgbWFyZ2luOiA1cHg7XHJcbiAgICBwYWRkaW5nOiA1cHg7XHJcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xyXG59XHJcblxyXG4ubWVzc2FnZS10aW1lIHtcclxuICAgIGZvbnQtc2l6ZTogOXB4O1xyXG4gICAgdGV4dC1hbGlnbjogZW5kO1xyXG59XHJcblxyXG4uZnJvbS1waWMgaW1nIHtcclxuICAgIHdpZHRoOiBpbmhlcml0O1xyXG4gICAgbWluLXdpZHRoOiAzMHB4O1xyXG4gICAgb2JqZWN0LWZpdDogY292ZXI7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbn1cclxuXHJcbi5zZW50LW1lc3NhZ2UgLm1lc3NhZ2UtYm94IHtcclxuICAgIGJhY2tncm91bmQ6IHJnYigxNDcsIDI0OCwgMTg5KTtcclxuICAgIG1hcmdpbi1yaWdodDogMTBweDtcclxuICAgIG1hcmdpbi10b3A6IDNweDtcclxuICAgIHBhZGRpbmc6IDAgMTBweDtcclxufVxyXG5cclxuLnJlY2VpdmVkLW1lc3NhZ2UgLm1lc3NhZ2UtYm94IHtcclxuICAgIGJhY2tncm91bmQ6IGFudGlxdWV3aGl0ZTtcclxuICAgIG1hcmdpbi1yaWdodDogMTBweDtcclxuICAgIG1hcmdpbi10b3A6IDNweDtcclxuICAgIHBhZGRpbmc6IDAgMTBweDtcclxufVxyXG5cclxuLmRlbGV0ZS1kaXYge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICBwYWRkaW5nLXJpZ2h0OiA1cHg7XHJcbiAgICBwYWRkaW5nLXRvcDogNXB4O1xyXG59Il19 */\";","export default \"<ng-container *ngIf=\\\"User$ | async as User; else UserLoading\\\">\\r\\n  <mat-card class=\\\"chat-card\\\">\\r\\n    <mat-card-header class=\\\"chat-card-header\\\">\\r\\n      <img mat-card-avatar src=\\\"{{User.PhotoURL}}\\\" [routerLink]=\\\"[ '/User', User.Id ]\\\" class=\\\"MousePointer\\\" />\\r\\n      <mat-card-title [routerLink]=\\\"[ '/User', User.Id ]\\\" class=\\\"MousePointer\\\">\\r\\n        {{User.DisplayName}}\\r\\n      </mat-card-title>\\r\\n      <!-- <mat-card-subtitle>Last scene: </mat-card-subtitle> -->\\r\\n      <button class=\\\"btn-card-menu\\\" align=\\\"end\\\" mat-icon-button [matMenuTriggerFor]=\\\"menu\\\" aria-label=\\\"Open basic menu\\\">\\r\\n        <i class=\\\"fal fa-ellipsis-v fa-lg\\\"></i>\\r\\n      </button>\\r\\n      <mat-menu #menu=\\\"matMenu\\\">\\r\\n        <button mat-menu-item [routerLink]=\\\"[ '/User', User.Id ]\\\"><i class=\\\"fal fa-user\\\"></i> Perfil</button>\\r\\n        <button mat-menu-item (click)=\\\"DeleteChat()\\\"><i class=\\\"fal fa-trash-alt\\\"></i> Borrar</button>\\r\\n      </mat-menu>\\r\\n    </mat-card-header>\\r\\n    <mat-card-content #MessageDiv class=\\\"chat-card-content\\\">\\r\\n      <mat-list dense>\\r\\n        <div class=\\\"container\\\">\\r\\n          <ng-container *ngIf=\\\"Messages$ | async as MessagesArr; else MessagesLoading\\\">\\r\\n            <ng-container *ngIf=\\\"Messages.length; else NoMessages\\\">\\r\\n              <div *ngFor=\\\"let Message of Messages; trackBy: Message?.DocId\\\" class=\\\"row\\\" [ngClass]=\\\"{'sent-message': Message.FromId == MyAuth.LoggedUser?.Id, \\r\\n                'received-message': Message.FromId != MyAuth.LoggedUser?.Id}\\\">\\r\\n                <div class=\\\"message-box col-9\\\">\\r\\n                  <div class=\\\"row\\\">\\r\\n                    <!-- <div class=\\\"col-3 col-lg-2 mt-sm-1 mb-sm-1 mt-lg-3 mb-lg-3 div-center from-pic\\\">\\r\\n                      <img\\r\\n                        src=\\\"{{Message.FromId == MyAuth.LoggedUser?.Id ? MyAuth.LoggedUser?.PhotoURL : User.PhotoURL}}\\\">\\r\\n                    </div> -->\\r\\n                    <div class=\\\"col message-textAndDate\\\">\\r\\n                      <p class=\\\"message-text\\\">{{Message.Text}}</p>\\r\\n                      <p class=\\\"message-time\\\">\\r\\n                        <span *ngIf=\\\"Message.Status==0\\\">\\r\\n                          <i class=\\\"fal fa-spinner fa-spin\\\"></i>\\r\\n                        </span>\\r\\n                        <span *ngIf=\\\"Message.Status==1 && Message.FromId==MyAuth.LoggedUser?.Id\\\">\\r\\n                          <i class=\\\"fal fa-check\\\"></i>\\r\\n                        </span>\\r\\n                        <span *ngIf=\\\"Message.Status==2 && Message.FromId==MyAuth.LoggedUser?.Id\\\">\\r\\n                          <i class=\\\"fal fa-check-double\\\"></i>\\r\\n                        </span>\\r\\n                        <span style=\\\"color: blue\\\" *ngIf=\\\"Message.Status==3 && Message.FromId==MyAuth.LoggedUser?.Id\\\"><i\\r\\n                            class=\\\"fal fa-check-double\\\"></i>\\r\\n                        </span>\\r\\n                        {{' '+moment(Message.SentOn).calendar(null, DateTimeFormat)}}\\r\\n                      </p>\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"Message.FromId==MyAuth.LoggedUser?.Id\\\" class=\\\"delete-div MousePointer\\\"\\r\\n                      (click)=\\\"DeleteAMessage(Message.DocId)\\\">\\r\\n                      <span><i class=\\\"fal fa-trash\\\"></i></span>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </ng-container>\\r\\n            <ng-template #NoMessages>\\r\\n              No messages yet.\\r\\n            </ng-template>\\r\\n          </ng-container>\\r\\n          <ng-template #MessagesLoading>\\r\\n            <element-my-loader></element-my-loader>\\r\\n          </ng-template>\\r\\n        </div>\\r\\n      </mat-list>\\r\\n    </mat-card-content>\\r\\n    <mat-card-actions class=\\\"chat-card-actions\\\">\\r\\n      <div class=\\\"container\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col\\\">\\r\\n            <mat-form-field [floatLabel]=\\\"'never'\\\" style=\\\"width:95%;\\\">\\r\\n              <input matInput [(ngModel)]=\\\"MessageText\\\" (keyup.enter)=\\\"Send(MessageText)\\\"\\r\\n                placeholder=\\\"Type a your message\\\" autocomplete=\\\"off\\\" aria-autocomplete=\\\"none\\\">\\r\\n              <button matSuffix mat-icon-button style=\\\"align-self: center;\\\" [disabled]=\\\"SendingMessage\\\"\\r\\n                (click)=\\\"Send(MessageText)\\\">\\r\\n                <mat-icon matSuffix style=\\\"cursor: pointer;\\\">\\r\\n                  <span *ngIf=\\\"!SendingMessage\\\"><i class=\\\"fal fa-paper-plane fa-lg\\\"></i></span>\\r\\n                  <span *ngIf=\\\"SendingMessage\\\"><i class=\\\"fal fa-spinner fa-spin\\\"></i></span>\\r\\n                </mat-icon>\\r\\n              </button>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </mat-card-actions>\\r\\n  </mat-card>\\r\\n</ng-container>\\r\\n<ng-template #UserLoading>\\r\\n  <element-my-loader></element-my-loader>\\r\\n</ng-template>\";","import { Platform, PlatformModule } from '@angular/cdk/platform';\nimport { CdkScrollable, ScrollDispatcher, ViewportRuler, CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { InjectionToken, Component, ChangeDetectionStrategy, ViewEncapsulation, ChangeDetectorRef, Inject, forwardRef, ElementRef, NgZone, EventEmitter, Optional, Input, HostBinding, Output, HostListener, QueryList, ContentChildren, ContentChild, ViewChild, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport { FocusTrapFactory, FocusMonitor } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { Subject, fromEvent, merge } from 'rxjs';\nimport { filter, map, mapTo, takeUntil, distinctUntilChanged, take, startWith, debounceTime } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the Material drawers.\n * @docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/scrolling';\nimport * as ɵngcc2 from '@angular/cdk/a11y';\nimport * as ɵngcc3 from '@angular/cdk/platform';\nimport * as ɵngcc4 from '@angular/cdk/bidi';\nimport * as ɵngcc5 from '@angular/common';\n\nconst _c0 = [\"*\"];\nfunction MatDrawerContainer_div_0_Template(rf, ctx) { if (rf & 1) {\n    const _r3 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function MatDrawerContainer_div_0_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r3); const ctx_r2 = ɵngcc0.ɵɵnextContext(); return ctx_r2._onBackdropClicked(); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-drawer-shown\", ctx_r0._isShowingBackdrop());\n} }\nfunction MatDrawerContainer_mat_drawer_content_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-drawer-content\");\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementEnd();\n} }\nconst _c1 = [[[\"mat-drawer\"]], [[\"mat-drawer-content\"]], \"*\"];\nconst _c2 = [\"mat-drawer\", \"mat-drawer-content\", \"*\"];\nfunction MatSidenavContainer_div_0_Template(rf, ctx) { if (rf & 1) {\n    const _r3 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function MatSidenavContainer_div_0_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r3); const ctx_r2 = ɵngcc0.ɵɵnextContext(); return ctx_r2._onBackdropClicked(); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-drawer-shown\", ctx_r0._isShowingBackdrop());\n} }\nfunction MatSidenavContainer_mat_sidenav_content_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-sidenav-content\", 3);\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementEnd();\n} }\nconst _c3 = [[[\"mat-sidenav\"]], [[\"mat-sidenav-content\"]], \"*\"];\nconst _c4 = [\"mat-sidenav\", \"mat-sidenav-content\", \"*\"];\nconst _c5 = \".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\";\nconst matDrawerAnimations = {\n    /** Animation that slides a drawer in and out. */\n    transformDrawer: trigger('transform', [\n        // We remove the `transform` here completely, rather than setting it to zero, because:\n        // 1. Having a transform can cause elements with ripples or an animated\n        //    transform to shift around in Chrome with an RTL layout (see #10023).\n        // 2. 3d transforms causes text to appear blurry on IE and Edge.\n        state('open, open-instant', style({\n            'transform': 'none',\n            'visibility': 'visible',\n        })),\n        state('void', style({\n            // Avoids the shadow showing up when closed in SSR.\n            'box-shadow': 'none',\n            'visibility': 'hidden',\n        })),\n        transition('void => open-instant', animate('0ms')),\n        transition('void <=> open, open-instant => void', animate('400ms cubic-bezier(0.25, 0.8, 0.25, 1)'))\n    ])\n};\n\n/**\n * Throws an exception when two MatDrawer are matching the same position.\n * @docs-private\n */\nfunction throwMatDuplicatedDrawerError(position) {\n    throw Error(`A drawer was already declared for 'position=\"${position}\"'`);\n}\n/** Configures whether drawers should use auto sizing by default. */\nconst MAT_DRAWER_DEFAULT_AUTOSIZE = new InjectionToken('MAT_DRAWER_DEFAULT_AUTOSIZE', {\n    providedIn: 'root',\n    factory: MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY,\n});\n/**\n * Used to provide a drawer container to a drawer while avoiding circular references.\n * @docs-private\n */\nconst MAT_DRAWER_CONTAINER = new InjectionToken('MAT_DRAWER_CONTAINER');\n/** @docs-private */\nfunction MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY() {\n    return false;\n}\nclass MatDrawerContent extends CdkScrollable {\n    constructor(_changeDetectorRef, _container, elementRef, scrollDispatcher, ngZone) {\n        super(elementRef, scrollDispatcher, ngZone);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._container = _container;\n    }\n    ngAfterContentInit() {\n        this._container._contentMarginChanges.subscribe(() => {\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n}\nMatDrawerContent.ɵfac = function MatDrawerContent_Factory(t) { return new (t || MatDrawerContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(() => MatDrawerContainer)), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nMatDrawerContent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDrawerContent, selectors: [[\"mat-drawer-content\"]], hostAttrs: [1, \"mat-drawer-content\"], hostVars: 4, hostBindings: function MatDrawerContent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"margin-left\", ctx._container._contentMargins.left, \"px\")(\"margin-right\", ctx._container._contentMargins.right, \"px\");\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatDrawerContent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, encapsulation: 2, changeDetection: 0 });\nMatDrawerContent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: MatDrawerContainer, decorators: [{ type: Inject, args: [forwardRef(() => MatDrawerContainer),] }] },\n    { type: ElementRef },\n    { type: ScrollDispatcher },\n    { type: NgZone }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDrawerContent, [{\n        type: Component,\n        args: [{\n                selector: 'mat-drawer-content',\n                template: '<ng-content></ng-content>',\n                host: {\n                    'class': 'mat-drawer-content',\n                    '[style.margin-left.px]': '_container._contentMargins.left',\n                    '[style.margin-right.px]': '_container._contentMargins.right'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: MatDrawerContainer, decorators: [{\n                type: Inject,\n                args: [forwardRef(() => MatDrawerContainer)]\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc1.ScrollDispatcher }, { type: ɵngcc0.NgZone }]; }, null); })();\n/**\n * This component corresponds to a drawer that can be opened on the drawer container.\n */\nclass MatDrawer {\n    constructor(_elementRef, _focusTrapFactory, _focusMonitor, _platform, _ngZone, _doc, _container) {\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        this._focusMonitor = _focusMonitor;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._doc = _doc;\n        this._container = _container;\n        this._elementFocusedBeforeDrawerWasOpened = null;\n        /** Whether the drawer is initialized. Used for disabling the initial animation. */\n        this._enableAnimations = false;\n        this._position = 'start';\n        this._mode = 'over';\n        this._disableClose = false;\n        this._opened = false;\n        /** Emits whenever the drawer has started animating. */\n        this._animationStarted = new Subject();\n        /** Emits whenever the drawer is done animating. */\n        this._animationEnd = new Subject();\n        /** Current state of the sidenav animation. */\n        // @HostBinding is used in the class as it is expected to be extended.  Since @Component decorator\n        // metadata is not inherited by child classes, instead the host binding data is defined in a way\n        // that can be inherited.\n        // tslint:disable:no-host-decorator-in-concrete\n        this._animationState = 'void';\n        /** Event emitted when the drawer open state is changed. */\n        this.openedChange = \n        // Note this has to be async in order to avoid some issues with two-bindings (see #8872).\n        new EventEmitter(/* isAsync */ true);\n        /** Event emitted when the drawer has been opened. */\n        this._openedStream = this.openedChange.pipe(filter(o => o), map(() => { }));\n        /** Event emitted when the drawer has started opening. */\n        this.openedStart = this._animationStarted.pipe(filter(e => e.fromState !== e.toState && e.toState.indexOf('open') === 0), mapTo(undefined));\n        /** Event emitted when the drawer has been closed. */\n        this._closedStream = this.openedChange.pipe(filter(o => !o), map(() => { }));\n        /** Event emitted when the drawer has started closing. */\n        this.closedStart = this._animationStarted.pipe(filter(e => e.fromState !== e.toState && e.toState === 'void'), mapTo(undefined));\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        /** Event emitted when the drawer's position changes. */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onPositionChanged = new EventEmitter();\n        /**\n         * An observable that emits when the drawer mode changes. This is used by the drawer container to\n         * to know when to when the mode changes so it can adapt the margins on the content.\n         */\n        this._modeChanged = new Subject();\n        this.openedChange.subscribe((opened) => {\n            if (opened) {\n                if (this._doc) {\n                    this._elementFocusedBeforeDrawerWasOpened = this._doc.activeElement;\n                }\n                this._takeFocus();\n            }\n            else if (this._isFocusWithinDrawer()) {\n                this._restoreFocus();\n            }\n        });\n        /**\n         * Listen to `keydown` events outside the zone so that change detection is not run every\n         * time a key is pressed. Instead we re-enter the zone only if the `ESC` key is pressed\n         * and we don't have close disabled.\n         */\n        this._ngZone.runOutsideAngular(() => {\n            fromEvent(this._elementRef.nativeElement, 'keydown').pipe(filter(event => {\n                return event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event);\n            }), takeUntil(this._destroyed)).subscribe(event => this._ngZone.run(() => {\n                this.close();\n                event.stopPropagation();\n                event.preventDefault();\n            }));\n        });\n        // We need a Subject with distinctUntilChanged, because the `done` event\n        // fires twice on some browsers. See https://github.com/angular/angular/issues/24084\n        this._animationEnd.pipe(distinctUntilChanged((x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        })).subscribe((event) => {\n            const { fromState, toState } = event;\n            if ((toState.indexOf('open') === 0 && fromState === 'void') ||\n                (toState === 'void' && fromState.indexOf('open') === 0)) {\n                this.openedChange.emit(this._opened);\n            }\n        });\n    }\n    /** The side that the drawer is attached to. */\n    get position() { return this._position; }\n    set position(value) {\n        // Make sure we have a valid value.\n        value = value === 'end' ? 'end' : 'start';\n        if (value != this._position) {\n            this._position = value;\n            this.onPositionChanged.emit();\n        }\n    }\n    /** Mode of the drawer; one of 'over', 'push' or 'side'. */\n    get mode() { return this._mode; }\n    set mode(value) {\n        this._mode = value;\n        this._updateFocusTrapState();\n        this._modeChanged.next();\n    }\n    /** Whether the drawer can be closed with the escape key or by clicking on the backdrop. */\n    get disableClose() { return this._disableClose; }\n    set disableClose(value) { this._disableClose = coerceBooleanProperty(value); }\n    /**\n     * Whether the drawer should focus the first focusable element automatically when opened.\n     * Defaults to false in when `mode` is set to `side`, otherwise defaults to `true`. If explicitly\n     * enabled, focus will be moved into the sidenav in `side` mode as well.\n     */\n    get autoFocus() {\n        const value = this._autoFocus;\n        // Note that usually we disable auto focusing in `side` mode, because we don't know how the\n        // sidenav is being used, but in some cases it still makes sense to do it. If the consumer\n        // explicitly enabled `autoFocus`, we take it as them always wanting to enable it.\n        return value == null ? this.mode !== 'side' : value;\n    }\n    set autoFocus(value) { this._autoFocus = coerceBooleanProperty(value); }\n    /**\n     * Whether the drawer is opened. We overload this because we trigger an event when it\n     * starts or end.\n     */\n    get opened() { return this._opened; }\n    set opened(value) { this.toggle(coerceBooleanProperty(value)); }\n    /**\n     * Moves focus into the drawer. Note that this works even if\n     * the focus trap is disabled in `side` mode.\n     */\n    _takeFocus() {\n        if (!this.autoFocus || !this._focusTrap) {\n            return;\n        }\n        this._focusTrap.focusInitialElementWhenReady().then(hasMovedFocus => {\n            // If there were no focusable elements, focus the sidenav itself so the keyboard navigation\n            // still works. We need to check that `focus` is a function due to Universal.\n            if (!hasMovedFocus && typeof this._elementRef.nativeElement.focus === 'function') {\n                this._elementRef.nativeElement.focus();\n            }\n        });\n    }\n    /**\n     * Restores focus to the element that was originally focused when the drawer opened.\n     * If no element was focused at that time, the focus will be restored to the drawer.\n     */\n    _restoreFocus() {\n        if (!this.autoFocus) {\n            return;\n        }\n        // Note that we don't check via `instanceof HTMLElement` so that we can cover SVGs as well.\n        if (this._elementFocusedBeforeDrawerWasOpened) {\n            this._focusMonitor.focusVia(this._elementFocusedBeforeDrawerWasOpened, this._openedVia);\n        }\n        else {\n            this._elementRef.nativeElement.blur();\n        }\n        this._elementFocusedBeforeDrawerWasOpened = null;\n        this._openedVia = null;\n    }\n    /** Whether focus is currently within the drawer. */\n    _isFocusWithinDrawer() {\n        var _a;\n        const activeEl = (_a = this._doc) === null || _a === void 0 ? void 0 : _a.activeElement;\n        return !!activeEl && this._elementRef.nativeElement.contains(activeEl);\n    }\n    ngAfterContentInit() {\n        this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n        this._updateFocusTrapState();\n    }\n    ngAfterContentChecked() {\n        // Enable the animations after the lifecycle hooks have run, in order to avoid animating\n        // drawers that are open by default. When we're on the server, we shouldn't enable the\n        // animations, because we don't want the drawer to animate the first time the user sees\n        // the page.\n        if (this._platform.isBrowser) {\n            this._enableAnimations = true;\n        }\n    }\n    ngOnDestroy() {\n        if (this._focusTrap) {\n            this._focusTrap.destroy();\n        }\n        this._animationStarted.complete();\n        this._animationEnd.complete();\n        this._modeChanged.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Open the drawer.\n     * @param openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n     * Used for focus management after the sidenav is closed.\n     */\n    open(openedVia) {\n        return this.toggle(true, openedVia);\n    }\n    /** Close the drawer. */\n    close() {\n        return this.toggle(false);\n    }\n    /** Closes the drawer with context that the backdrop was clicked. */\n    _closeViaBackdropClick() {\n        // If the drawer is closed upon a backdrop click, we always want to restore focus. We\n        // don't need to check whether focus is currently in the drawer, as clicking on the\n        // backdrop causes blurring of the active element.\n        return this._setOpen(/* isOpen */ false, /* restoreFocus */ true);\n    }\n    /**\n     * Toggle this drawer.\n     * @param isOpen Whether the drawer should be open.\n     * @param openedVia Whether the drawer was opened by a key press, mouse click or programmatically.\n     * Used for focus management after the sidenav is closed.\n     */\n    toggle(isOpen = !this.opened, openedVia) {\n        // If the focus is currently inside the drawer content and we are closing the drawer,\n        // restore the focus to the initially focused element (when the drawer opened).\n        return this._setOpen(isOpen, /* restoreFocus */ !isOpen && this._isFocusWithinDrawer(), openedVia);\n    }\n    /**\n     * Toggles the opened state of the drawer.\n     * @param isOpen Whether the drawer should open or close.\n     * @param restoreFocus Whether focus should be restored on close.\n     * @param openedVia Focus origin that can be optionally set when opening a drawer. The\n     *   origin will be used later when focus is restored on drawer close.\n     */\n    _setOpen(isOpen, restoreFocus, openedVia = 'program') {\n        this._opened = isOpen;\n        if (isOpen) {\n            this._animationState = this._enableAnimations ? 'open' : 'open-instant';\n            this._openedVia = openedVia;\n        }\n        else {\n            this._animationState = 'void';\n            if (restoreFocus) {\n                this._restoreFocus();\n            }\n        }\n        this._updateFocusTrapState();\n        return new Promise(resolve => {\n            this.openedChange.pipe(take(1)).subscribe(open => resolve(open ? 'open' : 'close'));\n        });\n    }\n    _getWidth() {\n        return this._elementRef.nativeElement ? (this._elementRef.nativeElement.offsetWidth || 0) : 0;\n    }\n    /** Updates the enabled state of the focus trap. */\n    _updateFocusTrapState() {\n        if (this._focusTrap) {\n            // The focus trap is only enabled when the drawer is open in any mode other than side.\n            this._focusTrap.enabled = this.opened && this.mode !== 'side';\n        }\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _animationStartListener(event) {\n        this._animationStarted.next(event);\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _animationDoneListener(event) {\n        this._animationEnd.next(event);\n    }\n}\nMatDrawer.ɵfac = function MatDrawer_Factory(t) { return new (t || MatDrawer)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FocusTrapFactory), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(MAT_DRAWER_CONTAINER, 8)); };\nMatDrawer.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDrawer, selectors: [[\"mat-drawer\"]], hostAttrs: [\"tabIndex\", \"-1\", 1, \"mat-drawer\"], hostVars: 12, hostBindings: function MatDrawer_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵsyntheticHostListener(\"@transform.start\", function MatDrawer_animation_transform_start_HostBindingHandler($event) { return ctx._animationStartListener($event); })(\"@transform.done\", function MatDrawer_animation_transform_done_HostBindingHandler($event) { return ctx._animationDoneListener($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"align\", null);\n        ɵngcc0.ɵɵsyntheticHostProperty(\"@transform\", ctx._animationState);\n        ɵngcc0.ɵɵclassProp(\"mat-drawer-end\", ctx.position === \"end\")(\"mat-drawer-over\", ctx.mode === \"over\")(\"mat-drawer-push\", ctx.mode === \"push\")(\"mat-drawer-side\", ctx.mode === \"side\")(\"mat-drawer-opened\", ctx.opened);\n    } }, inputs: { position: \"position\", mode: \"mode\", disableClose: \"disableClose\", autoFocus: \"autoFocus\", opened: \"opened\" }, outputs: { openedChange: \"openedChange\", _openedStream: \"opened\", openedStart: \"openedStart\", _closedStream: \"closed\", closedStart: \"closedStart\", onPositionChanged: \"positionChanged\" }, exportAs: [\"matDrawer\"], ngContentSelectors: _c0, decls: 2, vars: 0, consts: [[\"cdkScrollable\", \"\", 1, \"mat-drawer-inner-container\"]], template: function MatDrawer_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, directives: [ɵngcc1.CdkScrollable], encapsulation: 2, data: { animation: [matDrawerAnimations.transformDrawer] }, changeDetection: 0 });\nMatDrawer.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusTrapFactory },\n    { type: FocusMonitor },\n    { type: Platform },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: MatDrawerContainer, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DRAWER_CONTAINER,] }] }\n];\nMatDrawer.propDecorators = {\n    position: [{ type: Input }],\n    mode: [{ type: Input }],\n    disableClose: [{ type: Input }],\n    autoFocus: [{ type: Input }],\n    opened: [{ type: Input }],\n    _animationState: [{ type: HostBinding, args: ['@transform',] }],\n    openedChange: [{ type: Output }],\n    _openedStream: [{ type: Output, args: ['opened',] }],\n    openedStart: [{ type: Output }],\n    _closedStream: [{ type: Output, args: ['closed',] }],\n    closedStart: [{ type: Output }],\n    onPositionChanged: [{ type: Output, args: ['positionChanged',] }],\n    _animationStartListener: [{ type: HostListener, args: ['@transform.start', ['$event'],] }],\n    _animationDoneListener: [{ type: HostListener, args: ['@transform.done', ['$event'],] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDrawer, [{\n        type: Component,\n        args: [{\n                selector: 'mat-drawer',\n                exportAs: 'matDrawer',\n                template: \"<div class=\\\"mat-drawer-inner-container\\\" cdkScrollable>\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\",\n                animations: [matDrawerAnimations.transformDrawer],\n                host: {\n                    'class': 'mat-drawer',\n                    // must prevent the browser from aligning text based on value\n                    '[attr.align]': 'null',\n                    '[class.mat-drawer-end]': 'position === \"end\"',\n                    '[class.mat-drawer-over]': 'mode === \"over\"',\n                    '[class.mat-drawer-push]': 'mode === \"push\"',\n                    '[class.mat-drawer-side]': 'mode === \"side\"',\n                    '[class.mat-drawer-opened]': 'opened',\n                    'tabIndex': '-1'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc2.FocusTrapFactory }, { type: ɵngcc2.FocusMonitor }, { type: ɵngcc3.Platform }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: MatDrawerContainer, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DRAWER_CONTAINER]\n            }] }]; }, { _animationState: [{\n            type: HostBinding,\n            args: ['@transform']\n        }], openedChange: [{\n            type: Output\n        }], _openedStream: [{\n            type: Output,\n            args: ['opened']\n        }], openedStart: [{\n            type: Output\n        }], _closedStream: [{\n            type: Output,\n            args: ['closed']\n        }], closedStart: [{\n            type: Output\n        }], onPositionChanged: [{\n            type: Output,\n            args: ['positionChanged']\n        }], position: [{\n            type: Input\n        }], mode: [{\n            type: Input\n        }], disableClose: [{\n            type: Input\n        }], autoFocus: [{\n            type: Input\n        }], opened: [{\n            type: Input\n        }], \n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _animationStartListener: [{\n            type: HostListener,\n            args: ['@transform.start', ['$event']]\n        }], \n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _animationDoneListener: [{\n            type: HostListener,\n            args: ['@transform.done', ['$event']]\n        }] }); })();\n/**\n * `<mat-drawer-container>` component.\n *\n * This is the parent component to one or two `<mat-drawer>`s that validates the state internally\n * and coordinates the backdrop and content styling.\n */\nclass MatDrawerContainer {\n    constructor(_dir, _element, _ngZone, _changeDetectorRef, viewportRuler, defaultAutosize = false, _animationMode) {\n        this._dir = _dir;\n        this._element = _element;\n        this._ngZone = _ngZone;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._animationMode = _animationMode;\n        /** Drawers that belong to this container. */\n        this._drawers = new QueryList();\n        /** Event emitted when the drawer backdrop is clicked. */\n        this.backdropClick = new EventEmitter();\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        /** Emits on every ngDoCheck. Used for debouncing reflows. */\n        this._doCheckSubject = new Subject();\n        /**\n         * Margins to be applied to the content. These are used to push / shrink the drawer content when a\n         * drawer is open. We use margin rather than transform even for push mode because transform breaks\n         * fixed position elements inside of the transformed element.\n         */\n        this._contentMargins = { left: null, right: null };\n        this._contentMarginChanges = new Subject();\n        // If a `Dir` directive exists up the tree, listen direction changes\n        // and update the left/right properties to point to the proper start/end.\n        if (_dir) {\n            _dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => {\n                this._validateDrawers();\n                this.updateContentMargins();\n            });\n        }\n        // Since the minimum width of the sidenav depends on the viewport width,\n        // we need to recompute the margins if the viewport changes.\n        viewportRuler.change()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this.updateContentMargins());\n        this._autosize = defaultAutosize;\n    }\n    /** The drawer child with the `start` position. */\n    get start() { return this._start; }\n    /** The drawer child with the `end` position. */\n    get end() { return this._end; }\n    /**\n     * Whether to automatically resize the container whenever\n     * the size of any of its drawers changes.\n     *\n     * **Use at your own risk!** Enabling this option can cause layout thrashing by measuring\n     * the drawers on every change detection cycle. Can be configured globally via the\n     * `MAT_DRAWER_DEFAULT_AUTOSIZE` token.\n     */\n    get autosize() { return this._autosize; }\n    set autosize(value) { this._autosize = coerceBooleanProperty(value); }\n    /**\n     * Whether the drawer container should have a backdrop while one of the sidenavs is open.\n     * If explicitly set to `true`, the backdrop will be enabled for drawers in the `side`\n     * mode as well.\n     */\n    get hasBackdrop() {\n        if (this._backdropOverride == null) {\n            return !this._start || this._start.mode !== 'side' || !this._end || this._end.mode !== 'side';\n        }\n        return this._backdropOverride;\n    }\n    set hasBackdrop(value) {\n        this._backdropOverride = value == null ? null : coerceBooleanProperty(value);\n    }\n    /** Reference to the CdkScrollable instance that wraps the scrollable content. */\n    get scrollable() {\n        return this._userContent || this._content;\n    }\n    ngAfterContentInit() {\n        this._allDrawers.changes\n            .pipe(startWith(this._allDrawers), takeUntil(this._destroyed))\n            .subscribe((drawer) => {\n            this._drawers.reset(drawer.filter(item => !item._container || item._container === this));\n            this._drawers.notifyOnChanges();\n        });\n        this._drawers.changes.pipe(startWith(null)).subscribe(() => {\n            this._validateDrawers();\n            this._drawers.forEach((drawer) => {\n                this._watchDrawerToggle(drawer);\n                this._watchDrawerPosition(drawer);\n                this._watchDrawerMode(drawer);\n            });\n            if (!this._drawers.length ||\n                this._isDrawerOpen(this._start) ||\n                this._isDrawerOpen(this._end)) {\n                this.updateContentMargins();\n            }\n            this._changeDetectorRef.markForCheck();\n        });\n        // Avoid hitting the NgZone through the debounce timeout.\n        this._ngZone.runOutsideAngular(() => {\n            this._doCheckSubject.pipe(debounceTime(10), // Arbitrary debounce time, less than a frame at 60fps\n            takeUntil(this._destroyed)).subscribe(() => this.updateContentMargins());\n        });\n    }\n    ngOnDestroy() {\n        this._contentMarginChanges.complete();\n        this._doCheckSubject.complete();\n        this._drawers.destroy();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Calls `open` of both start and end drawers */\n    open() {\n        this._drawers.forEach(drawer => drawer.open());\n    }\n    /** Calls `close` of both start and end drawers */\n    close() {\n        this._drawers.forEach(drawer => drawer.close());\n    }\n    /**\n     * Recalculates and updates the inline styles for the content. Note that this should be used\n     * sparingly, because it causes a reflow.\n     */\n    updateContentMargins() {\n        // 1. For drawers in `over` mode, they don't affect the content.\n        // 2. For drawers in `side` mode they should shrink the content. We do this by adding to the\n        //    left margin (for left drawer) or right margin (for right the drawer).\n        // 3. For drawers in `push` mode the should shift the content without resizing it. We do this by\n        //    adding to the left or right margin and simultaneously subtracting the same amount of\n        //    margin from the other side.\n        let left = 0;\n        let right = 0;\n        if (this._left && this._left.opened) {\n            if (this._left.mode == 'side') {\n                left += this._left._getWidth();\n            }\n            else if (this._left.mode == 'push') {\n                const width = this._left._getWidth();\n                left += width;\n                right -= width;\n            }\n        }\n        if (this._right && this._right.opened) {\n            if (this._right.mode == 'side') {\n                right += this._right._getWidth();\n            }\n            else if (this._right.mode == 'push') {\n                const width = this._right._getWidth();\n                right += width;\n                left -= width;\n            }\n        }\n        // If either `right` or `left` is zero, don't set a style to the element. This\n        // allows users to specify a custom size via CSS class in SSR scenarios where the\n        // measured widths will always be zero. Note that we reset to `null` here, rather\n        // than below, in order to ensure that the types in the `if` below are consistent.\n        left = left || null;\n        right = right || null;\n        if (left !== this._contentMargins.left || right !== this._contentMargins.right) {\n            this._contentMargins = { left, right };\n            // Pull back into the NgZone since in some cases we could be outside. We need to be careful\n            // to do it only when something changed, otherwise we can end up hitting the zone too often.\n            this._ngZone.run(() => this._contentMarginChanges.next(this._contentMargins));\n        }\n    }\n    ngDoCheck() {\n        // If users opted into autosizing, do a check every change detection cycle.\n        if (this._autosize && this._isPushed()) {\n            // Run outside the NgZone, otherwise the debouncer will throw us into an infinite loop.\n            this._ngZone.runOutsideAngular(() => this._doCheckSubject.next());\n        }\n    }\n    /**\n     * Subscribes to drawer events in order to set a class on the main container element when the\n     * drawer is open and the backdrop is visible. This ensures any overflow on the container element\n     * is properly hidden.\n     */\n    _watchDrawerToggle(drawer) {\n        drawer._animationStarted.pipe(filter((event) => event.fromState !== event.toState), takeUntil(this._drawers.changes))\n            .subscribe((event) => {\n            // Set the transition class on the container so that the animations occur. This should not\n            // be set initially because animations should only be triggered via a change in state.\n            if (event.toState !== 'open-instant' && this._animationMode !== 'NoopAnimations') {\n                this._element.nativeElement.classList.add('mat-drawer-transition');\n            }\n            this.updateContentMargins();\n            this._changeDetectorRef.markForCheck();\n        });\n        if (drawer.mode !== 'side') {\n            drawer.openedChange.pipe(takeUntil(this._drawers.changes)).subscribe(() => this._setContainerClass(drawer.opened));\n        }\n    }\n    /**\n     * Subscribes to drawer onPositionChanged event in order to\n     * re-validate drawers when the position changes.\n     */\n    _watchDrawerPosition(drawer) {\n        if (!drawer) {\n            return;\n        }\n        // NOTE: We need to wait for the microtask queue to be empty before validating,\n        // since both drawers may be swapping positions at the same time.\n        drawer.onPositionChanged.pipe(takeUntil(this._drawers.changes)).subscribe(() => {\n            this._ngZone.onMicrotaskEmpty.pipe(take(1)).subscribe(() => {\n                this._validateDrawers();\n            });\n        });\n    }\n    /** Subscribes to changes in drawer mode so we can run change detection. */\n    _watchDrawerMode(drawer) {\n        if (drawer) {\n            drawer._modeChanged.pipe(takeUntil(merge(this._drawers.changes, this._destroyed)))\n                .subscribe(() => {\n                this.updateContentMargins();\n                this._changeDetectorRef.markForCheck();\n            });\n        }\n    }\n    /** Toggles the 'mat-drawer-opened' class on the main 'mat-drawer-container' element. */\n    _setContainerClass(isAdd) {\n        const classList = this._element.nativeElement.classList;\n        const className = 'mat-drawer-container-has-open';\n        if (isAdd) {\n            classList.add(className);\n        }\n        else {\n            classList.remove(className);\n        }\n    }\n    /** Validate the state of the drawer children components. */\n    _validateDrawers() {\n        this._start = this._end = null;\n        // Ensure that we have at most one start and one end drawer.\n        this._drawers.forEach(drawer => {\n            if (drawer.position == 'end') {\n                if (this._end != null && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                    throwMatDuplicatedDrawerError('end');\n                }\n                this._end = drawer;\n            }\n            else {\n                if (this._start != null && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                    throwMatDuplicatedDrawerError('start');\n                }\n                this._start = drawer;\n            }\n        });\n        this._right = this._left = null;\n        // Detect if we're LTR or RTL.\n        if (this._dir && this._dir.value === 'rtl') {\n            this._left = this._end;\n            this._right = this._start;\n        }\n        else {\n            this._left = this._start;\n            this._right = this._end;\n        }\n    }\n    /** Whether the container is being pushed to the side by one of the drawers. */\n    _isPushed() {\n        return (this._isDrawerOpen(this._start) && this._start.mode != 'over') ||\n            (this._isDrawerOpen(this._end) && this._end.mode != 'over');\n    }\n    _onBackdropClicked() {\n        this.backdropClick.emit();\n        this._closeModalDrawersViaBackdrop();\n    }\n    _closeModalDrawersViaBackdrop() {\n        // Close all open drawers where closing is not disabled and the mode is not `side`.\n        [this._start, this._end]\n            .filter(drawer => drawer && !drawer.disableClose && this._canHaveBackdrop(drawer))\n            .forEach(drawer => drawer._closeViaBackdropClick());\n    }\n    _isShowingBackdrop() {\n        return (this._isDrawerOpen(this._start) && this._canHaveBackdrop(this._start)) ||\n            (this._isDrawerOpen(this._end) && this._canHaveBackdrop(this._end));\n    }\n    _canHaveBackdrop(drawer) {\n        return drawer.mode !== 'side' || !!this._backdropOverride;\n    }\n    _isDrawerOpen(drawer) {\n        return drawer != null && drawer.opened;\n    }\n}\nMatDrawerContainer.ɵfac = function MatDrawerContainer_Factory(t) { return new (t || MatDrawerContainer)(ɵngcc0.ɵɵdirectiveInject(ɵngcc4.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(MAT_DRAWER_DEFAULT_AUTOSIZE), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatDrawerContainer.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatDrawerContainer, selectors: [[\"mat-drawer-container\"]], contentQueries: function MatDrawerContainer_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatDrawerContent, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatDrawer, true);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._content = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._allDrawers = _t);\n    } }, viewQuery: function MatDrawerContainer_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatDrawerContent, true);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._userContent = _t.first);\n    } }, hostAttrs: [1, \"mat-drawer-container\"], hostVars: 2, hostBindings: function MatDrawerContainer_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-drawer-container-explicit-backdrop\", ctx._backdropOverride);\n    } }, inputs: { autosize: \"autosize\", hasBackdrop: \"hasBackdrop\" }, outputs: { backdropClick: \"backdropClick\" }, exportAs: [\"matDrawerContainer\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_DRAWER_CONTAINER,\n                useExisting: MatDrawerContainer\n            }])], ngContentSelectors: _c2, decls: 4, vars: 2, consts: [[\"class\", \"mat-drawer-backdrop\", 3, \"mat-drawer-shown\", \"click\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"mat-drawer-backdrop\", 3, \"click\"]], template: function MatDrawerContainer_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c1);\n        ɵngcc0.ɵɵtemplate(0, MatDrawerContainer_div_0_Template, 1, 2, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵtemplate(3, MatDrawerContainer_mat_drawer_content_3_Template, 2, 0, \"mat-drawer-content\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.hasBackdrop);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx._content);\n    } }, directives: [ɵngcc5.NgIf, MatDrawerContent], styles: [_c5], encapsulation: 2, changeDetection: 0 });\nMatDrawerContainer.ctorParameters = () => [\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ElementRef },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_DRAWER_DEFAULT_AUTOSIZE,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatDrawerContainer.propDecorators = {\n    _allDrawers: [{ type: ContentChildren, args: [MatDrawer, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                },] }],\n    _content: [{ type: ContentChild, args: [MatDrawerContent,] }],\n    _userContent: [{ type: ViewChild, args: [MatDrawerContent,] }],\n    autosize: [{ type: Input }],\n    hasBackdrop: [{ type: Input }],\n    backdropClick: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatDrawerContainer, [{\n        type: Component,\n        args: [{\n                selector: 'mat-drawer-container',\n                exportAs: 'matDrawerContainer',\n                template: \"<div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\" *ngIf=\\\"hasBackdrop\\\"\\n     [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n\\n<ng-content select=\\\"mat-drawer\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-drawer-content\\\">\\n</ng-content>\\n<mat-drawer-content *ngIf=\\\"!_content\\\">\\n  <ng-content></ng-content>\\n</mat-drawer-content>\\n\",\n                host: {\n                    'class': 'mat-drawer-container',\n                    '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                providers: [{\n                        provide: MAT_DRAWER_CONTAINER,\n                        useExisting: MatDrawerContainer\n                    }],\n                styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc4.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.ViewportRuler }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_DRAWER_DEFAULT_AUTOSIZE]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { backdropClick: [{\n            type: Output\n        }], autosize: [{\n            type: Input\n        }], hasBackdrop: [{\n            type: Input\n        }], _allDrawers: [{\n            type: ContentChildren,\n            args: [MatDrawer, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                }]\n        }], _content: [{\n            type: ContentChild,\n            args: [MatDrawerContent]\n        }], _userContent: [{\n            type: ViewChild,\n            args: [MatDrawerContent]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatSidenavContent extends MatDrawerContent {\n    constructor(changeDetectorRef, container, elementRef, scrollDispatcher, ngZone) {\n        super(changeDetectorRef, container, elementRef, scrollDispatcher, ngZone);\n    }\n}\nMatSidenavContent.ɵfac = function MatSidenavContent_Factory(t) { return new (t || MatSidenavContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(() => MatSidenavContainer)), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nMatSidenavContent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSidenavContent, selectors: [[\"mat-sidenav-content\"]], hostAttrs: [1, \"mat-drawer-content\", \"mat-sidenav-content\"], hostVars: 4, hostBindings: function MatSidenavContent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"margin-left\", ctx._container._contentMargins.left, \"px\")(\"margin-right\", ctx._container._contentMargins.right, \"px\");\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatSidenavContent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, encapsulation: 2, changeDetection: 0 });\nMatSidenavContent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: MatSidenavContainer, decorators: [{ type: Inject, args: [forwardRef(() => MatSidenavContainer),] }] },\n    { type: ElementRef },\n    { type: ScrollDispatcher },\n    { type: NgZone }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSidenavContent, [{\n        type: Component,\n        args: [{\n                selector: 'mat-sidenav-content',\n                template: '<ng-content></ng-content>',\n                host: {\n                    'class': 'mat-drawer-content mat-sidenav-content',\n                    '[style.margin-left.px]': '_container._contentMargins.left',\n                    '[style.margin-right.px]': '_container._contentMargins.right'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: MatSidenavContainer, decorators: [{\n                type: Inject,\n                args: [forwardRef(() => MatSidenavContainer)]\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc1.ScrollDispatcher }, { type: ɵngcc0.NgZone }]; }, null); })();\nclass MatSidenav extends MatDrawer {\n    constructor() {\n        super(...arguments);\n        this._fixedInViewport = false;\n        this._fixedTopGap = 0;\n        this._fixedBottomGap = 0;\n    }\n    /** Whether the sidenav is fixed in the viewport. */\n    get fixedInViewport() { return this._fixedInViewport; }\n    set fixedInViewport(value) { this._fixedInViewport = coerceBooleanProperty(value); }\n    /**\n     * The gap between the top of the sidenav and the top of the viewport when the sidenav is in fixed\n     * mode.\n     */\n    get fixedTopGap() { return this._fixedTopGap; }\n    set fixedTopGap(value) { this._fixedTopGap = coerceNumberProperty(value); }\n    /**\n     * The gap between the bottom of the sidenav and the bottom of the viewport when the sidenav is in\n     * fixed mode.\n     */\n    get fixedBottomGap() { return this._fixedBottomGap; }\n    set fixedBottomGap(value) { this._fixedBottomGap = coerceNumberProperty(value); }\n}\nMatSidenav.ɵfac = function MatSidenav_Factory(t) { return ɵMatSidenav_BaseFactory(t || MatSidenav); };\nMatSidenav.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSidenav, selectors: [[\"mat-sidenav\"]], hostAttrs: [\"tabIndex\", \"-1\", 1, \"mat-drawer\", \"mat-sidenav\"], hostVars: 17, hostBindings: function MatSidenav_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"align\", null);\n        ɵngcc0.ɵɵstyleProp(\"top\", ctx.fixedInViewport ? ctx.fixedTopGap : null, \"px\")(\"bottom\", ctx.fixedInViewport ? ctx.fixedBottomGap : null, \"px\");\n        ɵngcc0.ɵɵclassProp(\"mat-drawer-end\", ctx.position === \"end\")(\"mat-drawer-over\", ctx.mode === \"over\")(\"mat-drawer-push\", ctx.mode === \"push\")(\"mat-drawer-side\", ctx.mode === \"side\")(\"mat-drawer-opened\", ctx.opened)(\"mat-sidenav-fixed\", ctx.fixedInViewport);\n    } }, inputs: { fixedInViewport: \"fixedInViewport\", fixedTopGap: \"fixedTopGap\", fixedBottomGap: \"fixedBottomGap\" }, exportAs: [\"matSidenav\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 2, vars: 0, consts: [[\"cdkScrollable\", \"\", 1, \"mat-drawer-inner-container\"]], template: function MatSidenav_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, directives: [ɵngcc1.CdkScrollable], encapsulation: 2, data: { animation: [matDrawerAnimations.transformDrawer] }, changeDetection: 0 });\nMatSidenav.propDecorators = {\n    fixedInViewport: [{ type: Input }],\n    fixedTopGap: [{ type: Input }],\n    fixedBottomGap: [{ type: Input }]\n};\nconst ɵMatSidenav_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatSidenav);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSidenav, [{\n        type: Component,\n        args: [{\n                selector: 'mat-sidenav',\n                exportAs: 'matSidenav',\n                template: \"<div class=\\\"mat-drawer-inner-container\\\" cdkScrollable>\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\",\n                animations: [matDrawerAnimations.transformDrawer],\n                host: {\n                    'class': 'mat-drawer mat-sidenav',\n                    'tabIndex': '-1',\n                    // must prevent the browser from aligning text based on value\n                    '[attr.align]': 'null',\n                    '[class.mat-drawer-end]': 'position === \"end\"',\n                    '[class.mat-drawer-over]': 'mode === \"over\"',\n                    '[class.mat-drawer-push]': 'mode === \"push\"',\n                    '[class.mat-drawer-side]': 'mode === \"side\"',\n                    '[class.mat-drawer-opened]': 'opened',\n                    '[class.mat-sidenav-fixed]': 'fixedInViewport',\n                    '[style.top.px]': 'fixedInViewport ? fixedTopGap : null',\n                    '[style.bottom.px]': 'fixedInViewport ? fixedBottomGap : null'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], null, { fixedInViewport: [{\n            type: Input\n        }], fixedTopGap: [{\n            type: Input\n        }], fixedBottomGap: [{\n            type: Input\n        }] }); })();\nclass MatSidenavContainer extends MatDrawerContainer {\n}\nMatSidenavContainer.ɵfac = function MatSidenavContainer_Factory(t) { return ɵMatSidenavContainer_BaseFactory(t || MatSidenavContainer); };\nMatSidenavContainer.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSidenavContainer, selectors: [[\"mat-sidenav-container\"]], contentQueries: function MatSidenavContainer_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatSidenavContent, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatSidenav, true);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._content = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._allDrawers = _t);\n    } }, hostAttrs: [1, \"mat-drawer-container\", \"mat-sidenav-container\"], hostVars: 2, hostBindings: function MatSidenavContainer_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-drawer-container-explicit-backdrop\", ctx._backdropOverride);\n    } }, exportAs: [\"matSidenavContainer\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_DRAWER_CONTAINER,\n                useExisting: MatSidenavContainer\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c4, decls: 4, vars: 2, consts: [[\"class\", \"mat-drawer-backdrop\", 3, \"mat-drawer-shown\", \"click\", 4, \"ngIf\"], [\"cdkScrollable\", \"\", 4, \"ngIf\"], [1, \"mat-drawer-backdrop\", 3, \"click\"], [\"cdkScrollable\", \"\"]], template: function MatSidenavContainer_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c3);\n        ɵngcc0.ɵɵtemplate(0, MatSidenavContainer_div_0_Template, 1, 2, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵtemplate(3, MatSidenavContainer_mat_sidenav_content_3_Template, 2, 0, \"mat-sidenav-content\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.hasBackdrop);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx._content);\n    } }, directives: [ɵngcc5.NgIf, MatSidenavContent, ɵngcc1.CdkScrollable], styles: [_c5], encapsulation: 2, changeDetection: 0 });\nMatSidenavContainer.propDecorators = {\n    _allDrawers: [{ type: ContentChildren, args: [MatSidenav, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                },] }],\n    _content: [{ type: ContentChild, args: [MatSidenavContent,] }]\n};\nconst ɵMatSidenavContainer_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatSidenavContainer);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSidenavContainer, [{\n        type: Component,\n        args: [{\n                selector: 'mat-sidenav-container',\n                exportAs: 'matSidenavContainer',\n                template: \"<div class=\\\"mat-drawer-backdrop\\\" (click)=\\\"_onBackdropClicked()\\\" *ngIf=\\\"hasBackdrop\\\"\\n     [class.mat-drawer-shown]=\\\"_isShowingBackdrop()\\\"></div>\\n\\n<ng-content select=\\\"mat-sidenav\\\"></ng-content>\\n\\n<ng-content select=\\\"mat-sidenav-content\\\">\\n</ng-content>\\n<mat-sidenav-content *ngIf=\\\"!_content\\\" cdkScrollable>\\n  <ng-content></ng-content>\\n</mat-sidenav-content>\\n\",\n                host: {\n                    'class': 'mat-drawer-container mat-sidenav-container',\n                    '[class.mat-drawer-container-explicit-backdrop]': '_backdropOverride'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                providers: [{\n                        provide: MAT_DRAWER_CONTAINER,\n                        useExisting: MatSidenavContainer\n                    }],\n                styles: [\".mat-drawer-container{position:relative;z-index:1;box-sizing:border-box;-webkit-overflow-scrolling:touch;display:block;overflow:hidden}.mat-drawer-container[fullscreen]{top:0;left:0;right:0;bottom:0;position:absolute}.mat-drawer-container[fullscreen].mat-drawer-container-has-open{overflow:hidden}.mat-drawer-container.mat-drawer-container-explicit-backdrop .mat-drawer-side{z-index:3}.mat-drawer-container.ng-animate-disabled .mat-drawer-backdrop,.mat-drawer-container.ng-animate-disabled .mat-drawer-content,.ng-animate-disabled .mat-drawer-container .mat-drawer-backdrop,.ng-animate-disabled .mat-drawer-container .mat-drawer-content{transition:none}.mat-drawer-backdrop{top:0;left:0;right:0;bottom:0;position:absolute;display:block;z-index:3;visibility:hidden}.mat-drawer-backdrop.mat-drawer-shown{visibility:visible}.mat-drawer-transition .mat-drawer-backdrop{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:background-color,visibility}.cdk-high-contrast-active .mat-drawer-backdrop{opacity:.5}.mat-drawer-content{position:relative;z-index:1;display:block;height:100%;overflow:auto}.mat-drawer-transition .mat-drawer-content{transition-duration:400ms;transition-timing-function:cubic-bezier(0.25, 0.8, 0.25, 1);transition-property:transform,margin-left,margin-right}.mat-drawer{position:relative;z-index:4;display:block;position:absolute;top:0;bottom:0;z-index:3;outline:0;box-sizing:border-box;overflow-y:auto;transform:translate3d(-100%, 0, 0)}.cdk-high-contrast-active .mat-drawer,.cdk-high-contrast-active [dir=rtl] .mat-drawer.mat-drawer-end{border-right:solid 1px currentColor}.cdk-high-contrast-active [dir=rtl] .mat-drawer,.cdk-high-contrast-active .mat-drawer.mat-drawer-end{border-left:solid 1px currentColor;border-right:none}.mat-drawer.mat-drawer-side{z-index:2}.mat-drawer.mat-drawer-end{right:0;transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer{transform:translate3d(100%, 0, 0)}[dir=rtl] .mat-drawer.mat-drawer-end{left:0;right:auto;transform:translate3d(-100%, 0, 0)}.mat-drawer-inner-container{width:100%;height:100%;overflow:auto;-webkit-overflow-scrolling:touch}.mat-sidenav-fixed{position:fixed}\\n\"]\n            }]\n    }], null, { _allDrawers: [{\n            type: ContentChildren,\n            args: [MatSidenav, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                }]\n        }], _content: [{\n            type: ContentChild,\n            args: [MatSidenavContent]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatSidenavModule {\n}\nMatSidenavModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSidenavModule });\nMatSidenavModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatSidenavModule_Factory(t) { return new (t || MatSidenavModule)(); }, imports: [[\n            CommonModule,\n            MatCommonModule,\n            PlatformModule,\n            CdkScrollableModule,\n        ], CdkScrollableModule,\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSidenavModule, { declarations: function () { return [MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent]; }, imports: function () { return [CommonModule,\n        MatCommonModule,\n        PlatformModule,\n        CdkScrollableModule]; }, exports: function () { return [CdkScrollableModule,\n        MatCommonModule, MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSidenavModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    PlatformModule,\n                    CdkScrollableModule,\n                ],\n                exports: [\n                    CdkScrollableModule,\n                    MatCommonModule,\n                    MatDrawer,\n                    MatDrawerContainer,\n                    MatDrawerContent,\n                    MatSidenav,\n                    MatSidenavContainer,\n                    MatSidenavContent,\n                ],\n                declarations: [\n                    MatDrawer,\n                    MatDrawerContainer,\n                    MatDrawerContent,\n                    MatSidenav,\n                    MatSidenavContainer,\n                    MatSidenavContent,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_DRAWER_DEFAULT_AUTOSIZE, MAT_DRAWER_DEFAULT_AUTOSIZE_FACTORY, MatDrawer, MatDrawerContainer, MatDrawerContent, MatSidenav, MatSidenavContainer, MatSidenavContent, MatSidenavModule, matDrawerAnimations, throwMatDuplicatedDrawerError, MAT_DRAWER_CONTAINER as ɵangular_material_src_material_sidenav_sidenav_a };\n\n//# sourceMappingURL=sidenav.js.map","export default \"<div class=\\\"container-fluid messages-main-box\\\">\\r\\n  <div class=\\\"row div-center\\\">\\r\\n    <element-mini-navbar></element-mini-navbar>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <ng-container *ngIf=\\\"UserIdListToDisplay$ | async as UserIds; else UsersLoading\\\">\\r\\n      <ng-container *ngIf=\\\"UserIds.length; else NoUsersToDisplay\\\">\\r\\n        <ng-container *ngIf=\\\"IsHandset$ | async as isHandset; else NotHandset\\\">\\r\\n          <!-- Mobile view -->\\r\\n          <div class=\\\"col-3 col-sm-2 chat-list-container-mobile\\\">\\r\\n            <mat-list dense>\\r\\n              <h4>Chats</h4>\\r\\n              <mat-form-field class=\\\"w-100\\\">\\r\\n                <input matInput [(ngModel)]=\\\"SearchTerm\\\" placeholder=\\\"Search\\\" autocomplete=\\\"off\\\">\\r\\n              </mat-form-field>\\r\\n              <div class=\\\"chat-heads-container-mobile\\\">\\r\\n                <app-chat-list *ngFor=\\\"let UserId of UserIds; trackBy:UserId\\\" [SearchTerm]=\\\"SearchTerm\\\" [IsForHandset]=\\\"true\\\" [UserId]=\\\"UserId\\\">\\r\\n                </app-chat-list>\\r\\n              </div>\\r\\n            </mat-list>\\r\\n          </div>\\r\\n          <div class=\\\"col-9 chat-card-container\\\">\\r\\n            <router-outlet></router-outlet>\\r\\n          </div>\\r\\n        </ng-container>\\r\\n        <!-- Desktop view -->\\r\\n        <ng-template #NotHandset>\\r\\n          <div class=\\\"col-sm-4 col-xl-3 chat-list-container\\\">\\r\\n            <mat-list>\\r\\n              <h3>Chats</h3>\\r\\n              <mat-form-field class=\\\"w-100\\\">\\r\\n                <input matInput [(ngModel)]=\\\"SearchTerm\\\" placeholder=\\\"Search\\\" autocomplete=\\\"off\\\">\\r\\n              </mat-form-field>\\r\\n              <div class=\\\"chat-heads-container\\\">\\r\\n                <app-chat-list *ngFor=\\\"let UserId of UserIds; trackBy:UserId\\\" [SearchTerm]=\\\"SearchTerm\\\"\\r\\n                  [IsForHandset]=\\\"false\\\" [UserId]=\\\"UserId\\\"></app-chat-list>\\r\\n              </div>\\r\\n            </mat-list>\\r\\n          </div>\\r\\n          <div class=\\\"col-sm-8 col-md-7 chat-card-container\\\">\\r\\n            <router-outlet></router-outlet>\\r\\n          </div>\\r\\n        </ng-template>\\r\\n      </ng-container>\\r\\n      <ng-template #NoUsersToDisplay>\\r\\n        <div class=\\\"col div-center my-container\\\">\\r\\n          <mat-card>\\r\\n            <mat-card-header>\\r\\n              <mat-card-title>No chats found.</mat-card-title>\\r\\n              <mat-card-subtitle>Intentar seguir algunos amigos <a [routerLink]=\\\"[ '/Search' ]\\\">here!</a>\\r\\n              </mat-card-subtitle>\\r\\n            </mat-card-header>\\r\\n          </mat-card>\\r\\n        </div>\\r\\n      </ng-template>\\r\\n    </ng-container>\\r\\n    <ng-template #UsersLoading>\\r\\n      <div class=\\\"col div-center my-container\\\">\\r\\n        <element-my-loader></element-my-loader>\\r\\n      </div>\\r\\n    </ng-template>\\r\\n  </div>\\r\\n</div>\";","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { MessagesComponent } from 'src/app/components/messages/messages.component';\r\nimport { AuthGuard } from 'src/app/guards/auth.guard';\r\nimport { UserResolverService } from 'src/app/Services/user-resolver.service';\r\nimport { ChatContainerComponent } from 'src/app/components/messages/chat-container/chat-container.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: MessagesComponent,\r\n    canActivate: [AuthGuard],\r\n    children: [{\r\n      path: ':UserId',\r\n      component: ChatContainerComponent,\r\n      // canActivate: [AuthGuard],\r\n      // resolve: {LoggedUserFromRoute: UserResolverService}\r\n    }],\r\n    // resolve: {LoggedUserFromRoute: UserResolverService}\r\n  },\r\n]\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forChild(routes)\r\n  ]\r\n})\r\nexport class MessagesRoutingModule { }\r\n","import { Component, OnInit, Input, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { IUser } from 'src/app/Models/i-user';\r\nimport { Observable } from 'rxjs';\r\nimport { IMessage } from 'src/app/Models/i-message';\r\nimport { MyAuthService } from 'src/app/Services/my-auth.service';\r\nimport { ChatsService } from 'src/app/Services/chats.service';\r\nimport { tap } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-chat-list',\r\n  templateUrl: './chat-list.component.html',\r\n  styleUrls: ['./chat-list.component.css']\r\n})\r\nexport class ChatListComponent implements OnInit, OnChanges {\r\n  @Input() UserId: string;\r\n  @Input() SearchTerm = '';\r\n  @Input() IsForHandset: boolean;\r\n  HasUnreadMessages = false;\r\n\r\n  User$: Observable<IUser>;\r\n  LastMessage$: Observable<IMessage>;\r\n\r\n  User: IUser;\r\n  Show = true;\r\n\r\n  constructor(\r\n    public MyAuth: MyAuthService,\r\n    public ChatSrv: ChatsService, ) { }\r\n\r\n  ngOnInit() {\r\n    \r\n    this.LastMessage$ = this.ChatSrv.GetLastMessage(this.UserId).pipe(\r\n      tap(r => {\r\n        if (r.Status !== 3 && r.ToId === this.MyAuth.LoggedUser.Id) {\r\n          this.HasUnreadMessages = true;\r\n        } else {\r\n          this.HasUnreadMessages = false;\r\n        }\r\n      })\r\n    );\r\n    this.User$ = this.MyAuth.GetAUserInfoFromStore(this.UserId).pipe(tap(r => {\r\n      if (!r) {\r\n        this.Show = false;\r\n        this.MyAuth.NavTo('Messages');\r\n      } else {\r\n        this.User = r;\r\n      }\r\n    }));\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    // console.log(changes)\r\n    // if (!this.IsForHandset)\r\n      if (!changes.SearchTerm.firstChange) {\r\n        const DisplayName = this.User.DisplayName.toLowerCase();\r\n\r\n        if (!DisplayName.includes(changes.SearchTerm.currentValue.toLowerCase())) {\r\n          this.Show = false;\r\n        } else {\r\n          this.Show = true;\r\n        }\r\n      }\r\n  }\r\n}\r\n","export default \"<div [hidden]=\\\"!Show\\\">\\r\\n  <ng-container *ngIf=\\\"IsForHandset; else DesktopView\\\">\\r\\n    <!-- Mobile view -->\\r\\n    <ng-container *ngIf=\\\"User$ | async as User; else UserLoading\\\">\\r\\n      <mat-list-item [routerLink]=\\\"[ '/Messages', User.Id ]\\\" routerLinkActive=\\\"active-route\\\"\\r\\n        class=\\\"user-tab MousePointer\\\">\\r\\n        <img mat-list-avatar [src]=\\\"User.PhotoURL\\\">\\r\\n      </mat-list-item>\\r\\n    </ng-container>\\r\\n    <ng-template #UserLoading>\\r\\n      <mat-list-item>\\r\\n        <span mat-list-avatar class=\\\"div-center\\\"><i class=\\\"fal fa-spinner fa-spin\\\"></i></span>\\r\\n      </mat-list-item>\\r\\n    </ng-template>\\r\\n  </ng-container>\\r\\n  <ng-template #DesktopView>\\r\\n    <!-- Desktop view -->\\r\\n    <ng-container *ngIf=\\\"User$ | async as User; else UserLoading\\\">\\r\\n      <mat-list-item [routerLink]=\\\"[ '/Messages', User.Id ]\\\" routerLinkActive=\\\"active-route\\\"\\r\\n        class=\\\"user-tab MousePointer\\\">\\r\\n        <img mat-list-avatar [src]=\\\"User.PhotoURL\\\">\\r\\n        <h4 mat-line>{{User.DisplayName}}</h4>\\r\\n        <p mat-line>\\r\\n          <ng-container *ngIf=\\\"LastMessage$ | async as LastMessage; else LastMessageLoading\\\">\\r\\n            <ng-container *ngIf=\\\"LastMessage?.SentOn; else NoLastmessage\\\">\\r\\n              <span *ngIf=\\\"LastMessage.Status==0\\\"><i class=\\\"fal fa-spinner fa-spin\\\"></i> </span>\\r\\n              <span *ngIf=\\\"LastMessage.Status==1 && LastMessage.FromId==MyAuth.LoggedUser?.Id\\\">\\r\\n                <i class=\\\"fal fa-check\\\"></i>\\r\\n              </span>\\r\\n              <span *ngIf=\\\"LastMessage.Status==2 && LastMessage.FromId==MyAuth.LoggedUser?.Id\\\">\\r\\n                <i class=\\\"fal fa-check-double\\\"></i>\\r\\n              </span>\\r\\n              <span style=\\\"color: blue\\\" *ngIf=\\\"LastMessage.Status==3 && LastMessage.FromId==MyAuth.LoggedUser?.Id\\\">\\r\\n                <i class=\\\"fal fa-check-double\\\"></i>\\r\\n              </span>\\r\\n              <span>{{' '+LastMessage.Text}}</span>\\r\\n            </ng-container>\\r\\n            <ng-template #NoLastmessage>\\r\\n            </ng-template>\\r\\n          </ng-container>\\r\\n        </p>\\r\\n        <button mat-icon-button class=\\\"unread\\\" *ngIf=\\\"HasUnreadMessages\\\">\\r\\n          <i class=\\\"fal fa-exclamation-circle\\\"></i>\\r\\n        </button>\\r\\n        <ng-template #LastMessageLoading>\\r\\n          Loading...\\r\\n        </ng-template>\\r\\n      </mat-list-item>\\r\\n    </ng-container>\\r\\n    <ng-template #UserLoading>\\r\\n      <mat-list-item>\\r\\n        <span mat-list-avatar class=\\\"div-center\\\"><i class=\\\"fal fa-spinner fa-spin\\\"></i></span>\\r\\n        <p mat-line>Loading...</p>\\r\\n      </mat-list-item>\\r\\n    </ng-template>\\r\\n  </ng-template>\\r\\n</div>\";","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { MyAuthService } from 'src/app/Services/my-auth.service';\r\nimport { map, take, tap } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\nimport { ChatsService } from 'src/app/Services/chats.service';\r\nimport { BreakpointObserver } from '@angular/cdk/layout';\r\n\r\n@Component({\r\n  selector: 'app-messages',\r\n  templateUrl: './messages.component.html',\r\n  styleUrls: ['./messages.component.css']\r\n})\r\nexport class MessagesComponent implements OnInit, OnDestroy {\r\n  UserIdListToDisplay$: Observable<string[]> = this.ChatSrv.GetActiveChatUsersList();\r\n  ParamUserId: string = this.router.url.slice(10);\r\n  SearchTerm: string;\r\n\r\n  Subscriptions: Subscription[] = [];\r\n\r\n  IsHandset$: Observable<boolean> = this.breakpointObserver.observe(['(min-width: 600px)']).pipe(\r\n    map(r => {\r\n      return !r.matches;\r\n    }));;\r\n\r\n  constructor(\r\n    public MyAuth: MyAuthService,\r\n    private ChatSrv: ChatsService,\r\n    public breakpointObserver: BreakpointObserver,\r\n    private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.UpdateUsersList()\r\n\r\n    if (!this.ParamUserId) {\r\n      this.UserIdListToDisplay$.pipe(\r\n        take(1),\r\n        tap(r => {\r\n          // console.log(r)\r\n          if (r.length)\r\n            this.MyAuth.NavTo(`Messages/${r[0]}`)\r\n        })\r\n      ).subscribe()\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.Subscriptions.forEach(sub => {\r\n      sub.unsubscribe()\r\n    })\r\n  }\r\n\r\n  UpdateUsersList() {\r\n    // this.ParamUserId = this.router.url.slice(10)\r\n    this.UserIdListToDisplay$\r\n      .pipe(\r\n        map(Combined => {\r\n          if (this.ParamUserId.length > 25)\r\n            if (!Combined.includes(this.ParamUserId)) {\r\n              Combined.unshift(this.ParamUserId)\r\n            }\r\n          return Combined;\r\n        }))\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}