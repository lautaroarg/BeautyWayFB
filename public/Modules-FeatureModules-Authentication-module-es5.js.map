{"version":3,"sources":["webpack:///src/app/Modules/FeatureModules/Authentication.module.ts","webpack:///src/app/components/auth/register/register.component.ts","webpack:///src/app/components/auth/register/register.component.html","webpack:///src/app/components/auth/login/login.component.ts","webpack:///src/app/components/auth/additional-user-info/additional-user-info.component.html","webpack:///src/app/components/auth/register/register.component.css","webpack:///src/app/components/auth/additional-user-info/additional-user-info.component.ts","webpack:///src/app/components/auth/login/login.component.html","webpack:///src/app/Modules/FeatureRoutings/authentication-routing.module.ts","webpack:///src/app/components/auth/additional-user-info/additional-user-info.component.css","webpack:///src/app/components/auth/login/login.component.css"],"names":["AuthenticationModule","declarations","imports","RegisterComponent","MyAuth","storage","fbUsuario","fb","imageOptSrvc","fbProfesional","showImage","showImageProfesional","processingImage","processingImageProgfesional","processingImageComplete","processingImageCompleteProfesional","processingUpload","Uploading","Loading","isUsuario","EmailErrorMessage","PasswordErrorMessage","TipoDocumentoSeleccionado","TipoDocumentoProfesionalSeleccionado","TipoModalidadTrabajoProfesionalSeleccionado","TipoDeServicioSeleccionado","UpdatePPForm","group","InputImage","required","ProfileCaption","UpdateProProPicForm","FormRegisterUsuario","FirstName","LastName","Email","Gender","Password","nroDocumento","Street","Number","Floor","Dpto","TipoDocumento","Neighborhood","City","Service","Proname","DOB","Activo","FormRegisterProfesional","NombreComercial","PhoneNumber","FormValueChangesSub","valueChanges","subscribe","obs","unsubscribe","error","fileInput","filesToCompressedImageSourceEx","target","files","observableImages","toPromise","image","value","OutputImage","dataURItoBlob","compressedImage","imageDataUrl","blob","file","OutputImageProfesional","fileProfesional","Register","then","user","console","log","FormValues","UserInfo","Id","uid","DisplayName","email","Date","valueOf","PhotoURL","DefaultUserPicURL","FollowingCount","FollowersCount","PostsCount","Provider","TipoServicioProfesional","ModalidadTrabajoProfesional","TipoDeUsuario","calcularEdad","afAuth","updateProfile","displayName","photoURL","afStore","collection","doc","set","filePath","format","fileRef","ref","task","upload","customMetadata","caption","uploadPercent$","percentageChanges","snapshotChanges","pipe","downloadURL$","getDownloadURL","URL","UpdateProfilePic","NavTo","errorCode","code","errorMessage","message","Notify","openSnackBar","event","tab","textLabel","dob","hoy","now","fechaNacimiento","edadMilisegundos","anio","edad","Math","round","selector","template","providers","LoginComponent","NetworkErrorCount","hide","FormLogin","minLength","LoginSub","err","Login","prov","provider","GoogleAuthProvider","FacebookAuthProvider","signInWithPopup","User","BasicUserInfo","get","u","data","props","providerId","LoginWith","pwd","signInWithEmailAndPassword","res","AdditionalUserInfoComponent","CitiesAndStates","UserLoaded","authState","r","AdditionalInfoForm","Status","LivesIn","Interests","About","controls","disable","UpdateUserInfoOnFireStore","disabled","routes","path","component","canActivate","redirectTo","AuthenticationRoutingModule","forChild"],"mappings":"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","file":"Modules-FeatureModules-Authentication-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\n// import { MatFormFieldModule, MatCardModule, MatInputModule, MatButtonModule, MatRadioModule, MatDatepickerModule, MatIconModule, MatSelectModule } from '@angular/material';\r\n// import { MatMomentDateModule } from '@angular/material-moment-adapter';\r\n\r\nimport { SharedModule } from '../shared.module';\r\n\r\nimport { RegisterComponent } from 'src/app/components/auth/register/register.component';\r\nimport { LoginComponent } from 'src/app/components/auth/login/login.component';\r\nimport { AdditionalUserInfoComponent } from 'src/app/components/auth/additional-user-info/additional-user-info.component';\r\nimport { AuthenticationRoutingModule } from '../FeatureRoutings/authentication-routing.module';\r\nimport { MaterialModule2 } from '../Material.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    RegisterComponent,\r\n    LoginComponent,\r\n    AdditionalUserInfoComponent,\r\n  ],\r\n  imports: [\r\n    SharedModule,\r\n    AuthenticationRoutingModule,\r\n\r\n    // Material Modules\r\n    MaterialModule2,\r\n    // MatFormFieldModule,\r\n    // MatCardModule,\r\n    // MatInputModule,\r\n    // MatIconModule,\r\n    // MatButtonModule,\r\n    // MatRadioModule,\r\n    // MatMomentDateModule,\r\n    // MatDatepickerModule,\r\n    // MatSelectModule,\r\n  ]\r\n})\r\nexport class AuthenticationModule { }\r\n","import { AngularFireStorage } from \"@angular/fire/storage\";\r\nimport { ImageOptimizationService } from \"./../../../Services/image-optimization.service\";\r\nimport { ImageCompressService } from \"ng2-image-compress\";\r\nimport { IProfesional } from \"./../../../Models/i-user\";\r\nimport { Component, OnInit, OnDestroy } from \"@angular/core\";\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  RequiredValidator,\r\n  EmailValidator,\r\n  Validators,\r\n} from \"@angular/forms\";\r\n\r\n\r\nimport * as _moment from \"moment\";\r\nimport { MyAuthService } from \"src/app/Services/my-auth.service\";\r\nimport { IUser } from \"src/app/Models/i-user\";\r\nimport { Subscription, Observable } from \"rxjs\";\r\nimport * as moment from \"moment\";\r\nimport { finalize, take } from \"rxjs/operators\";\r\n\r\n@Component({\r\n  selector: \"app-register\",\r\n  templateUrl: \"./register.component.html\",\r\n  styleUrls: [\"./register.component.css\"],\r\n  providers: [],\r\n})\r\nexport class RegisterComponent implements OnInit, OnDestroy {\r\n  FormRegisterUsuario: FormGroup;\r\n  FormRegisterProfesional: FormGroup;\r\n\r\n  file;\r\n  fileProfesional;\r\n  thumbImage;\r\n  UpdatePPForm: FormGroup;\r\n  UpdateProProPicForm: FormGroup;\r\n  samplePic;\r\n  showImage = false;\r\n  showImageProfesional = false;\r\n  processingImage: boolean = false;\r\n  processingImageProgfesional: boolean = false;\r\n  processingImageComplete: boolean = false;\r\n  processingImageCompleteProfesional: boolean = false;\r\n  processingUpload: boolean = false;\r\n  uploadPercent$: Observable<number>;\r\n  downloadURL$: Observable<any>;\r\n  Uploading: boolean = false;\r\n  OutputImage;\r\n  OutputImageProfesional;\r\n\r\n  Loading = false;\r\n  isUsuario = true;\r\n  EmailErrorMessage = \"\";\r\n  PasswordErrorMessage = \"\";\r\n  TipoDocumentoSeleccionado = \"\";\r\n  TipoDocumentoProfesionalSeleccionado = \"\";\r\n  TipoModalidadTrabajoProfesionalSeleccionado = \"\";\r\n  TipoDeServicioSeleccionado = \"\";\r\n  FormValueChangesSub: Subscription;\r\n\r\n  constructor(\r\n    public MyAuth: MyAuthService,\r\n    public storage: AngularFireStorage,\r\n    private fbUsuario: FormBuilder,\r\n    private fb: FormBuilder,\r\n    public imageOptSrvc: ImageOptimizationService,\r\n    private fbProfesional: FormBuilder\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.UpdatePPForm = this.fb.group({\r\n      InputImage: [\"\", Validators.required],\r\n      ProfileCaption: \"\",\r\n    });\r\n    this.UpdateProProPicForm = this.fb.group({\r\n      InputImage: [\"\", Validators.required],\r\n      ProfileCaption: \"\",\r\n    });\r\n\r\n\r\n    this.FormRegisterUsuario = this.fbUsuario.group({\r\n      FirstName: [\"\", new RequiredValidator()],\r\n      LastName: [\"\", new RequiredValidator()],\r\n      Email: [\"\", new RequiredValidator(), new EmailValidator()],\r\n      Gender: [\"\", new RequiredValidator()],\r\n      Password: [\"\", new RequiredValidator()],\r\n      nroDocumento: [\"\", new RequiredValidator()],\r\n      Street: [\"\", new RequiredValidator()],\r\n      Number: [\"\", new RequiredValidator()],\r\n      Floor: [\"\"],\r\n      Dpto: [\"\"],\r\n      TipoDocumento: [\"\", new RequiredValidator()],\r\n      Neighborhood: [\"\", new RequiredValidator()],\r\n      City: [\"\", new RequiredValidator()],\r\n      Service: [\"\", new RequiredValidator()],\r\n      Proname: [\"\", new RequiredValidator()],\r\n      DOB: \"\",\r\n      Activo: true,\r\n    });\r\n\r\n    this.FormRegisterProfesional = this.fbProfesional.group({\r\n      FirstName: [\"\", new RequiredValidator()],\r\n      LastName: [\"\", new RequiredValidator()],\r\n      Email: [\"\", new RequiredValidator(), new EmailValidator()],\r\n      Gender: [\"\"],\r\n      Password: [\"\", new RequiredValidator()],\r\n      nroDocumento: [\"\", new RequiredValidator()],\r\n      Street: [\"\", new RequiredValidator()],\r\n      Number: [\"\", new RequiredValidator()],\r\n      Floor: [\"\"],\r\n      Dpto: [\"\"],\r\n      TipoDocumentoProfesionalSeleccionado: [\"\", new RequiredValidator()],\r\n      TipoDeServicioSeleccionado: [\"\", new RequiredValidator()],\r\n      TipoModalidadTrabajoProfesionalSeleccionado: [\r\n        \"\",\r\n        new RequiredValidator(),\r\n      ],\r\n      Neighborhood: [\"\", new RequiredValidator()],\r\n      City: [\"\", new RequiredValidator()],\r\n      Proname: [\"\", new RequiredValidator()],\r\n      DOB: \"\",\r\n      NombreComercial: \"\",\r\n      PhoneNumber: [\"\"],\r\n      Activo: true,\r\n    });\r\n\r\n    this.FormValueChangesSub = this.FormRegisterUsuario.valueChanges.subscribe(\r\n      (obs) => {\r\n        this.EmailErrorMessage = \"\";\r\n        this.PasswordErrorMessage = \"\";\r\n      }\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    try {\r\n      this.FormValueChangesSub.unsubscribe();\r\n    } catch (error) { }\r\n  }\r\n\r\n  // ESTE METODO PERMITE SELECCIONAR LA IMAGEN Y CARGARLA EN MEMORIA Y GUARDARLA EN LA VARIABLE FILE\r\n  async onChange(fileInput: any) {\r\n    if (this.isUsuario) {\r\n\r\n\r\n\r\n      this.processingImage = true;\r\n      const observableImages =\r\n        await ImageCompressService.filesToCompressedImageSourceEx(\r\n          fileInput.target.files,\r\n          null\r\n        );\r\n\r\n      const image = await observableImages.toPromise();\r\n      this.UpdateProProPicForm.value.InputImage = image;\r\n      this.OutputImage = image;\r\n      const blob = await this.imageOptSrvc.dataURItoBlob(\r\n        this.OutputImage.compressedImage.imageDataUrl\r\n      );\r\n      this.file = blob;\r\n      this.showImage = true;\r\n      this.processingImageComplete = true;\r\n    }\r\n    else{\r\n      this.processingImageProgfesional = true;\r\n      const observableImages =\r\n        await ImageCompressService.filesToCompressedImageSourceEx(\r\n          fileInput.target.files,\r\n          null\r\n        );\r\n\r\n      const image = await observableImages.toPromise();\r\n      this.UpdateProProPicForm.value.InputImage = image;\r\n      this.OutputImageProfesional = image;\r\n      const blob = await this.imageOptSrvc.dataURItoBlob(\r\n        this.OutputImageProfesional.compressedImage.imageDataUrl\r\n      );\r\n      this.fileProfesional = blob;\r\n      this.showImageProfesional = true;\r\n      this.processingImageCompleteProfesional = true;\r\n    }\r\n  }\r\n\r\n\r\n  OnSubmit() {\r\n    this.Loading = true;\r\n    this.MyAuth.Register(\r\n      this.FormRegisterUsuario.value.Email,\r\n      this.FormRegisterUsuario.value.Password\r\n    )\r\n      .then(async (user) => {\r\n        console.log(user);\r\n\r\n        const FormValues = this.FormRegisterUsuario.value;\r\n        const UserInfo: IUser = {\r\n          Id: user.user.uid,\r\n          DisplayName: FormValues.FirstName + \" \" + FormValues.LastName,\r\n          Email: user.user.email,\r\n          Gender: FormValues.Gender,\r\n          DOB: new Date(FormValues.DOB).valueOf(),\r\n          PhotoURL: this.MyAuth.DefaultUserPicURL,\r\n          FollowingCount: 0,\r\n          FollowersCount: 0,\r\n          PostsCount: 0,\r\n          Provider: \"Password\",\r\n          nroDocumento: FormValues.nroDocumento,\r\n          TipoDocumento: this.TipoDocumentoSeleccionado,\r\n          Street: FormValues.Street,\r\n          Number: FormValues.Number,\r\n          Floor: FormValues.Floor,\r\n          Dpto: FormValues.Dpto,\r\n          Neighborhood: FormValues.Neighborhood,\r\n          City: FormValues.City,\r\n\r\n          TipoServicioProfesional: null,\r\n          ModalidadTrabajoProfesional: null,\r\n          TipoDeUsuario: \"usuario\",\r\n          NombreComercial: null,\r\n          PhoneNumber: null,\r\n          Activo: true,\r\n          \r\n        };\r\n        debugger;\r\n        if(this.calcularEdad(UserInfo.DOB)==true)\r\n        {\r\n        \r\n        console.log(UserInfo);\r\n        await this.MyAuth.afAuth.updateProfile({\r\n          displayName: UserInfo.DisplayName,\r\n          photoURL: UserInfo.PhotoURL,\r\n        });\r\n        \r\n        \r\n        await this.MyAuth.afStore\r\n          .collection(\"Users\")\r\n          .doc(user.user.uid)\r\n          .set(UserInfo);\r\n\r\n\r\n        // aca mando la imagen a firebase storage\r\n        const filePath =\r\n          \"Usuarios\" + user.user.uid + \"/ProfilePictures/\" + moment().format(\"D-M-YYYY\");\r\n        const fileRef = this.storage.ref(filePath);\r\n        const task = this.storage.upload(filePath, this.file, {\r\n          customMetadata: { caption: this.UpdatePPForm.value.ProfileCaption },\r\n        });\r\n        this.Uploading = true;\r\n        // observe percentage changes\r\n        this.uploadPercent$ = task.percentageChanges();\r\n\r\n        // get notified when the download URL is available\r\n        task\r\n          .snapshotChanges()\r\n          .pipe(\r\n            finalize(() => {\r\n              this.downloadURL$ = fileRef.getDownloadURL();\r\n              this.downloadURL$.pipe(take(1)).subscribe((URL: string) => {\r\n                this.MyAuth.UpdateProfilePic(URL).subscribe(() => {\r\n                  this.Loading = false;\r\n                  this.MyAuth.NavTo(\"Home\");\r\n                });\r\n              });\r\n            })\r\n          )\r\n          .subscribe();\r\n        \r\n          //  aca mismo agregar la funcion de this.MyAuth para enviar email de verificacion\r\n        }\r\n        \r\n      })\r\n\r\n      .catch((error) => {\r\n        // Handle Errors here.\r\n        this.Loading = false;\r\n        var errorCode = error.code;\r\n        var errorMessage = error.message;\r\n\r\n        console.log(error);\r\n        switch (errorCode) {\r\n          case \"auth/email-already-in-use\":\r\n            this.EmailErrorMessage = errorMessage;\r\n            break;\r\n          case \"auth/invalid-email\":\r\n            this.EmailErrorMessage = errorMessage;\r\n            break;\r\n          case \"auth/operation-not-allowed\":\r\n            console.log(errorMessage);\r\n            this.EmailErrorMessage = errorMessage;\r\n            break;\r\n          case \"auth/weak-password\":\r\n            this.PasswordErrorMessage = errorMessage;\r\n            break;\r\n\r\n          default:\r\n            this.MyAuth.Notify.openSnackBar(\r\n              \"A ocurrido un error, porfavor intente mas tarde\",\r\n              \"\"\r\n            );\r\n            break;\r\n        }\r\n      });\r\n  }\r\n\r\n  cambiarEstado(event: any) {\r\n    if (event.tab.textLabel == \"Soy usuario\") {\r\n      this.isUsuario = true;\r\n    } else {\r\n      this.isUsuario = false;\r\n    }\r\n  }\r\n  calcularEdad(dob: number){\r\n    var hoy = Date.now();\r\n    var fechaNacimiento = dob\r\n    var edadMilisegundos = hoy - dob\r\n    //anio resperensa a 1 año en milisegundos.\r\n    var anio = 31536000000\r\n    var edad = Math.round(edadMilisegundos/anio)\r\n    if(edad>=18){\r\n      return true;\r\n    }\r\n    else{\r\n      return false;\r\n    }\r\n  }\r\n\r\n  OnSubmitProfesional() {\r\n    this.Loading = true;\r\n    this.MyAuth.Register(\r\n      this.FormRegisterProfesional.value.Email,\r\n      this.FormRegisterProfesional.value.Password\r\n    )\r\n      .then(async (user) => {\r\n        console.log(user);\r\n\r\n        const FormValues = this.FormRegisterProfesional.value;\r\n        const UserInfo: IUser = {\r\n          Id: user.user.uid,\r\n          DisplayName: FormValues.FirstName + \" \" + FormValues.LastName,\r\n          Email: user.user.email,\r\n          Gender: FormValues.Gender,\r\n          DOB: new Date(FormValues.DOB).valueOf(),\r\n          PhotoURL: this.MyAuth.DefaultUserPicURL,\r\n          FollowingCount: 0,\r\n          FollowersCount: 0,\r\n          PostsCount: 0,\r\n          Provider: \"Password\",\r\n          nroDocumento: FormValues.nroDocumento,\r\n          TipoDocumento: this.TipoDocumentoProfesionalSeleccionado,\r\n          ModalidadTrabajoProfesional:\r\n            this.TipoModalidadTrabajoProfesionalSeleccionado,\r\n          TipoServicioProfesional: this.TipoDeServicioSeleccionado,\r\n          Street: FormValues.Street,\r\n          Number: FormValues.Number,\r\n          Floor: FormValues.Floor,\r\n          Dpto: FormValues.Dpto,\r\n          Neighborhood: FormValues.Neighborhood,\r\n          City: FormValues.City,\r\n          TipoDeUsuario: \"profesional\",\r\n          NombreComercial: FormValues.NombreComercial,\r\n          PhoneNumber: FormValues.PhoneNumber,\r\n          Activo: true,\r\n        };\r\n\r\n        console.log(UserInfo);\r\n        await this.MyAuth.afAuth.updateProfile({\r\n          displayName: UserInfo.DisplayName,\r\n          photoURL: UserInfo.PhotoURL,\r\n        });\r\n        await this.MyAuth.afStore\r\n          .collection(\"Users\")\r\n          .doc(user.user.uid)\r\n          .set(UserInfo);\r\n\r\n        const filePath =\r\n          \"Profesional\" + user.user.uid + \"/ProfilePictures/\" + moment().format(\"D-M-YYYY\");\r\n        const fileRef = this.storage.ref(filePath);\r\n        const task = this.storage.upload(filePath, this.file, {\r\n          customMetadata: { caption: this.UpdatePPForm.value.ProfileCaption },\r\n        });\r\n        this.Uploading = true;\r\n        this.uploadPercent$ = task.percentageChanges();\r\n\r\n        // get notified when the download URL is available\r\n        task\r\n          .snapshotChanges()\r\n          .pipe(\r\n            finalize(() => {\r\n              this.downloadURL$ = fileRef.getDownloadURL();\r\n              this.downloadURL$.pipe(take(1)).subscribe((URL: string) => {\r\n                this.MyAuth.UpdateProfilePic(URL).subscribe(() => {\r\n                  this.Loading = false;\r\n                  this.MyAuth.NavTo(\"Home\");\r\n                });\r\n              });\r\n            })\r\n          )\r\n          .subscribe();\r\n\r\n        //  aca mismo agregar la funcion de this.MyAuth para enviar email de verificacion\r\n\r\n        this.Loading = false;\r\n        this.MyAuth.NavTo(\"Home\");\r\n      })\r\n\r\n      .catch((error) => {\r\n        // Handle Errors here.\r\n        this.Loading = false;\r\n        var errorCode = error.code;\r\n        var errorMessage = error.message;\r\n\r\n        console.log(error);\r\n        switch (errorCode) {\r\n          case \"auth/email-already-in-use\":\r\n            this.EmailErrorMessage = errorMessage;\r\n            break;\r\n          case \"auth/invalid-email\":\r\n            this.EmailErrorMessage = errorMessage;\r\n            break;\r\n          case \"auth/operation-not-allowed\":\r\n            console.log(errorMessage);\r\n            this.EmailErrorMessage = errorMessage;\r\n            break;\r\n          case \"auth/weak-password\":\r\n            this.PasswordErrorMessage = errorMessage;\r\n            break;\r\n\r\n          default:\r\n            this.MyAuth.Notify.openSnackBar(\r\n              \"A ocurrido un error, porfavor intente mas tarde\",\r\n              \"\"\r\n            );\r\n            break;\r\n        }\r\n      });\r\n  }\r\n}\r\n","export default \"<div class=\\\"container-fluid\\\" id=\\\"grid\\\">\\r\\n  <div class=\\\"col-12 col-sm-10 offset-sm-1 col-md-8 offset-md-2 col-lg-6 offset-lg-3\\\">\\r\\n    <mat-card class=\\\"FullCard\\\">\\r\\n      <mat-card-header>\\r\\n        <mat-card-title>Registrarse</mat-card-title>\\r\\n      </mat-card-header>\\r\\n      <mat-card-content>\\r\\n        <mat-tab-group (selectedTabChange)=\\\"cambiarEstado($event)\\\">\\r\\n          <mat-tab label=\\\"Soy usuario\\\" (model)=\\\"isUsuario\\\">\\r\\n            <form class=\\\"example-form\\\" [formGroup]=\\\"FormRegisterUsuario\\\">\\r\\n              <div class=\\\"controls-container\\\">\\r\\n                <form [formGroup]=\\\"UpdatePPForm\\\" (submit)=\\\"OnSubmit()\\\">\\r\\n                  <div mat-dialog-content>\\r\\n                    <input type=\\\"file\\\" style=\\\"display:none;\\\" formControlName=\\\"InputImage\\\" accept=\\\"image/*\\\" #InputFile\\r\\n                      (change)=\\\"onChange($event)\\\" required>\\r\\n                    <button mat-icon-button type=\\\"button\\\" (click)=\\\"InputFile.click()\\\" *ngIf=\\\"OutputImage == undefined\\\">\\r\\n                      <i class=\\\"fal fa-paperclip fa-lg\\\"></i>\\r\\n                    </button>\\r\\n                    <div>\\r\\n                      <img src=\\\"{{OutputImage.compressedImage.imageDataUrl}}\\\" width=\\\"150\\\" height=\\\"150\\\" *ngIf=\\\"showImage\\\"\\r\\n                        class=\\\"responsive-img\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div mat-dialog-actions>\\r\\n                    <mat-progress-bar *ngIf=\\\"Uploading\\\" mode=\\\"determinate\\\" [value]=\\\"(uploadPercent$ | async)\\\">\\r\\n                    </mat-progress-bar>\\r\\n                    <button mat-raised-button type=\\\"reset\\\" (click)=\\\"onNoClick()\\\">Cancelar</button>\\r\\n                    <button mat-raised-button color=\\\"primary\\\" (click)=\\\"InputFile.click()\\\"\\r\\n                      [disabled]=\\\"!UpdatePPForm.valid || !processingImageComplete\\\"\\r\\n                      [attr.cdkFocusInitial]=\\\"processingImageComplete ? '' : null\\\">Actualizar</button>\\r\\n                  </div>\\r\\n                </form>\\r\\n                <div class=\\\"row\\\" style=\\\"margin:0%;\\\">\\r\\n                  <div class=\\\"col-6\\\" align=right style=\\\"margin-top: 1%;\\\">\\r\\n                    <mat-form-field appearance=\\\"fill\\\">\\r\\n                      <mat-label>Tipo de documento</mat-label>\\r\\n                      <mat-select [(value)]=\\\"TipoDocumentoSeleccionado\\\" required>\\r\\n                        <mat-option value=\\\"DNI\\\">\\r\\n                          DNI\\r\\n                        </mat-option>\\r\\n                        <mat-option value=\\\"Pasaporte\\\">\\r\\n                          Pasaporte\\r\\n                        </mat-option>\\r\\n                      </mat-select>\\r\\n                    </mat-form-field>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-6\\\" style=\\\"margin-top:2.4%;\\\">\\r\\n                    <mat-form-field class=\\\"form-field w-100\\\">\\r\\n                      <input matInput placeholder=\\\"Nro documento\\\" formControlName=\\\"nroDocumento\\\" type=\\\"text\\\"\\r\\n                        autocomplete=\\\"off\\\" accept=\\\"nroDocumento\\\" required>\\r\\n                      <mat-error *ngIf=\\\"FormRegisterUsuario.controls.nroDocumento.hasError('required')\\\">\\r\\n                        Su número de documento es <strong>obligatorio</strong>\\r\\n                      </mat-error>\\r\\n                    </mat-form-field>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\" style=\\\"margin:0;\\\">\\r\\n                  <div class=\\\"col-6\\\">\\r\\n                    <mat-form-field class=\\\"form-field w-100\\\">\\r\\n                      <input matInput placeholder=\\\"Nombre\\\" formControlName=\\\"FirstName\\\" type=\\\"text\\\" autocomplete=\\\"off\\\"\\r\\n                        accept=\\\"FirstName\\\" required>\\r\\n                      <mat-error *ngIf=\\\"FormRegisterUsuario.controls.FirstName.hasError('required')\\\">\\r\\n                        Su nombre es <strong>obligatorio</strong>\\r\\n                      </mat-error>\\r\\n                    </mat-form-field>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-6\\\">\\r\\n                    <mat-form-field class=\\\"form-field w-100\\\">\\r\\n                      <input matInput placeholder=\\\"Apellido\\\" formControlName=\\\"LastName\\\" type=\\\"text\\\" autocomplete=\\\"off\\\"\\r\\n                        accept=\\\"LastName\\\" required>\\r\\n                      <mat-error *ngIf=\\\"FormRegisterUsuario.controls.LastName.hasError('required')\\\">\\r\\n                        Su apellido es<strong> obligatorio</strong>\\r\\n                      </mat-error>\\r\\n                    </mat-form-field>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"col\\\" align=center>\\r\\n                  <mat-radio-group formControlName=\\\"Gender\\\" class=\\\"form-field w-100\\\">\\r\\n                    <mat-radio-button value=\\\"Masculino\\\" name=\\\"Gender\\\">Masculino</mat-radio-button>\\r\\n                    <mat-radio-button value=\\\"Femenino\\\" name=\\\"Gender\\\" style=\\\"margin: 0 20px;\\\">Femenino</mat-radio-button>\\r\\n                  </mat-radio-group>\\r\\n                </div>\\r\\n                <div class=\\\"col\\\">\\r\\n                  <mat-form-field class=\\\"form-field w-100\\\">\\r\\n                    <input matInput [matDatepicker]=\\\"dp\\\" placeholder=\\\"Fecha de Nacimiento\\\" formControlName=\\\"DOB\\\">\\r\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"dp\\\"></mat-datepicker-toggle>\\r\\n                    <mat-datepicker #dp></mat-datepicker>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\" style=\\\"margin:0;\\\">\\r\\n                  <div class=\\\"col-6\\\">\\r\\n                    <mat-form-field class=\\\"form-field w-100\\\">\\r\\n                      <input matInput placeholder=\\\"Calle\\\" formControlName=\\\"Street\\\" type=\\\"text\\\" autocomplete=\\\"off\\\"\\r\\n                        accept=\\\"Street\\\" required>\\r\\n                      <mat-error *ngIf=\\\"FormRegisterUsuario.controls.Street.hasError('required')\\\">\\r\\n                        Su calle es<strong> obligatoria</strong>\\r\\n                      </mat-error>\\r\\n                    </mat-form-field>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-6\\\">\\r\\n                    <mat-form-field class=\\\"form-field w-100\\\">\\r\\n                      <input matInput placeholder=\\\"Altura\\\" formControlName=\\\"Number\\\" type=\\\"number\\\" autocomplete=\\\"off\\\"\\r\\n                        accept=\\\"Number\\\" required>\\r\\n                      <mat-error *ngIf=\\\"FormRegisterUsuario.controls.Number.hasError('required')\\\">\\r\\n                        La altura de su domicilio es<strong> obligatoria</strong>\\r\\n                      </mat-error>\\r\\n                    </mat-form-field>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\" style=\\\"margin:0;\\\">\\r\\n                  <div class=\\\"col-6\\\">\\r\\n                    <mat-form-field class=\\\"form-field w-100\\\">\\r\\n                      <input matInput placeholder=\\\"Piso\\\" formControlName=\\\"Floor\\\" type=\\\"text\\\" autocomplete=\\\"off\\\"\\r\\n                        accept=\\\"Floor\\\">\\r\\n                    </mat-form-field>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-6\\\">\\r\\n                    <mat-form-field class=\\\"form-field w-100\\\">\\r\\n                      <input matInput placeholder=\\\"Departamento\\\" formControlName=\\\"Dpto\\\" type=\\\"text\\\" autocomplete=\\\"off\\\"\\r\\n                        accept=\\\"Dpto\\\">\\r\\n                    </mat-form-field>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\" style=\\\"margin:0;\\\">\\r\\n                  <div class=\\\"col-6\\\">\\r\\n                    <mat-form-field class=\\\"form-field w-100\\\">\\r\\n                      <input matInput placeholder=\\\"Barrio\\\" formControlName=\\\"Neighborhood\\\" type=\\\"text\\\" autocomplete=\\\"off\\\"\\r\\n                        accept=\\\"Neighborhood\\\" required>\\r\\n                      <mat-error *ngIf=\\\"FormRegisterUsuario.controls.Street.hasError('required')\\\">\\r\\n                        Su barrio es<strong> obligatorio</strong>\\r\\n                      </mat-error>\\r\\n                    </mat-form-field>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-6\\\">\\r\\n                    <mat-form-field class=\\\"form-field w-100\\\">\\r\\n                      <input matInput placeholder=\\\"Localidad\\\" formControlName=\\\"City\\\" type=\\\"text\\\" autocomplete=\\\"off\\\"\\r\\n                        accept=\\\"City\\\" required>\\r\\n                      <mat-error *ngIf=\\\"FormRegisterUsuario.controls.City.hasError('required')\\\">\\r\\n                        La localidad es<strong> obligatoria</strong>\\r\\n                      </mat-error>\\r\\n                    </mat-form-field>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"col\\\">\\r\\n                  <mat-form-field class=\\\"form-field w-100\\\">\\r\\n                    <input matInput placeholder=\\\"Correo electronico\\\" formControlName=\\\"Email\\\" type=\\\"email\\\" required>\\r\\n                    <mat-hint>{{EmailErrorMessage}}</mat-hint>\\r\\n                    <mat-error *ngIf=\\\"FormRegisterUsuario.controls.Email.hasError('email')\\\">\\r\\n                      Por favor, Ingrese un correo electronico valido\\r\\n                    </mat-error>\\r\\n                    <mat-error *ngIf=\\\"FormRegisterUsuario.controls.Email.hasError('required')\\\">\\r\\n                      Su correo es <strong>obligatorio</strong>\\r\\n                    </mat-error>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n                <div class=\\\"col\\\">\\r\\n                  <mat-form-field class=\\\"form-field w-100\\\">\\r\\n                    <input matInput placeholder=\\\"Contraseña\\\" formControlName=\\\"Password\\\" type=\\\"password\\\" required>\\r\\n                    <mat-hint>{{PasswordErrorMessage}}</mat-hint>\\r\\n                    <mat-error *ngIf=\\\"FormRegisterUsuario.controls.Password.hasError('required')\\\">\\r\\n                      Contraseña <strong>obligatoria</strong>\\r\\n                    </mat-error>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n              </div>\\r\\n            </form>\\r\\n          </mat-tab>\\r\\n          <mat-tab label=\\\"Soy profesional\\\" (model)=\\\"isUsuario!\\\">\\r\\n            <form class=\\\"example-form\\\" [formGroup]=\\\"FormRegisterProfesional\\\">\\r\\n              <div class=\\\"controls-container\\\">\\r\\n                <form [formGroup]=\\\"UpdateProProPicForm\\\" (submit)=\\\"OnSubmit()\\\">\\r\\n                  <div mat-dialog-content>\\r\\n                    <input type=\\\"file\\\" style=\\\"display:none;\\\" formControlName=\\\"InputImage\\\" accept=\\\"image/*\\\"\\r\\n                      #InputFileProfesional (change)=\\\"onChange($event)\\\" required>\\r\\n                    <button mat-icon-button type=\\\"button\\\" (click)=\\\"InputFileProfesional.click()\\\"\\r\\n                      *ngIf=\\\"OutputImageProfesional== undefined\\\">\\r\\n                      <i class=\\\"fal fa-paperclip fa-lg\\\"></i>\\r\\n                    </button>\\r\\n                    <div>\\r\\n                      <img src=\\\"{{OutputImageProfesional.compressedImage.imageDataUrl}}\\\" width=\\\"100px\\\" height=\\\"100px\\\"\\r\\n                        *ngIf=\\\"showImageProfesional\\\" class=\\\"responsive-img\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div mat-dialog-actions>\\r\\n                    <mat-progress-bar *ngIf=\\\"Uploading\\\" mode=\\\"determinate\\\" [value]=\\\"(uploadPercent$ | async)\\\">\\r\\n                    </mat-progress-bar>\\r\\n                    <button mat-raised-button type=\\\"reset\\\" (click)=\\\"onNoClick()\\\">Cancelar</button>\\r\\n                    <button mat-raised-button color=\\\"primary\\\" (click)=\\\"InputFileProfesional.click()\\\"\\r\\n                      [disabled]=\\\"!UpdateProProPicForm.valid || !processingImageCompleteProfesional\\\"\\r\\n                      [attr.cdkFocusInitial]=\\\"processingImageCompleteProfesional ? '' : null\\\">Actualizar</button>\\r\\n                  </div>\\r\\n                </form>\\r\\n                <div class=\\\"row\\\" style=\\\"margin:0%;\\\">\\r\\n                  <div class=\\\"col-6\\\" align=right style=\\\"margin-top: 1%;\\\">\\r\\n                    <mat-form-field appearance=\\\"fill\\\">\\r\\n                      <mat-label>Tipo de documento</mat-label>\\r\\n                      <mat-select [(value)]=\\\"TipoDocumentoProfesionalSeleccionado\\\" required>\\r\\n                        <mat-option value=\\\"DNI\\\">\\r\\n                          DNI\\r\\n                        </mat-option>\\r\\n                        <mat-option value=\\\"Pasaporte\\\">\\r\\n                          Pasaporte\\r\\n                        </mat-option>\\r\\n                      </mat-select>\\r\\n                    </mat-form-field>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-6\\\" style=\\\"margin-top:2.4%;\\\">\\r\\n                    <mat-form-field class=\\\"form-field w-100\\\">\\r\\n                      <input matInput placeholder=\\\"Nro documento\\\" formControlName=\\\"nroDocumento\\\" type=\\\"text\\\"\\r\\n                        autocomplete=\\\"off\\\" accept=\\\"nroDocumento\\\" required>\\r\\n                      <mat-error *ngIf=\\\"FormRegisterProfesional.controls.nroDocumento.hasError('required')\\\">\\r\\n                        Su número de documento es <strong>obligatorio</strong>\\r\\n                      </mat-error>\\r\\n                    </mat-form-field>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\" style=\\\"margin:0;\\\">\\r\\n                  <div class=\\\"col-6\\\">\\r\\n                    <mat-form-field class=\\\"form-field w-100\\\">\\r\\n                      <input matInput placeholder=\\\"Nombre\\\" formControlName=\\\"FirstName\\\" type=\\\"text\\\" autocomplete=\\\"off\\\"\\r\\n                        accept=\\\"FirstName\\\" required>\\r\\n                      <mat-error *ngIf=\\\"FormRegisterProfesional.controls.FirstName.hasError('required')\\\">\\r\\n                        Su nombre es <strong>obligatorio</strong>\\r\\n                      </mat-error>\\r\\n                    </mat-form-field>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-6\\\">\\r\\n                    <mat-form-field class=\\\"form-field w-100\\\">\\r\\n                      <input matInput placeholder=\\\"Apellido\\\" formControlName=\\\"LastName\\\" type=\\\"text\\\" autocomplete=\\\"off\\\"\\r\\n                        accept=\\\"LastName\\\" required>\\r\\n                      <mat-error *ngIf=\\\"FormRegisterProfesional.controls.LastName.hasError('required')\\\">\\r\\n                        Su apellido es<strong> obligatorio</strong>\\r\\n                      </mat-error>\\r\\n                    </mat-form-field>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"col\\\" align=center>\\r\\n                  <mat-radio-group formControlName=\\\"Gender\\\" class=\\\"form-field w-100\\\">\\r\\n                    <mat-radio-button value=\\\"Masculino\\\" name=\\\"Gender\\\">Masculino</mat-radio-button>\\r\\n                    <mat-radio-button value=\\\"Femenino\\\" name=\\\"Gender\\\" style=\\\"margin: 0 20px;\\\">Femenino</mat-radio-button>\\r\\n                  </mat-radio-group>\\r\\n                </div>\\r\\n                <div class=\\\"col\\\">\\r\\n                  <mat-form-field class=\\\"form-field w-100\\\">\\r\\n                    <input matInput [matDatepicker]=\\\"dpp\\\" placeholder=\\\"Fecha de Nacimiento\\\" formControlName=\\\"DOB\\\">\\r\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"dpp\\\"></mat-datepicker-toggle>\\r\\n                    <mat-datepicker #dpp></mat-datepicker>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\" style=\\\"margin:0;\\\">\\r\\n                  <div class=\\\"col-6\\\">\\r\\n                    <mat-form-field class=\\\"form-field w-100\\\">\\r\\n                      <input matInput placeholder=\\\"Calle\\\" formControlName=\\\"Street\\\" type=\\\"text\\\" autocomplete=\\\"off\\\"\\r\\n                        accept=\\\"Street\\\" required>\\r\\n                      <mat-error *ngIf=\\\"FormRegisterProfesional.controls.Street.hasError('required')\\\">\\r\\n                        Su calle es<strong> obligatoria</strong>\\r\\n                      </mat-error>\\r\\n                    </mat-form-field>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-6\\\">\\r\\n                    <mat-form-field class=\\\"form-field w-100\\\">\\r\\n                      <input matInput placeholder=\\\"Altura\\\" formControlName=\\\"Number\\\" type=\\\"number\\\" autocomplete=\\\"off\\\"\\r\\n                        accept=\\\"Number\\\" required>\\r\\n                      <mat-error *ngIf=\\\"FormRegisterProfesional.controls.Number.hasError('required')\\\">\\r\\n                        La altura de su domicilio es<strong> necesaria</strong>\\r\\n                      </mat-error>\\r\\n                    </mat-form-field>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\" style=\\\"margin:0;\\\">\\r\\n                  <div class=\\\"col-6\\\">\\r\\n                    <mat-form-field class=\\\"form-field w-100\\\">\\r\\n                      <input matInput placeholder=\\\"Piso\\\" formControlName=\\\"Floor\\\" type=\\\"text\\\" autocomplete=\\\"off\\\"\\r\\n                        accept=\\\"Floor\\\">\\r\\n                    </mat-form-field>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-6\\\">\\r\\n                    <mat-form-field class=\\\"form-field w-100\\\">\\r\\n                      <input matInput placeholder=\\\"Departamento\\\" formControlName=\\\"Dpto\\\" type=\\\"text\\\" autocomplete=\\\"off\\\"\\r\\n                        accept=\\\"Dpto\\\">\\r\\n                    </mat-form-field>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\" style=\\\"margin:0;\\\">\\r\\n                  <div class=\\\"col-6\\\">\\r\\n                    <mat-form-field class=\\\"form-field w-100\\\">\\r\\n                      <input matInput placeholder=\\\"Barrio\\\" formControlName=\\\"Neighborhood\\\" type=\\\"text\\\" autocomplete=\\\"off\\\"\\r\\n                        accept=\\\"Neighborhood\\\" required>\\r\\n                      <mat-error *ngIf=\\\"FormRegisterProfesional.controls.Street.hasError('required')\\\">\\r\\n                        Su barrio es<strong> obligatorio</strong>\\r\\n                      </mat-error>\\r\\n                    </mat-form-field>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-6\\\">\\r\\n                    <mat-form-field class=\\\"form-field w-100\\\">\\r\\n                      <input matInput placeholder=\\\"Localidad\\\" formControlName=\\\"City\\\" type=\\\"text\\\" autocomplete=\\\"off\\\"\\r\\n                        accept=\\\"City\\\" required>\\r\\n                      <mat-error *ngIf=\\\"FormRegisterProfesional.controls.City.hasError('required')\\\">\\r\\n                        La localidad es<strong> obligatoria</strong>\\r\\n                      </mat-error>\\r\\n                    </mat-form-field>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\" style=\\\"margin:0;\\\">\\r\\n                  <div class=\\\"col-6\\\">\\r\\n                    <mat-form-field class=\\\"form-field w-100\\\" style=\\\"text-align: center\\\">\\r\\n                      <input matInput placeholder=\\\"Nombre comercial/Nombre del local\\\" formControlName=\\\"NombreComercial\\\"\\r\\n                        type=\\\"text\\\" autocomplete=\\\"off\\\" accept=\\\"NombreComercial\\\">\\r\\n                    </mat-form-field>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-6\\\">\\r\\n                    <mat-form-field class=\\\"form-field w-100\\\" style=\\\"text-align: center\\\">\\r\\n                      <input matInput placeholder=\\\"Número Comercial\\\" formControlName=\\\"PhoneNumber\\\" type=\\\"text\\\"\\r\\n                        autocomplete=\\\"off\\\" accept=\\\"PhoneNumber\\\">\\r\\n                    </mat-form-field>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\" style=\\\"margin:0;\\\">\\r\\n                  <div class=\\\"col-6\\\" align=\\\"right\\\">\\r\\n                    <mat-form-field appearance=\\\"fill\\\">\\r\\n                      <mat-label>Modalidad de trabajo</mat-label>\\r\\n                      <mat-select [(value)]=\\\"TipoModalidadTrabajoProfesionalSeleccionado\\\">\\r\\n                        <mat-option value=\\\"Domicilio\\\">\\r\\n                          Domicilio\\r\\n                        </mat-option>\\r\\n                        <mat-option value=\\\"Local\\\">\\r\\n                          Local\\r\\n                        </mat-option>\\r\\n                        <mat-option value=\\\"Hibrido\\\">\\r\\n                          Hibrido\\r\\n                        </mat-option>\\r\\n                      </mat-select>\\r\\n                    </mat-form-field>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-3\\\" align=right>\\r\\n                    <mat-form-field appearance=\\\"fill\\\">\\r\\n                      <mat-label>Tipo de servicio</mat-label>\\r\\n                      <mat-select [(value)]=\\\"TipoDeServicioSeleccionado\\\">\\r\\n                        <mat-option value=\\\"Peluqueria\\\">\\r\\n                          Peluqueria\\r\\n                        </mat-option>\\r\\n                        <mat-option value=\\\"Barberia\\\">\\r\\n                          Barberia\\r\\n                        </mat-option>\\r\\n                        <mat-option value=\\\"Manicuria\\\">\\r\\n                          Manicuria\\r\\n                        </mat-option>\\r\\n                        <mat-option value=\\\"Pedicuria/Podologia\\\">\\r\\n                          Pedicuria/Podologia\\r\\n                        </mat-option>\\r\\n                        <mat-option value=\\\"Maquillaje\\\">\\r\\n                          Maquillaje\\r\\n                        </mat-option>\\r\\n                        <mat-option value=\\\"Tratamientos Corporales\\\">\\r\\n                          Tratamientos Corporales\\r\\n                        </mat-option>\\r\\n                        <mat-option value=\\\"Depilacion\\\">\\r\\n                          Depilación\\r\\n                        </mat-option>\\r\\n                      </mat-select>\\r\\n                    </mat-form-field>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"col\\\">\\r\\n                  <mat-form-field class=\\\"form-field w-100\\\">\\r\\n                    <input matInput placeholder=\\\"Correo electronico\\\" formControlName=\\\"Email\\\" type=\\\"email\\\" required>\\r\\n                    <mat-hint>{{EmailErrorMessage}}</mat-hint>\\r\\n                    <mat-error *ngIf=\\\"FormRegisterProfesional.controls.Email.hasError('email')\\\">\\r\\n                      Por favor, Ingrese un correo electronico valido\\r\\n                    </mat-error>\\r\\n                    <mat-error *ngIf=\\\"FormRegisterProfesional.controls.Email.hasError('required')\\\">\\r\\n                      Su correo es <strong>obligatorio</strong>\\r\\n                    </mat-error>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n                <div class=\\\"col\\\">\\r\\n                  <mat-form-field class=\\\"form-field w-100\\\">\\r\\n                    <input matInput placeholder=\\\"Contraseña\\\" formControlName=\\\"Password\\\" type=\\\"password\\\" required>\\r\\n                    <mat-hint>{{PasswordErrorMessage}}</mat-hint>\\r\\n                    <mat-error *ngIf=\\\"FormRegisterProfesional.controls.Password.hasError('required')\\\">\\r\\n                      Contraseña <strong>obligatoria</strong>\\r\\n                    </mat-error>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n              </div>\\r\\n            </form>\\r\\n          </mat-tab>\\r\\n        </mat-tab-group>\\r\\n      </mat-card-content>\\r\\n      <mat-card-actions>\\r\\n        <div style=\\\"margin:0 0 15px 15px;\\\">\\r\\n          <button mat-raised-button [disabled]=\\\"isUsuario ? !FormRegisterUsuario.valid : !FormRegisterProfesional.valid\\\"\\r\\n            type=\\\"submit\\\" color=\\\"accent\\\" (click)=\\\"isUsuario ? OnSubmit() : OnSubmitProfesional()\\\">\\r\\n            <span *ngIf=\\\"!Loading\\\">Registrar</span>\\r\\n            <span *ngIf=\\\"Loading\\\" style=\\\"margin:0 19px;\\\"><i class=\\\"fal fa-spinner fa-spin\\\"></i></span>\\r\\n          </button>\\r\\n          <button [routerLink]=\\\"['/Auth/Login']\\\" color=\\\"primary\\\" mat-button class=\\\"boton_ingresar\\\">Ingresar</button>\\r\\n        </div>\\r\\n      </mat-card-actions>\\r\\n    </mat-card>\\r\\n  </div>\\r\\n</div>\";","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { FormBuilder, FormGroup, RequiredValidator, Validators } from '@angular/forms';\r\nimport { MyAuthService } from 'src/app/Services/my-auth.service';\r\nimport * as firebase from 'firebase/app';\r\nimport { Subscription } from 'rxjs';\r\nimport { IUser } from 'src/app/Models/i-user';\r\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit, OnDestroy {\r\n  User: firebase.UserInfo;\r\n  FormLogin: FormGroup;\r\n\r\n  NetworkErrorCount = 0;\r\n\r\n  hide = true;\r\n  Loading = false;\r\n\r\n  EmailErrorMessage = '';\r\n  PasswordErrorMessage = '';\r\n\r\n  LoginSub: Subscription;\r\n  FormValueChangesSub: Subscription;\r\n\r\n  constructor(\r\n    public MyAuth: MyAuthService,\r\n    private fb: FormBuilder) { }\r\n\r\n  ngOnInit() {\r\n    // this.MyAuth.Logout();\r\n    this.FormLogin = this.fb.group({\r\n      Email: ['', [Validators.required, Validators.email]],\r\n      Password: ['', [Validators.required, Validators.minLength(6)]],\r\n    });\r\n\r\n    this.FormValueChangesSub = this.FormLogin.valueChanges.subscribe(obs => {\r\n      // console.log(obs)\r\n      this.EmailErrorMessage = '';\r\n      this.PasswordErrorMessage = '';\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    console.log('ngOnDestroy called');\r\n    try {\r\n      this.LoginSub.unsubscribe();\r\n      this.FormValueChangesSub.unsubscribe();\r\n    } catch (err) {\r\n      // console.log(err)\r\n    }\r\n  }\r\n\r\n  OnSubmit() {\r\n  \r\n    this.Loading = true;\r\n    this.Login();\r\n  }\r\n\r\n  LoginWith(prov: string) {\r\n    let provider: firebase.auth.AuthProvider;\r\n    if (prov == 'Google') {\r\n      provider = new firebase.auth.GoogleAuthProvider;\r\n    }\r\n    else if (prov == 'Facebook') {\r\n      provider = new firebase.auth.FacebookAuthProvider;\r\n         }\r\n\r\n    this.MyAuth.afAuth.signInWithPopup(provider)\r\n      .then(User => {\r\n        // console.log(User)\r\n        this.MyAuth.BasicUserInfo = User.user;\r\n        this.LoginSub = this.MyAuth.afStore.doc('Users/' + User.user.uid).get().subscribe(u => {\r\n          console.log(u.data());\r\n          const data = u.data();\r\n          if (!data.Email) {\r\n            // this.AdditionalInfoRequired = true;\r\n\r\n            const props: IUser = {\r\n              Id: User.user.uid,\r\n              DisplayName: User.user.displayName,\r\n              Email: User.user.email,\r\n              PhotoURL: User.user.photoURL,\r\n              PostsCount: 0,\r\n              FollowersCount: 0,\r\n              FollowingCount: 0,\r\n              Provider: User.user.providerId,\r\n         \r\n            };\r\n\r\n            this.MyAuth.afAuth.updateProfile({ 'displayName': props.DisplayName, 'photoURL': props.PhotoURL });\r\n            this.MyAuth.afStore.doc('Users/' + User.user.uid).set(props).then(() => {\r\n              this.MyAuth.NavTo('/Home');\r\n              this.Loading = false;\r\n            })\r\n              .catch(err => {\r\n                console.log(err);\r\n              });\r\n            this.MyAuth.Notify.openSnackBar('You\\'ve logged in successfully, please tell us something more about you!', '');\r\n          } else {\r\n            // this.MyAuth.Notify.openSnackBar(\"Welcome, \" + u.data().DisplayName, \"\", () => {\r\n            //   this.MyAuth.NavTo('/Home')\r\n            // })\r\n            this.MyAuth.NavTo('/Home');\r\n          }\r\n        });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        if (err.code == 'auth/network-request-failed') {\r\n          this.NetworkErrorCount++;\r\n          if (this.NetworkErrorCount <= 3) {\r\n            console.log('Retrying: ', this.NetworkErrorCount);\r\n            this.LoginWith(prov);\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  Login() {\r\n    const Email = this.FormLogin.value.Email;\r\n    const pwd = this.FormLogin.value.Password;\r\n\r\n    this.MyAuth.afAuth.signInWithEmailAndPassword(Email, pwd).then(res => {\r\n      console.log(res);\r\n      if (res.user.uid) {\r\n        // this.MyAuth.Notify.openSnackBar(`Welcome back, ${res.user.displayName}`, '')\r\n        this.Loading = false;\r\n        this.MyAuth.NavTo('Home');\r\n      }\r\n    })\r\n      .catch(err => {\r\n        console.log(err);\r\n        this.Loading = false;\r\n        const errorCode = err.code;\r\n        const errorMessage = err.message;\r\n\r\n        switch (errorCode) {\r\n          case 'auth/invalid-email':\r\n            this.EmailErrorMessage = errorMessage;\r\n            this.EmailErrorMessage = 'Email invalido, por favor verifique'\r\n            break;\r\n          case 'auth/user-disabled':\r\n            this.EmailErrorMessage = errorMessage;\r\n            this.EmailErrorMessage= 'Usuario deshabilitado'\r\n            \r\n            break;\r\n          case 'auth/user-not-found':\r\n            console.log(errorMessage);\r\n            this.EmailErrorMessage = errorMessage;\r\n            this.EmailErrorMessage = 'Usuario no encontrado'\r\n            break;\r\n          case 'auth/wrong-password':\r\n            this.PasswordErrorMessage = errorMessage;\r\n            this.PasswordErrorMessage = 'La contraseña introducida es incorrecta, por favor verifique';\r\n          \r\n            break;\r\n\r\n          default:\r\n            this.MyAuth.Notify.openSnackBar('Ocurrio un error, inténtelo de nuevo mas tarde', '');\r\n            break;\r\n        }\r\n\r\n        if (err.code == 'auth/network-request-failed') {\r\n          this.MyAuth.Notify.openSnackBar('Existe un problema con su conexion de red, por favor verifique', '', () => { }, () => { }, 3500)\r\n        }\r\n        else {\r\n          this.MyAuth.Notify.openSnackBar(this.EmailErrorMessage, '')\r\n        }\r\n      });\r\n  }\r\n\r\n  // GetLoggedUser(): Observable<IUser> {\r\n  //   return new Observable(observer => {\r\n  //     this.MyAuth.GetLoggedUserInfo()\r\n  //       .subscribe((response => {\r\n  //         if (response) {\r\n  //           console.log(response);\r\n  //           observer.next(response);\r\n  //           observer.complete();\r\n  //         }\r\n  //         else {\r\n  //         }\r\n  //         return response;\r\n  //       }), error => {\r\n  //         observer.error(error);\r\n  //         observer.complete();\r\n  //         console.log(\"Error getting document:\", error);\r\n  //       });\r\n  //   });\r\n  // }\r\n\r\n}\r\n","export default \"<ng-container *ngIf=\\\"UserLoaded; else UserLoading\\\">\\r\\n  <div class=\\\"container-fluid background-gradient\\\">\\r\\n    <div class=\\\"col-12 col-lg-6 offset-lg-3\\\">\\r\\n      <mat-card>\\r\\n        <form [formGroup]=\\\"AdditionalInfoForm\\\" (submit)=\\\"OnSubmit()\\\">\\r\\n          <mat-card-header>\\r\\n            <mat-card-title class=\\\"title\\\">Hello {{MyAuth.LoggedUser.DisplayName}}, Welcome to {{MyAuth.AppTitle}}\\r\\n            </mat-card-title>\\r\\n            <mat-card-title class=\\\"second-title\\\">Tell us something more about you!</mat-card-title>\\r\\n          </mat-card-header>\\r\\n          <mat-card-content>\\r\\n            <div class=\\\"controls-container\\\">\\r\\n              <div class=\\\"col\\\">\\r\\n                <mat-form-field>\\r\\n                  <input matInput formControlName=\\\"DisplayName\\\" placeholder=\\\"DisplayName\\\" type=\\\"text\\\" required>\\r\\n                  <mat-error *ngIf=\\\"AdditionalInfoForm.controls.DisplayName.hasError('required')\\\">\\r\\n                    Name is <strong>required</strong>\\r\\n                  </mat-error>\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n              <div class=\\\"col\\\">\\r\\n                <mat-form-field>\\r\\n                  <input matInput formControlName=\\\"Email\\\" placeholder=\\\"Email\\\" type=\\\"email\\\" required>\\r\\n                  <mat-error *ngIf=\\\"AdditionalInfoForm.controls.Email.hasError('required')\\\">\\r\\n                    Email is <strong>required</strong>\\r\\n                  </mat-error>\\r\\n                  <mat-error *ngIf=\\\"AdditionalInfoForm.controls.Email.hasError('email')\\\">\\r\\n                    Please enter a valid <strong>email address</strong>\\r\\n                  </mat-error>\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n              <div class=\\\"col\\\">\\r\\n                <mat-form-field>\\r\\n                  <input matInput formControlName=\\\"PhoneNumber\\\" type=\\\"number\\\" placeholder=\\\"PhoneNumber\\\">\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n              <div class=\\\"col\\\" style=\\\"margin: 5px 0;\\\">\\r\\n                <mat-radio-group formControlName=\\\"Gender\\\" aria-required=\\\"true\\\">\\r\\n                  <mat-radio-button value=\\\"Male\\\" name=\\\"Gender\\\">Male</mat-radio-button>\\r\\n                  <mat-radio-button value=\\\"Female\\\" name=\\\"Gender\\\" style=\\\"margin-left: 32px;\\\">Female</mat-radio-button>\\r\\n                </mat-radio-group>\\r\\n              </div>\\r\\n              <div class=\\\"col\\\">\\r\\n                <mat-form-field>\\r\\n                  <input matInput [matDatepicker]=\\\"dp\\\" placeholder=\\\"Fecha Nacimiento\\\" formControlName=\\\"DOB\\\">\\r\\n                  <mat-datepicker-toggle matSuffix [for]=\\\"dp\\\"></mat-datepicker-toggle>\\r\\n                  <mat-datepicker #dp></mat-datepicker>\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n              <div class=\\\"col\\\">\\r\\n                <mat-form-field>\\r\\n                  <mat-select formControlName=\\\"Status\\\" placeholder=\\\"Status\\\">\\r\\n                    <mat-option value=\\\"Single\\\">Single</mat-option>\\r\\n                    <mat-option value=\\\"Engaged\\\">Engaged</mat-option>\\r\\n                    <mat-option value=\\\"Married\\\">Married</mat-option>\\r\\n                  </mat-select>\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n              <div class=\\\"col\\\">\\r\\n                <mat-form-field>\\r\\n                  <mat-label>City</mat-label>\\r\\n                  <mat-select formControlName=\\\"LivesIn\\\">\\r\\n                    <mat-option>-- None --</mat-option>\\r\\n                    <mat-optgroup *ngFor=\\\"let State of CitiesAndStates.StatesCities\\\" [label]=\\\"State.State\\\">\\r\\n                      <mat-option *ngFor=\\\"let City of State.Cities\\\" [value]=\\\"City\\\">\\r\\n                        {{City}}\\r\\n                      </mat-option>\\r\\n                    </mat-optgroup>\\r\\n                  </mat-select>\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n              <div class=\\\"col\\\">\\r\\n                <mat-form-field>\\r\\n                  <input matInput formControlName=\\\"Interests\\\" placeholder=\\\"Interests\\\">\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n              <div class=\\\"col\\\">\\r\\n                <mat-form-field>\\r\\n                  <input matInput formControlName=\\\"About\\\" placeholder=\\\"About\\\">\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n            </div>\\r\\n          </mat-card-content>\\r\\n          <mat-card-actions>\\r\\n            <div style=\\\"margin:0 0 15px 15px;\\\">\\r\\n              <button mat-raised-button [disabled]=\\\"AdditionalInfoForm.pristine || AdditionalInfoForm.invalid\\\"\\r\\n                type=\\\"submit\\\" color=\\\"accent\\\">\\r\\n                <span *ngIf=\\\"!Loading\\\">Complete</span>\\r\\n                <span *ngIf=\\\"Loading\\\" style=\\\"margin:0 19px;\\\"><i class=\\\"fal fa-spinner fa-spin\\\"></i></span>\\r\\n              </button>\\r\\n              <button *ngIf=\\\"IsPasswordProvider\\\" (click)=\\\"Skip()\\\" mat-button>Skip</button>\\r\\n            </div>\\r\\n          </mat-card-actions>\\r\\n        </form>\\r\\n      </mat-card>\\r\\n    </div>\\r\\n  </div>\\r\\n</ng-container>\\r\\n<ng-template #UserLoading>\\r\\n  <element-my-loader></element-my-loader>\\r\\n</ng-template>\";","export default \"  .controls-container{\\r\\n    width: 100%;\\r\\n  }\\r\\n  .FullCard{\\r\\n    border-radius: 14px;\\r\\n    background-color: rgba(0, 0, 0, 0.2);\\r\\n  \\r\\n  }\\r\\n  #grid {\\r\\n    background: linear-gradient(#8b73ff,#8a3788);\\r\\n    padding: 80px 0;\\r\\n    /*height: 100vh*/;\\r\\n    /* height: calc(100% - 64px); */\\r\\n  }\\r\\n  .boton_ingresar{\\r\\n    color: rgb(88, 3, 88);\\r\\n  }\\r\\n  \\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlZ2lzdGVyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkVBQUU7SUFDRSxXQUFXO0VBQ2I7RUFDQTtJQUNFLG1CQUFtQjtJQUNuQixvQ0FBb0M7O0VBRXRDO0VBQ0E7SUFDRSw0Q0FBNEM7SUFDNUMsZUFBZTtJQUNmLGdCQUFnQjtJQUNoQiwrQkFBK0I7RUFDakM7RUFFQTtJQUNFLHFCQUFxQjtFQUN2QiIsImZpbGUiOiJyZWdpc3Rlci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiICAuY29udHJvbHMtY29udGFpbmVye1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgfVxyXG4gIC5GdWxsQ2FyZHtcclxuICAgIGJvcmRlci1yYWRpdXM6IDE0cHg7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMik7XHJcbiAgXHJcbiAgfVxyXG4gICNncmlkIHtcclxuICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgjOGI3M2ZmLCM4YTM3ODgpO1xyXG4gICAgcGFkZGluZzogODBweCAwO1xyXG4gICAgLypoZWlnaHQ6IDEwMHZoKi87XHJcbiAgICAvKiBoZWlnaHQ6IGNhbGMoMTAwJSAtIDY0cHgpOyAqL1xyXG4gIH1cclxuXHJcbiAgLmJvdG9uX2luZ3Jlc2Fye1xyXG4gICAgY29sb3I6IHJnYig4OCwgMywgODgpO1xyXG4gIH1cclxuICAiXX0= */\";","import { Component, OnInit, Input } from '@angular/core';\r\nimport { MyAuthService } from 'src/app/Services/my-auth.service';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { cStatesCities } from 'src/app/Models/c-states-cities';\r\nimport { IUser } from 'src/app/Models/i-user';\r\nimport { take } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-additional-user-info',\r\n  templateUrl: './additional-user-info.component.html',\r\n  styleUrls: ['./additional-user-info.component.css']\r\n})\r\nexport class AdditionalUserInfoComponent implements OnInit {\r\n  AdditionalInfoForm: FormGroup;\r\n  CitiesAndStates: cStatesCities = new cStatesCities;\r\n  // @Input() User: any;\r\n  User: IUser;\r\n\r\n  Loading = false;\r\n  UserLoaded = false;\r\n\r\n  constructor(\r\n    public MyAuth: MyAuthService,\r\n    private fb: FormBuilder,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.MyAuth.afAuth.authState.subscribe(r => {\r\n      this.MyAuth.afStore.doc<IUser>(`Users/${r.uid}`).valueChanges().pipe(take(1))\r\n        .subscribe(res => {\r\n          this.User = res;\r\n\r\n          this.AdditionalInfoForm = this.fb.group({\r\n            Id: this.User.Id,\r\n            Email: [this.User.Email, [Validators.required, Validators.email]],\r\n            DisplayName: [this.User.DisplayName, Validators.required],\r\n            Gender: ['Male', Validators.required],\r\n            DOB: new Date(this.User.DOB).valueOf(),\r\n            PhoneNumber: this.User.PhoneNumber,\r\n            PhotoURL: this.User.PhotoURL,\r\n            Status: '',\r\n            LivesIn: '',\r\n            Interests: '',\r\n            About: '',\r\n          });\r\n\r\n          if (this.User.Provider === 'Password') {\r\n            this.AdditionalInfoForm.controls['Email'].disable();\r\n          }\r\n          this.UserLoaded = true;\r\n        });\r\n\r\n    });\r\n  }\r\n\r\n  OnSubmit() {\r\n    console.log(this.AdditionalInfoForm);\r\n    this.Loading = true;\r\n    this.UpdateUserInfoOnFireStore(this.AdditionalInfoForm.value);\r\n  }\r\n\r\n  Skip() {\r\n    this.MyAuth.NavTo('Home');\r\n  }\r\n\r\n  async UpdateUserInfoOnFireStore(User: IUser) {\r\n    User.DOB = User.DOB.valueOf();\r\n\r\n    if (this.AdditionalInfoForm.controls['Email'].disabled) {\r\n      User.Email = this.User.Email;\r\n    }\r\n\r\n    await this.MyAuth.afAuth.updateProfile({ 'displayName': User.DisplayName, 'photoURL': User.PhotoURL });\r\n    await this.MyAuth.afStore.doc('Users/' + User.Id).set(User);\r\n    this.MyAuth.NavTo('/Home');\r\n    this.Loading = false;\r\n  }\r\n\r\n}\r\n","export default \"\\r\\n<div class=\\\"container-fluid\\\" id=\\\"grid\\\">\\r\\n  <div class=\\\"col-12 col-sm-10 offset-sm-1 col-md-8 offset-md-2 col-lg-6 offset-lg-3\\\">\\r\\n    <form [formGroup]=\\\"FormLogin\\\" (submit)=\\\"OnSubmit()\\\">\\r\\n      <mat-card class=\\\"FullCard\\\">\\r\\n        <mat-card-header>\\r\\n          <mat-card-title>Ingresar</mat-card-title>\\r\\n        </mat-card-header>\\r\\n        <mat-card-content>\\r\\n          <div class=\\\"controls-container\\\">\\r\\n            <mat-form-field class=\\\"form-field\\\">\\r\\n              <input matInput placeholder=\\\"Correo electronico\\\" formControlName=\\\"Email\\\" type=\\\"email\\\" required>\\r\\n              <!-- <mat-hint>{{EmairrorMessalEge}}</mat-hint> -->\\r\\n              <mat-error *ngIf=\\\"FormLogin.controls.Email.hasError('required')\\\">\\r\\n                Su correo es <strong>obligatorio</strong>\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field class=\\\"form-field\\\">\\r\\n              <input matInput placeholder=\\\"Contraseña\\\" formControlName=\\\"Password\\\" [type]=\\\"hide ? 'password' : 'text'\\\"\\r\\n              required>\\r\\n              <mat-hint>{{PasswordErrorMessage}}</mat-hint>\\r\\n              <mat-error *ngIf=\\\"FormLogin.controls.Password.hasError('required')\\\">\\r\\n                Su contraseña es<strong> obligatoria</strong>\\r\\n              </mat-error>\\r\\n              <mat-error *ngIf=\\\"FormLogin.controls.Password.hasError('minlength')\\\">\\r\\n                Su contraseña deberia contener <strong>un mínimo de 6</strong> caracteres.\\r\\n              </mat-error>\\r\\n              <mat-icon matSuffix mat-icon-button (click)=\\\"hide = !hide\\\" style=\\\"cursor: pointer;\\\">\\r\\n                <span *ngIf=\\\"hide\\\"><i class=\\\"fal fa-eye-slash\\\"></i></span>\\r\\n                <span *ngIf=\\\"!hide\\\"><i class=\\\"fal fa-eye\\\"></i></span>\\r\\n              </mat-icon>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n        </mat-card-content>\\r\\n        <mat-card-actions class=\\\"link\\\">\\r\\n\\r\\n          <button mat-raised-button [disabled]=\\\"FormLogin.pristine || FormLogin.invalid\\\" type=\\\"submit\\\" class=\\\"btn_ingresar\\\">\\r\\n            <span *ngIf=\\\"!Loading\\\">Ingresar</span>\\r\\n            <span *ngIf=\\\"Loading\\\" style=\\\"margin:0 10px;\\\"><i class=\\\"fal fa-spinner fa-spin\\\"></i></span>\\r\\n          </button>\\r\\n\\r\\n           <h6 class=\\\"link_recuperar\\\">Olvide mi contraseña <a [routerLink]=\\\"['/Auth/recuperar']\\\" >Recuperar</a></h6>\\r\\n           \\r\\n           <h6 class=\\\"link_register\\\">¿Eres nuevo? <a [routerLink]=\\\"[ '/Auth/Register']\\\">hace click</a> y registrate!</h6>\\r\\n\\r\\n          <!-- <button mat-raised-button [routerLink]=\\\"[ '/Register']\\\" color=\\\"primary\\\">Register</button> -->\\r\\n        </mat-card-actions>\\r\\n      </mat-card>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\";","import { Routes, RouterModule } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { RegisterComponent } from 'src/app/components/auth/register/register.component';\r\nimport { LoginComponent } from 'src/app/components/auth/login/login.component';\r\nimport { redirectLoggedInTo, redirectUnauthorizedTo, canActivate } from \"@angular/fire/auth-guard\";\r\nimport { AdditionalUserInfoComponent } from 'src/app/components/auth/additional-user-info/additional-user-info.component';\r\nimport { AuthGuard } from 'src/app/guards/auth.guard';\r\nimport { RecuperarComponent } from 'src/app/components/auth/recuperar/recuperar';\r\nimport { UserPhotoComponent } from 'src/app/components/customElements/user-photo/user-photo.component';\r\nimport { VerificarComponent } from 'src/app/components/auth/verificar/verificar.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'Register',\r\n    component: RegisterComponent,\r\n    // ...canActivate(redirectLoggedInTo(['Home']))\r\n  },\r\n  {\r\n    path: 'Login',\r\n    component: LoginComponent,\r\n  },\r\n  {\r\n    path:'Verificar',\r\n    component:VerificarComponent\r\n  },\r\n  {\r\n    path:'AdditionInfo',\r\n    component: AdditionalUserInfoComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  { path: '', redirectTo: 'Login' },\r\n  {path:'recuperar', component:RecuperarComponent}\r\n \r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forChild(routes)],\r\n  // exports: [RouterModule]\r\n})\r\nexport class AuthenticationRoutingModule { }\r\n","export default \".mat-form-field, .mat-radio-group {\\r\\n    width:100%;\\r\\n}\\r\\n\\r\\n.second-title {\\r\\n    font-size: 12px;\\r\\n    color: #ff4081;\\r\\n}\\r\\n\\r\\n.title {\\r\\n    color:#3f51b5;\\r\\n}\\r\\n\\r\\n.background-gradient {\\r\\n    background: linear-gradient(to right, rgb(40, 60, 134), rgb(69, 162, 71));\\r\\n    padding: 64px 0;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFkZGl0aW9uYWwtdXNlci1pbmZvLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxVQUFVO0FBQ2Q7O0FBRUE7SUFDSSxlQUFlO0lBQ2YsY0FBYztBQUNsQjs7QUFFQTtJQUNJLGFBQWE7QUFDakI7O0FBRUE7SUFDSSx5RUFBeUU7SUFDekUsZUFBZTtBQUNuQiIsImZpbGUiOiJhZGRpdGlvbmFsLXVzZXItaW5mby5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC1mb3JtLWZpZWxkLCAubWF0LXJhZGlvLWdyb3VwIHtcclxuICAgIHdpZHRoOjEwMCU7XHJcbn1cclxuXHJcbi5zZWNvbmQtdGl0bGUge1xyXG4gICAgZm9udC1zaXplOiAxMnB4O1xyXG4gICAgY29sb3I6ICNmZjQwODE7XHJcbn1cclxuXHJcbi50aXRsZSB7XHJcbiAgICBjb2xvcjojM2Y1MWI1O1xyXG59XHJcblxyXG4uYmFja2dyb3VuZC1ncmFkaWVudCB7XHJcbiAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQodG8gcmlnaHQsIHJnYig0MCwgNjAsIDEzNCksIHJnYig2OSwgMTYyLCA3MSkpO1xyXG4gICAgcGFkZGluZzogNjRweCAwO1xyXG59Il19 */\";","export default \".controls-container{\\r\\n  width: 100%;\\r\\n}\\r\\n.Olvido {\\r\\n  text-decoration: none;\\r\\n  color:white;\\r\\n}\\r\\n.controls-container * {\\r\\n  width: 100%;\\r\\n}\\r\\n.FullCard{\\r\\n  border-radius: 14px;\\r\\n  background-color: rgba(0, 0, 0, 0.2);\\r\\n\\r\\n}\\r\\n#grid {\\r\\n  background: linear-gradient(#8b73ff,#8a3788);\\r\\n  padding: 80px 0;\\r\\n  height: 100vh;\\r\\n  /* height: calc(100% - 64px); */\\r\\n}\\r\\nbody { padding: 2em; }\\r\\n/* Shared */\\r\\n.loginBtn {\\r\\n  box-sizing: border-box;\\r\\n  position: relative;\\r\\n  /* width: 13em;  - apply for fixed size */\\r\\n  margin: 0.2em;\\r\\n  margin: 3px 0px !important;\\r\\n  padding: 0 15px 0 46px;\\r\\n  border: none;\\r\\n  text-align: left;\\r\\n  line-height: 34px;\\r\\n  white-space: nowrap;\\r\\n  border-radius: 0.2em;\\r\\n  /* font-size: 16px; */\\r\\n  color: rgb(253, 253, 253);\\r\\n}\\r\\n.loginBtn:before {\\r\\n  content: \\\"\\\";\\r\\n  box-sizing: border-box;\\r\\n  position: absolute;\\r\\n  top: 0;\\r\\n  left: 0;\\r\\n  width: 34px;\\r\\n  height: 100%;\\r\\n}\\r\\n.loginBtn:focus {\\r\\n  outline: none;\\r\\n}\\r\\n.loginBtn:active {\\r\\n  box-shadow: inset 0 0 0 32px rgba(112, 13, 96, 0.842);\\r\\n}\\r\\n/* Facebook */\\r\\n.loginBtn--facebook {\\r\\n  background-color: #4C69BA;\\r\\n  background-image: linear-gradient(#4C69BA, #3B55A0);\\r\\n  /*font-family: \\\"Helvetica neue\\\", Helvetica Neue, Helvetica, Arial, sans-serif;*/\\r\\n  text-shadow: 0 -1px 0 #354C8C;\\r\\n}\\r\\n.loginBtn--facebook:before {\\r\\n  border-right: #364e92 1px solid;\\r\\n  background: url('https://s3-us-west-2.amazonaws.com/s.cdpn.io/14082/icon_facebook.png') 6px 6px no-repeat;\\r\\n}\\r\\n.loginBtn--facebook:hover,\\r\\n.loginBtn--facebook:focus {\\r\\n  background-color: #5B7BD5;\\r\\n  background-image: linear-gradient(#5B7BD5, #4864B1);\\r\\n}\\r\\n/* Google */\\r\\n.loginBtn--google {\\r\\n  /*font-family: \\\"Roboto\\\", Roboto, arial, sans-serif;*/\\r\\n  background: #DD4B39;\\r\\n}\\r\\n.loginBtn--google:before {\\r\\n  border-right: #BB3F30 1px solid;\\r\\n  background: url('https://s3-us-west-2.amazonaws.com/s.cdpn.io/14082/icon_google.png') 6px 6px no-repeat;\\r\\n}\\r\\n.loginBtn--google:hover,\\r\\n.loginBtn--google:focus {\\r\\n  background: #E74B37;\\r\\n}\\r\\n.link{\\r\\n  font-size: 120%;\\r\\n  padding-left: 3%;\\r\\n}\\r\\n.btn_ingresar{\\r\\n  width: 30%;\\r\\n  padding: 0.5%;\\r\\n  left: 35%;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxvZ2luLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXO0FBQ2I7QUFDQTtFQUNFLHFCQUFxQjtFQUNyQixXQUFXO0FBQ2I7QUFFQTtFQUNFLFdBQVc7QUFDYjtBQUNBO0VBQ0UsbUJBQW1CO0VBQ25CLG9DQUFvQzs7QUFFdEM7QUFFQTtFQUNFLDRDQUE0QztFQUM1QyxlQUFlO0VBQ2YsYUFBYTtFQUNiLCtCQUErQjtBQUNqQztBQUVBLE9BQU8sWUFBWSxFQUFFO0FBRXJCLFdBQVc7QUFDWDtFQUNFLHNCQUFzQjtFQUN0QixrQkFBa0I7RUFDbEIseUNBQXlDO0VBQ3pDLGFBQWE7RUFDYiwwQkFBMEI7RUFDMUIsc0JBQXNCO0VBQ3RCLFlBQVk7RUFDWixnQkFBZ0I7RUFDaEIsaUJBQWlCO0VBQ2pCLG1CQUFtQjtFQUNuQixvQkFBb0I7RUFDcEIscUJBQXFCO0VBQ3JCLHlCQUF5QjtBQUMzQjtBQUNBO0VBQ0UsV0FBVztFQUNYLHNCQUFzQjtFQUN0QixrQkFBa0I7RUFDbEIsTUFBTTtFQUNOLE9BQU87RUFDUCxXQUFXO0VBQ1gsWUFBWTtBQUNkO0FBQ0E7RUFDRSxhQUFhO0FBQ2Y7QUFDQTtFQUNFLHFEQUFxRDtBQUN2RDtBQUdBLGFBQWE7QUFDYjtFQUNFLHlCQUF5QjtFQUN6QixtREFBbUQ7RUFDbkQsK0VBQStFO0VBQy9FLDZCQUE2QjtBQUMvQjtBQUNBO0VBQ0UsK0JBQStCO0VBQy9CLHlHQUF5RztBQUMzRztBQUNBOztFQUVFLHlCQUF5QjtFQUN6QixtREFBbUQ7QUFDckQ7QUFHQSxXQUFXO0FBQ1g7RUFDRSxvREFBb0Q7RUFDcEQsbUJBQW1CO0FBQ3JCO0FBQ0E7RUFDRSwrQkFBK0I7RUFDL0IsdUdBQXVHO0FBQ3pHO0FBQ0E7O0VBRUUsbUJBQW1CO0FBQ3JCO0FBRUE7RUFDRSxlQUFlO0VBQ2YsZ0JBQWdCO0FBQ2xCO0FBRUE7RUFDRSxVQUFVO0VBQ1YsYUFBYTtFQUNiLFNBQVM7QUFDWCIsImZpbGUiOiJsb2dpbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRyb2xzLWNvbnRhaW5lcntcclxuICB3aWR0aDogMTAwJTtcclxufVxyXG4uT2x2aWRvIHtcclxuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgY29sb3I6d2hpdGU7XHJcbn1cclxuXHJcbi5jb250cm9scy1jb250YWluZXIgKiB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuLkZ1bGxDYXJke1xyXG4gIGJvcmRlci1yYWRpdXM6IDE0cHg7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjIpO1xyXG5cclxufVxyXG5cclxuI2dyaWQge1xyXG4gIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgjOGI3M2ZmLCM4YTM3ODgpO1xyXG4gIHBhZGRpbmc6IDgwcHggMDtcclxuICBoZWlnaHQ6IDEwMHZoO1xyXG4gIC8qIGhlaWdodDogY2FsYygxMDAlIC0gNjRweCk7ICovXHJcbn1cclxuXHJcbmJvZHkgeyBwYWRkaW5nOiAyZW07IH1cclxuXHJcbi8qIFNoYXJlZCAqL1xyXG4ubG9naW5CdG4ge1xyXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIC8qIHdpZHRoOiAxM2VtOyAgLSBhcHBseSBmb3IgZml4ZWQgc2l6ZSAqL1xyXG4gIG1hcmdpbjogMC4yZW07XHJcbiAgbWFyZ2luOiAzcHggMHB4ICFpbXBvcnRhbnQ7XHJcbiAgcGFkZGluZzogMCAxNXB4IDAgNDZweDtcclxuICBib3JkZXI6IG5vbmU7XHJcbiAgdGV4dC1hbGlnbjogbGVmdDtcclxuICBsaW5lLWhlaWdodDogMzRweDtcclxuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xyXG4gIGJvcmRlci1yYWRpdXM6IDAuMmVtO1xyXG4gIC8qIGZvbnQtc2l6ZTogMTZweDsgKi9cclxuICBjb2xvcjogcmdiKDI1MywgMjUzLCAyNTMpO1xyXG59XHJcbi5sb2dpbkJ0bjpiZWZvcmUge1xyXG4gIGNvbnRlbnQ6IFwiXCI7XHJcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgdG9wOiAwO1xyXG4gIGxlZnQ6IDA7XHJcbiAgd2lkdGg6IDM0cHg7XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG59XHJcbi5sb2dpbkJ0bjpmb2N1cyB7XHJcbiAgb3V0bGluZTogbm9uZTtcclxufVxyXG4ubG9naW5CdG46YWN0aXZlIHtcclxuICBib3gtc2hhZG93OiBpbnNldCAwIDAgMCAzMnB4IHJnYmEoMTEyLCAxMywgOTYsIDAuODQyKTtcclxufVxyXG5cclxuXHJcbi8qIEZhY2Vib29rICovXHJcbi5sb2dpbkJ0bi0tZmFjZWJvb2sge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICM0QzY5QkE7XHJcbiAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KCM0QzY5QkEsICMzQjU1QTApO1xyXG4gIC8qZm9udC1mYW1pbHk6IFwiSGVsdmV0aWNhIG5ldWVcIiwgSGVsdmV0aWNhIE5ldWUsIEhlbHZldGljYSwgQXJpYWwsIHNhbnMtc2VyaWY7Ki9cclxuICB0ZXh0LXNoYWRvdzogMCAtMXB4IDAgIzM1NEM4QztcclxufVxyXG4ubG9naW5CdG4tLWZhY2Vib29rOmJlZm9yZSB7XHJcbiAgYm9yZGVyLXJpZ2h0OiAjMzY0ZTkyIDFweCBzb2xpZDtcclxuICBiYWNrZ3JvdW5kOiB1cmwoJ2h0dHBzOi8vczMtdXMtd2VzdC0yLmFtYXpvbmF3cy5jb20vcy5jZHBuLmlvLzE0MDgyL2ljb25fZmFjZWJvb2sucG5nJykgNnB4IDZweCBuby1yZXBlYXQ7XHJcbn1cclxuLmxvZ2luQnRuLS1mYWNlYm9vazpob3ZlcixcclxuLmxvZ2luQnRuLS1mYWNlYm9vazpmb2N1cyB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzVCN0JENTtcclxuICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQoIzVCN0JENSwgIzQ4NjRCMSk7XHJcbn1cclxuXHJcblxyXG4vKiBHb29nbGUgKi9cclxuLmxvZ2luQnRuLS1nb29nbGUge1xyXG4gIC8qZm9udC1mYW1pbHk6IFwiUm9ib3RvXCIsIFJvYm90bywgYXJpYWwsIHNhbnMtc2VyaWY7Ki9cclxuICBiYWNrZ3JvdW5kOiAjREQ0QjM5O1xyXG59XHJcbi5sb2dpbkJ0bi0tZ29vZ2xlOmJlZm9yZSB7XHJcbiAgYm9yZGVyLXJpZ2h0OiAjQkIzRjMwIDFweCBzb2xpZDtcclxuICBiYWNrZ3JvdW5kOiB1cmwoJ2h0dHBzOi8vczMtdXMtd2VzdC0yLmFtYXpvbmF3cy5jb20vcy5jZHBuLmlvLzE0MDgyL2ljb25fZ29vZ2xlLnBuZycpIDZweCA2cHggbm8tcmVwZWF0O1xyXG59XHJcbi5sb2dpbkJ0bi0tZ29vZ2xlOmhvdmVyLFxyXG4ubG9naW5CdG4tLWdvb2dsZTpmb2N1cyB7XHJcbiAgYmFja2dyb3VuZDogI0U3NEIzNztcclxufVxyXG5cclxuLmxpbmt7XHJcbiAgZm9udC1zaXplOiAxMjAlO1xyXG4gIHBhZGRpbmctbGVmdDogMyU7XHJcbn1cclxuXHJcbi5idG5faW5ncmVzYXJ7XHJcbiAgd2lkdGg6IDMwJTtcclxuICBwYWRkaW5nOiAwLjUlO1xyXG4gIGxlZnQ6IDM1JTtcclxufSJdfQ== */\";"]}