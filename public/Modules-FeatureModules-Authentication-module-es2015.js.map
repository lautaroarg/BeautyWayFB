{"version":3,"sources":["./src/app/Modules/FeatureModules/Authentication.module.ts","./src/app/components/auth/register/register.component.ts","./src/app/components/auth/register/register.component.html","./src/app/components/auth/login/login.component.ts","./src/app/components/auth/additional-user-info/additional-user-info.component.html","./src/app/components/auth/register/register.component.css","./src/app/components/auth/additional-user-info/additional-user-info.component.ts","./src/app/components/auth/login/login.component.html","./src/app/Modules/FeatureRoutings/authentication-routing.module.ts","./src/app/components/auth/additional-user-info/additional-user-info.component.css","./src/app/components/auth/login/login.component.css"],"names":[],"mappings":"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","file":"Modules-FeatureModules-Authentication-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\n// import { MatFormFieldModule, MatCardModule, MatInputModule, MatButtonModule, MatRadioModule, MatDatepickerModule, MatIconModule, MatSelectModule } from '@angular/material';\r\n// import { MatMomentDateModule } from '@angular/material-moment-adapter';\r\n\r\nimport { SharedModule } from '../shared.module';\r\n\r\nimport { RegisterComponent } from 'src/app/components/auth/register/register.component';\r\nimport { LoginComponent } from 'src/app/components/auth/login/login.component';\r\nimport { AdditionalUserInfoComponent } from 'src/app/components/auth/additional-user-info/additional-user-info.component';\r\nimport { AuthenticationRoutingModule } from '../FeatureRoutings/authentication-routing.module';\r\nimport { MaterialModule2 } from '../Material.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    RegisterComponent,\r\n    LoginComponent,\r\n    AdditionalUserInfoComponent,\r\n  ],\r\n  imports: [\r\n    SharedModule,\r\n    AuthenticationRoutingModule,\r\n\r\n    // Material Modules\r\n    MaterialModule2,\r\n    // MatFormFieldModule,\r\n    // MatCardModule,\r\n    // MatInputModule,\r\n    // MatIconModule,\r\n    // MatButtonModule,\r\n    // MatRadioModule,\r\n    // MatMomentDateModule,\r\n    // MatDatepickerModule,\r\n    // MatSelectModule,\r\n  ]\r\n})\r\nexport class AuthenticationModule { }\r\n","import { AngularFireStorage } from \"@angular/fire/storage\";\r\nimport { ImageOptimizationService } from \"./../../../Services/image-optimization.service\";\r\nimport { ImageCompressService } from \"ng2-image-compress\";\r\nimport { IProfesional } from \"./../../../Models/i-user\";\r\nimport { Component, OnInit, OnDestroy } from \"@angular/core\";\r\nimport {\r\n  FormBuilder,\r\n  FormGroup,\r\n  RequiredValidator,\r\n  EmailValidator,\r\n  Validators,\r\n} from \"@angular/forms\";\r\n\r\n\r\nimport * as _moment from \"moment\";\r\nimport { MyAuthService } from \"src/app/Services/my-auth.service\";\r\nimport { IUser } from \"src/app/Models/i-user\";\r\nimport { Subscription, Observable } from \"rxjs\";\r\nimport * as moment from \"moment\";\r\nimport { finalize, take } from \"rxjs/operators\";\r\n\r\n@Component({\r\n  selector: \"app-register\",\r\n  templateUrl: \"./register.component.html\",\r\n  styleUrls: [\"./register.component.css\"],\r\n  providers: [],\r\n})\r\nexport class RegisterComponent implements OnInit, OnDestroy {\r\n  FormRegisterUsuario: FormGroup;\r\n  FormRegisterProfesional: FormGroup;\r\n\r\n  file;\r\n  fileProfesional;\r\n  thumbImage;\r\n  UpdatePPForm: FormGroup;\r\n  UpdateProProPicForm: FormGroup;\r\n  samplePic;\r\n  showImage = false;\r\n  showImageProfesional = false;\r\n  processingImage: boolean = false;\r\n  processingImageProgfesional: boolean = false;\r\n  processingImageComplete: boolean = false;\r\n  processingImageCompleteProfesional: boolean = false;\r\n  processingUpload: boolean = false;\r\n  uploadPercent$: Observable<number>;\r\n  downloadURL$: Observable<any>;\r\n  Uploading: boolean = false;\r\n  OutputImage;\r\n  OutputImageProfesional;\r\n\r\n  Loading = false;\r\n  isUsuario = true;\r\n  EmailErrorMessage = \"\";\r\n  PasswordErrorMessage = \"\";\r\n  TipoDocumentoSeleccionado = \"\";\r\n  TipoDocumentoProfesionalSeleccionado = \"\";\r\n  TipoModalidadTrabajoProfesionalSeleccionado = \"\";\r\n  TipoDeServicioSeleccionado = \"\";\r\n  FormValueChangesSub: Subscription;\r\n\r\n  constructor(\r\n    public MyAuth: MyAuthService,\r\n    public storage: AngularFireStorage,\r\n    private fbUsuario: FormBuilder,\r\n    private fb: FormBuilder,\r\n    public imageOptSrvc: ImageOptimizationService,\r\n    private fbProfesional: FormBuilder\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.UpdatePPForm = this.fb.group({\r\n      InputImage: [\"\", Validators.required],\r\n      ProfileCaption: \"\",\r\n    });\r\n    this.UpdateProProPicForm = this.fb.group({\r\n      InputImage: [\"\", Validators.required],\r\n      ProfileCaption: \"\",\r\n    });\r\n\r\n\r\n    this.FormRegisterUsuario = this.fbUsuario.group({\r\n      FirstName: [\"\", new RequiredValidator()],\r\n      LastName: [\"\", new RequiredValidator()],\r\n      Email: [\"\", new RequiredValidator(), new EmailValidator()],\r\n      Gender: [\"\", new RequiredValidator()],\r\n      Password: [\"\", new RequiredValidator()],\r\n      nroDocumento: [\"\", new RequiredValidator()],\r\n      Street: [\"\", new RequiredValidator()],\r\n      Number: [\"\", new RequiredValidator()],\r\n      Floor: [\"\"],\r\n      Dpto: [\"\"],\r\n      TipoDocumento: [\"\", new RequiredValidator()],\r\n      Neighborhood: [\"\", new RequiredValidator()],\r\n      City: [\"\", new RequiredValidator()],\r\n      Service: [\"\", new RequiredValidator()],\r\n      Proname: [\"\", new RequiredValidator()],\r\n      DOB: \"\",\r\n      Activo: true,\r\n    });\r\n\r\n    this.FormRegisterProfesional = this.fbProfesional.group({\r\n      FirstName: [\"\", new RequiredValidator()],\r\n      LastName: [\"\", new RequiredValidator()],\r\n      Email: [\"\", new RequiredValidator(), new EmailValidator()],\r\n      Gender: [\"\"],\r\n      Password: [\"\", new RequiredValidator()],\r\n      nroDocumento: [\"\", new RequiredValidator()],\r\n      Street: [\"\", new RequiredValidator()],\r\n      Number: [\"\", new RequiredValidator()],\r\n      Floor: [\"\"],\r\n      Dpto: [\"\"],\r\n      TipoDocumentoProfesionalSeleccionado: [\"\", new RequiredValidator()],\r\n      TipoDeServicioSeleccionado: [\"\", new RequiredValidator()],\r\n      TipoModalidadTrabajoProfesionalSeleccionado: [\r\n        \"\",\r\n        new RequiredValidator(),\r\n      ],\r\n      Neighborhood: [\"\", new RequiredValidator()],\r\n      City: [\"\", new RequiredValidator()],\r\n      Proname: [\"\", new RequiredValidator()],\r\n      DOB: \"\",\r\n      NombreComercial: \"\",\r\n      PhoneNumber: [\"\"],\r\n      Activo: true,\r\n    });\r\n\r\n    this.FormValueChangesSub = this.FormRegisterUsuario.valueChanges.subscribe(\r\n      (obs) => {\r\n        this.EmailErrorMessage = \"\";\r\n        this.PasswordErrorMessage = \"\";\r\n      }\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    try {\r\n      this.FormValueChangesSub.unsubscribe();\r\n    } catch (error) { }\r\n  }\r\n\r\n  // ESTE METODO PERMITE SELECCIONAR LA IMAGEN Y CARGARLA EN MEMORIA Y GUARDARLA EN LA VARIABLE FILE\r\n  async onChange(fileInput: any) {\r\n    if (this.isUsuario) {\r\n\r\n\r\n\r\n      this.processingImage = true;\r\n      const observableImages =\r\n        await ImageCompressService.filesToCompressedImageSourceEx(\r\n          fileInput.target.files,\r\n          null\r\n        );\r\n\r\n      const image = await observableImages.toPromise();\r\n      this.UpdateProProPicForm.value.InputImage = image;\r\n      this.OutputImage = image;\r\n      const blob = await this.imageOptSrvc.dataURItoBlob(\r\n        this.OutputImage.compressedImage.imageDataUrl\r\n      );\r\n      this.file = blob;\r\n      this.showImage = true;\r\n      this.processingImageComplete = true;\r\n    }\r\n    else{\r\n      this.processingImageProgfesional = true;\r\n      const observableImages =\r\n        await ImageCompressService.filesToCompressedImageSourceEx(\r\n          fileInput.target.files,\r\n          null\r\n        );\r\n\r\n      const image = await observableImages.toPromise();\r\n      this.UpdateProProPicForm.value.InputImage = image;\r\n      this.OutputImageProfesional = image;\r\n      const blob = await this.imageOptSrvc.dataURItoBlob(\r\n        this.OutputImageProfesional.compressedImage.imageDataUrl\r\n      );\r\n      this.fileProfesional = blob;\r\n      this.showImageProfesional = true;\r\n      this.processingImageCompleteProfesional = true;\r\n    }\r\n  }\r\n\r\n\r\n  OnSubmit() {\r\n    this.Loading = true;\r\n    this.MyAuth.Register(\r\n      this.FormRegisterUsuario.value.Email,\r\n      this.FormRegisterUsuario.value.Password\r\n    )\r\n      .then(async (user) => {\r\n        console.log(user);\r\n\r\n        const FormValues = this.FormRegisterUsuario.value;\r\n        const UserInfo: IUser = {\r\n          Id: user.user.uid,\r\n          DisplayName: FormValues.FirstName + \" \" + FormValues.LastName,\r\n          Email: user.user.email,\r\n          Gender: FormValues.Gender,\r\n          DOB: new Date(FormValues.DOB).valueOf(),\r\n          PhotoURL: this.MyAuth.DefaultUserPicURL,\r\n          FollowingCount: 0,\r\n          FollowersCount: 0,\r\n          PostsCount: 0,\r\n          Provider: \"Password\",\r\n          nroDocumento: FormValues.nroDocumento,\r\n          TipoDocumento: this.TipoDocumentoSeleccionado,\r\n          Street: FormValues.Street,\r\n          Number: FormValues.Number,\r\n          Floor: FormValues.Floor,\r\n          Dpto: FormValues.Dpto,\r\n          Neighborhood: FormValues.Neighborhood,\r\n          City: FormValues.City,\r\n\r\n          TipoServicioProfesional: null,\r\n          ModalidadTrabajoProfesional: null,\r\n          TipoDeUsuario: \"usuario\",\r\n          NombreComercial: null,\r\n          PhoneNumber: null,\r\n          Activo: true,\r\n          \r\n        };\r\n        debugger;\r\n        if(this.calcularEdad(UserInfo.DOB)==true)\r\n        {\r\n        \r\n        console.log(UserInfo);\r\n        await this.MyAuth.afAuth.updateProfile({\r\n          displayName: UserInfo.DisplayName,\r\n          photoURL: UserInfo.PhotoURL,\r\n        });\r\n        \r\n        \r\n        await this.MyAuth.afStore\r\n          .collection(\"Users\")\r\n          .doc(user.user.uid)\r\n          .set(UserInfo);\r\n\r\n\r\n        // aca mando la imagen a firebase storage\r\n        const filePath =\r\n          \"Usuarios\" + user.user.uid + \"/ProfilePictures/\" + moment().format(\"D-M-YYYY\");\r\n        const fileRef = this.storage.ref(filePath);\r\n        const task = this.storage.upload(filePath, this.file, {\r\n          customMetadata: { caption: this.UpdatePPForm.value.ProfileCaption },\r\n        });\r\n        this.Uploading = true;\r\n        // observe percentage changes\r\n        this.uploadPercent$ = task.percentageChanges();\r\n\r\n        // get notified when the download URL is available\r\n        task\r\n          .snapshotChanges()\r\n          .pipe(\r\n            finalize(() => {\r\n              this.downloadURL$ = fileRef.getDownloadURL();\r\n              this.downloadURL$.pipe(take(1)).subscribe((URL: string) => {\r\n                this.MyAuth.UpdateProfilePic(URL).subscribe(() => {\r\n                  this.Loading = false;\r\n                  this.MyAuth.NavTo(\"Home\");\r\n                });\r\n              });\r\n            })\r\n          )\r\n          .subscribe();\r\n        \r\n          //  aca mismo agregar la funcion de this.MyAuth para enviar email de verificacion\r\n        }\r\n        \r\n      })\r\n\r\n      .catch((error) => {\r\n        // Handle Errors here.\r\n        this.Loading = false;\r\n        var errorCode = error.code;\r\n        var errorMessage = error.message;\r\n\r\n        console.log(error);\r\n        switch (errorCode) {\r\n          case \"auth/email-already-in-use\":\r\n            this.EmailErrorMessage = errorMessage;\r\n            break;\r\n          case \"auth/invalid-email\":\r\n            this.EmailErrorMessage = errorMessage;\r\n            break;\r\n          case \"auth/operation-not-allowed\":\r\n            console.log(errorMessage);\r\n            this.EmailErrorMessage = errorMessage;\r\n            break;\r\n          case \"auth/weak-password\":\r\n            this.PasswordErrorMessage = errorMessage;\r\n            break;\r\n\r\n          default:\r\n            this.MyAuth.Notify.openSnackBar(\r\n              \"A ocurrido un error, porfavor intente mas tarde\",\r\n              \"\"\r\n            );\r\n            break;\r\n        }\r\n      });\r\n  }\r\n\r\n  cambiarEstado(event: any) {\r\n    if (event.tab.textLabel == \"Soy usuario\") {\r\n      this.isUsuario = true;\r\n    } else {\r\n      this.isUsuario = false;\r\n    }\r\n  }\r\n  calcularEdad(dob: number){\r\n    var hoy = Date.now();\r\n    var fechaNacimiento = dob\r\n    var edadMilisegundos = hoy - dob\r\n    //anio resperensa a 1 año en milisegundos.\r\n    var anio = 31536000000\r\n    var edad = Math.round(edadMilisegundos/anio)\r\n    if(edad>=18){\r\n      return true;\r\n    }\r\n    else{\r\n      return false;\r\n    }\r\n  }\r\n\r\n  OnSubmitProfesional() {\r\n    this.Loading = true;\r\n    this.MyAuth.Register(\r\n      this.FormRegisterProfesional.value.Email,\r\n      this.FormRegisterProfesional.value.Password\r\n    )\r\n      .then(async (user) => {\r\n        console.log(user);\r\n\r\n        const FormValues = this.FormRegisterProfesional.value;\r\n        const UserInfo: IUser = {\r\n          Id: user.user.uid,\r\n          DisplayName: FormValues.FirstName + \" \" + FormValues.LastName,\r\n          Email: user.user.email,\r\n          Gender: FormValues.Gender,\r\n          DOB: new Date(FormValues.DOB).valueOf(),\r\n          PhotoURL: this.MyAuth.DefaultUserPicURL,\r\n          FollowingCount: 0,\r\n          FollowersCount: 0,\r\n          PostsCount: 0,\r\n          Provider: \"Password\",\r\n          nroDocumento: FormValues.nroDocumento,\r\n          TipoDocumento: this.TipoDocumentoProfesionalSeleccionado,\r\n          ModalidadTrabajoProfesional:\r\n            this.TipoModalidadTrabajoProfesionalSeleccionado,\r\n          TipoServicioProfesional: this.TipoDeServicioSeleccionado,\r\n          Street: FormValues.Street,\r\n          Number: FormValues.Number,\r\n          Floor: FormValues.Floor,\r\n          Dpto: FormValues.Dpto,\r\n          Neighborhood: FormValues.Neighborhood,\r\n          City: FormValues.City,\r\n          TipoDeUsuario: \"profesional\",\r\n          NombreComercial: FormValues.NombreComercial,\r\n          PhoneNumber: FormValues.PhoneNumber,\r\n          Activo: true,\r\n        };\r\n\r\n        console.log(UserInfo);\r\n        await this.MyAuth.afAuth.updateProfile({\r\n          displayName: UserInfo.DisplayName,\r\n          photoURL: UserInfo.PhotoURL,\r\n        });\r\n        await this.MyAuth.afStore\r\n          .collection(\"Users\")\r\n          .doc(user.user.uid)\r\n          .set(UserInfo);\r\n\r\n        const filePath =\r\n          \"Profesional\" + user.user.uid + \"/ProfilePictures/\" + moment().format(\"D-M-YYYY\");\r\n        const fileRef = this.storage.ref(filePath);\r\n        const task = this.storage.upload(filePath, this.file, {\r\n          customMetadata: { caption: this.UpdatePPForm.value.ProfileCaption },\r\n        });\r\n        this.Uploading = true;\r\n        this.uploadPercent$ = task.percentageChanges();\r\n\r\n        // get notified when the download URL is available\r\n        task\r\n          .snapshotChanges()\r\n          .pipe(\r\n            finalize(() => {\r\n              this.downloadURL$ = fileRef.getDownloadURL();\r\n              this.downloadURL$.pipe(take(1)).subscribe((URL: string) => {\r\n                this.MyAuth.UpdateProfilePic(URL).subscribe(() => {\r\n                  this.Loading = false;\r\n                  this.MyAuth.NavTo(\"Home\");\r\n                });\r\n              });\r\n            })\r\n          )\r\n          .subscribe();\r\n\r\n        //  aca mismo agregar la funcion de this.MyAuth para enviar email de verificacion\r\n\r\n        this.Loading = false;\r\n        this.MyAuth.NavTo(\"Home\");\r\n      })\r\n\r\n      .catch((error) => {\r\n        // Handle Errors here.\r\n        this.Loading = false;\r\n        var errorCode = error.code;\r\n        var errorMessage = error.message;\r\n\r\n        console.log(error);\r\n        switch (errorCode) {\r\n          case \"auth/email-already-in-use\":\r\n            this.EmailErrorMessage = errorMessage;\r\n            break;\r\n          case \"auth/invalid-email\":\r\n            this.EmailErrorMessage = errorMessage;\r\n            break;\r\n          case \"auth/operation-not-allowed\":\r\n            console.log(errorMessage);\r\n            this.EmailErrorMessage = errorMessage;\r\n            break;\r\n          case \"auth/weak-password\":\r\n            this.PasswordErrorMessage = errorMessage;\r\n            break;\r\n\r\n          default:\r\n            this.MyAuth.Notify.openSnackBar(\r\n              \"A ocurrido un error, porfavor intente mas tarde\",\r\n              \"\"\r\n            );\r\n            break;\r\n        }\r\n      });\r\n  }\r\n}\r\n","export default \"<div class=\\\"container-fluid\\\" id=\\\"grid\\\">\\r\\n  <div class=\\\"col-12 col-sm-10 offset-sm-1 col-md-8 offset-md-2 col-lg-6 offset-lg-3\\\">\\r\\n    <mat-card class=\\\"FullCard\\\">\\r\\n      <mat-card-header>\\r\\n        <mat-card-title>Registrarse</mat-card-title>\\r\\n      </mat-card-header>\\r\\n      <mat-card-content>\\r\\n        <mat-tab-group (selectedTabChange)=\\\"cambiarEstado($event)\\\">\\r\\n          <mat-tab label=\\\"Soy usuario\\\" (model)=\\\"isUsuario\\\">\\r\\n            <form class=\\\"example-form\\\" [formGroup]=\\\"FormRegisterUsuario\\\">\\r\\n              <div class=\\\"controls-container\\\">\\r\\n                <form [formGroup]=\\\"UpdatePPForm\\\" (submit)=\\\"OnSubmit()\\\">\\r\\n                  <div mat-dialog-content>\\r\\n                    <input type=\\\"file\\\" style=\\\"display:none;\\\" formControlName=\\\"InputImage\\\" accept=\\\"image/*\\\" #InputFile\\r\\n                      (change)=\\\"onChange($event)\\\" required>\\r\\n                    <button mat-icon-button type=\\\"button\\\" (click)=\\\"InputFile.click()\\\" *ngIf=\\\"OutputImage == undefined\\\">\\r\\n                      <i class=\\\"fal fa-paperclip fa-lg\\\"></i>\\r\\n                    </button>\\r\\n                    <div>\\r\\n                      <img src=\\\"{{OutputImage.compressedImage.imageDataUrl}}\\\" width=\\\"150\\\" height=\\\"150\\\" *ngIf=\\\"showImage\\\"\\r\\n                        class=\\\"responsive-img\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div mat-dialog-actions>\\r\\n                    <mat-progress-bar *ngIf=\\\"Uploading\\\" mode=\\\"determinate\\\" [value]=\\\"(uploadPercent$ | async)\\\">\\r\\n                    </mat-progress-bar>\\r\\n                    <button mat-raised-button type=\\\"reset\\\" (click)=\\\"onNoClick()\\\">Cancelar</button>\\r\\n                    <button mat-raised-button color=\\\"primary\\\" (click)=\\\"InputFile.click()\\\"\\r\\n                      [disabled]=\\\"!UpdatePPForm.valid || !processingImageComplete\\\"\\r\\n                      [attr.cdkFocusInitial]=\\\"processingImageComplete ? '' : null\\\">Actualizar</button>\\r\\n                  </div>\\r\\n                </form>\\r\\n                <div class=\\\"row\\\" style=\\\"margin:0%;\\\">\\r\\n                  <div class=\\\"col-6\\\" align=right style=\\\"margin-top: 1%;\\\">\\r\\n                    <mat-form-field appearance=\\\"fill\\\">\\r\\n                      <mat-label>Tipo de documento</mat-label>\\r\\n                      <mat-select [(value)]=\\\"TipoDocumentoSeleccionado\\\" required>\\r\\n                        <mat-option value=\\\"DNI\\\">\\r\\n                          DNI\\r\\n                        </mat-option>\\r\\n                        <mat-option value=\\\"Pasaporte\\\">\\r\\n                          Pasaporte\\r\\n                        </mat-option>\\r\\n                      </mat-select>\\r\\n                    </mat-form-field>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-6\\\" style=\\\"margin-top:2.4%;\\\">\\r\\n                    <mat-form-field class=\\\"form-field w-100\\\">\\r\\n                      <input matInput placeholder=\\\"Nro documento\\\" formControlName=\\\"nroDocumento\\\" type=\\\"text\\\"\\r\\n                        autocomplete=\\\"off\\\" accept=\\\"nroDocumento\\\" required>\\r\\n                      <mat-error *ngIf=\\\"FormRegisterUsuario.controls.nroDocumento.hasError('required')\\\">\\r\\n                        Su número de documento es <strong>obligatorio</strong>\\r\\n                      </mat-error>\\r\\n                    </mat-form-field>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\" style=\\\"margin:0;\\\">\\r\\n                  <div class=\\\"col-6\\\">\\r\\n                    <mat-form-field class=\\\"form-field w-100\\\">\\r\\n                      <input matInput placeholder=\\\"Nombre\\\" formControlName=\\\"FirstName\\\" type=\\\"text\\\" autocomplete=\\\"off\\\"\\r\\n                        accept=\\\"FirstName\\\" required>\\r\\n                      <mat-error *ngIf=\\\"FormRegisterUsuario.controls.FirstName.hasError('required')\\\">\\r\\n                        Su nombre es <strong>obligatorio</strong>\\r\\n                      </mat-error>\\r\\n                    </mat-form-field>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-6\\\">\\r\\n                    <mat-form-field class=\\\"form-field w-100\\\">\\r\\n                      <input matInput placeholder=\\\"Apellido\\\" formControlName=\\\"LastName\\\" type=\\\"text\\\" autocomplete=\\\"off\\\"\\r\\n                        accept=\\\"LastName\\\" required>\\r\\n                      <mat-error *ngIf=\\\"FormRegisterUsuario.controls.LastName.hasError('required')\\\">\\r\\n                        Su apellido es<strong> obligatorio</strong>\\r\\n                      </mat-error>\\r\\n                    </mat-form-field>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"col\\\" align=center>\\r\\n                  <mat-radio-group formControlName=\\\"Gender\\\" class=\\\"form-field w-100\\\">\\r\\n                    <mat-radio-button value=\\\"Masculino\\\" name=\\\"Gender\\\">Masculino</mat-radio-button>\\r\\n                    <mat-radio-button value=\\\"Femenino\\\" name=\\\"Gender\\\" style=\\\"margin: 0 20px;\\\">Femenino</mat-radio-button>\\r\\n                  </mat-radio-group>\\r\\n                </div>\\r\\n                <div class=\\\"col\\\">\\r\\n                  <mat-form-field class=\\\"form-field w-100\\\">\\r\\n                    <input matInput [matDatepicker]=\\\"dp\\\" placeholder=\\\"Fecha de Nacimiento\\\" formControlName=\\\"DOB\\\">\\r\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"dp\\\"></mat-datepicker-toggle>\\r\\n                    <mat-datepicker #dp></mat-datepicker>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\" style=\\\"margin:0;\\\">\\r\\n                  <div class=\\\"col-6\\\">\\r\\n                    <mat-form-field class=\\\"form-field w-100\\\">\\r\\n                      <input matInput placeholder=\\\"Calle\\\" formControlName=\\\"Street\\\" type=\\\"text\\\" autocomplete=\\\"off\\\"\\r\\n                        accept=\\\"Street\\\" required>\\r\\n                      <mat-error *ngIf=\\\"FormRegisterUsuario.controls.Street.hasError('required')\\\">\\r\\n                        Su calle es<strong> obligatoria</strong>\\r\\n                      </mat-error>\\r\\n                    </mat-form-field>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-6\\\">\\r\\n                    <mat-form-field class=\\\"form-field w-100\\\">\\r\\n                      <input matInput placeholder=\\\"Altura\\\" formControlName=\\\"Number\\\" type=\\\"number\\\" autocomplete=\\\"off\\\"\\r\\n                        accept=\\\"Number\\\" required>\\r\\n                      <mat-error *ngIf=\\\"FormRegisterUsuario.controls.Number.hasError('required')\\\">\\r\\n                        La altura de su domicilio es<strong> obligatoria</strong>\\r\\n                      </mat-error>\\r\\n                    </mat-form-field>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\" style=\\\"margin:0;\\\">\\r\\n                  <div class=\\\"col-6\\\">\\r\\n                    <mat-form-field class=\\\"form-field w-100\\\">\\r\\n                      <input matInput placeholder=\\\"Piso\\\" formControlName=\\\"Floor\\\" type=\\\"text\\\" autocomplete=\\\"off\\\"\\r\\n                        accept=\\\"Floor\\\">\\r\\n                    </mat-form-field>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-6\\\">\\r\\n                    <mat-form-field class=\\\"form-field w-100\\\">\\r\\n                      <input matInput placeholder=\\\"Departamento\\\" formControlName=\\\"Dpto\\\" type=\\\"text\\\" autocomplete=\\\"off\\\"\\r\\n                        accept=\\\"Dpto\\\">\\r\\n                    </mat-form-field>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\" style=\\\"margin:0;\\\">\\r\\n                  <div class=\\\"col-6\\\">\\r\\n                    <mat-form-field class=\\\"form-field w-100\\\">\\r\\n                      <input matInput placeholder=\\\"Barrio\\\" formControlName=\\\"Neighborhood\\\" type=\\\"text\\\" autocomplete=\\\"off\\\"\\r\\n                        accept=\\\"Neighborhood\\\" required>\\r\\n                      <mat-error *ngIf=\\\"FormRegisterUsuario.controls.Street.hasError('required')\\\">\\r\\n                        Su barrio es<strong> obligatorio</strong>\\r\\n                      </mat-error>\\r\\n                    </mat-form-field>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-6\\\">\\r\\n                    <mat-form-field class=\\\"form-field w-100\\\">\\r\\n                      <input matInput placeholder=\\\"Localidad\\\" formControlName=\\\"City\\\" type=\\\"text\\\" autocomplete=\\\"off\\\"\\r\\n                        accept=\\\"City\\\" required>\\r\\n                      <mat-error *ngIf=\\\"FormRegisterUsuario.controls.City.hasError('required')\\\">\\r\\n                        La localidad es<strong> obligatoria</strong>\\r\\n                      </mat-error>\\r\\n                    </mat-form-field>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"col\\\">\\r\\n                  <mat-form-field class=\\\"form-field w-100\\\">\\r\\n                    <input matInput placeholder=\\\"Correo electronico\\\" formControlName=\\\"Email\\\" type=\\\"email\\\" required>\\r\\n                    <mat-hint>{{EmailErrorMessage}}</mat-hint>\\r\\n                    <mat-error *ngIf=\\\"FormRegisterUsuario.controls.Email.hasError('email')\\\">\\r\\n                      Por favor, Ingrese un correo electronico valido\\r\\n                    </mat-error>\\r\\n                    <mat-error *ngIf=\\\"FormRegisterUsuario.controls.Email.hasError('required')\\\">\\r\\n                      Su correo es <strong>obligatorio</strong>\\r\\n                    </mat-error>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n                <div class=\\\"col\\\">\\r\\n                  <mat-form-field class=\\\"form-field w-100\\\">\\r\\n                    <input matInput placeholder=\\\"Contraseña\\\" formControlName=\\\"Password\\\" type=\\\"password\\\" required>\\r\\n                    <mat-hint>{{PasswordErrorMessage}}</mat-hint>\\r\\n                    <mat-error *ngIf=\\\"FormRegisterUsuario.controls.Password.hasError('required')\\\">\\r\\n                      Contraseña <strong>obligatoria</strong>\\r\\n                    </mat-error>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n              </div>\\r\\n            </form>\\r\\n          </mat-tab>\\r\\n          <mat-tab label=\\\"Soy profesional\\\" (model)=\\\"isUsuario!\\\">\\r\\n            <form class=\\\"example-form\\\" [formGroup]=\\\"FormRegisterProfesional\\\">\\r\\n              <div class=\\\"controls-container\\\">\\r\\n                <form [formGroup]=\\\"UpdateProProPicForm\\\" (submit)=\\\"OnSubmit()\\\">\\r\\n                  <div mat-dialog-content>\\r\\n                    <input type=\\\"file\\\" style=\\\"display:none;\\\" formControlName=\\\"InputImage\\\" accept=\\\"image/*\\\"\\r\\n                      #InputFileProfesional (change)=\\\"onChange($event)\\\" required>\\r\\n                    <button mat-icon-button type=\\\"button\\\" (click)=\\\"InputFileProfesional.click()\\\"\\r\\n                      *ngIf=\\\"OutputImageProfesional== undefined\\\">\\r\\n                      <i class=\\\"fal fa-paperclip fa-lg\\\"></i>\\r\\n                    </button>\\r\\n                    <div>\\r\\n                      <img src=\\\"{{OutputImageProfesional.compressedImage.imageDataUrl}}\\\" width=\\\"100px\\\" height=\\\"100px\\\"\\r\\n                        *ngIf=\\\"showImageProfesional\\\" class=\\\"responsive-img\\\" />\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div mat-dialog-actions>\\r\\n                    <mat-progress-bar *ngIf=\\\"Uploading\\\" mode=\\\"determinate\\\" [value]=\\\"(uploadPercent$ | async)\\\">\\r\\n                    </mat-progress-bar>\\r\\n                    <button mat-raised-button type=\\\"reset\\\" (click)=\\\"onNoClick()\\\">Cancelar</button>\\r\\n                    <button mat-raised-button color=\\\"primary\\\" (click)=\\\"InputFileProfesional.click()\\\"\\r\\n                      [disabled]=\\\"!UpdateProProPicForm.valid || !processingImageCompleteProfesional\\\"\\r\\n                      [attr.cdkFocusInitial]=\\\"processingImageCompleteProfesional ? '' : null\\\">Actualizar</button>\\r\\n                  </div>\\r\\n                </form>\\r\\n                <div class=\\\"row\\\" style=\\\"margin:0%;\\\">\\r\\n                  <div class=\\\"col-6\\\" align=right style=\\\"margin-top: 1%;\\\">\\r\\n                    <mat-form-field appearance=\\\"fill\\\">\\r\\n                      <mat-label>Tipo de documento</mat-label>\\r\\n                      <mat-select [(value)]=\\\"TipoDocumentoProfesionalSeleccionado\\\" required>\\r\\n                        <mat-option value=\\\"DNI\\\">\\r\\n                          DNI\\r\\n                        </mat-option>\\r\\n                        <mat-option value=\\\"Pasaporte\\\">\\r\\n                          Pasaporte\\r\\n                        </mat-option>\\r\\n                      </mat-select>\\r\\n                    </mat-form-field>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-6\\\" style=\\\"margin-top:2.4%;\\\">\\r\\n                    <mat-form-field class=\\\"form-field w-100\\\">\\r\\n                      <input matInput placeholder=\\\"Nro documento\\\" formControlName=\\\"nroDocumento\\\" type=\\\"text\\\"\\r\\n                        autocomplete=\\\"off\\\" accept=\\\"nroDocumento\\\" required>\\r\\n                      <mat-error *ngIf=\\\"FormRegisterProfesional.controls.nroDocumento.hasError('required')\\\">\\r\\n                        Su número de documento es <strong>obligatorio</strong>\\r\\n                      </mat-error>\\r\\n                    </mat-form-field>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\" style=\\\"margin:0;\\\">\\r\\n                  <div class=\\\"col-6\\\">\\r\\n                    <mat-form-field class=\\\"form-field w-100\\\">\\r\\n                      <input matInput placeholder=\\\"Nombre\\\" formControlName=\\\"FirstName\\\" type=\\\"text\\\" autocomplete=\\\"off\\\"\\r\\n                        accept=\\\"FirstName\\\" required>\\r\\n                      <mat-error *ngIf=\\\"FormRegisterProfesional.controls.FirstName.hasError('required')\\\">\\r\\n                        Su nombre es <strong>obligatorio</strong>\\r\\n                      </mat-error>\\r\\n                    </mat-form-field>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-6\\\">\\r\\n                    <mat-form-field class=\\\"form-field w-100\\\">\\r\\n                      <input matInput placeholder=\\\"Apellido\\\" formControlName=\\\"LastName\\\" type=\\\"text\\\" autocomplete=\\\"off\\\"\\r\\n                        accept=\\\"LastName\\\" required>\\r\\n                      <mat-error *ngIf=\\\"FormRegisterProfesional.controls.LastName.hasError('required')\\\">\\r\\n                        Su apellido es<strong> obligatorio</strong>\\r\\n                      </mat-error>\\r\\n                    </mat-form-field>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"col\\\" align=center>\\r\\n                  <mat-radio-group formControlName=\\\"Gender\\\" class=\\\"form-field w-100\\\">\\r\\n                    <mat-radio-button value=\\\"Masculino\\\" name=\\\"Gender\\\">Masculino</mat-radio-button>\\r\\n                    <mat-radio-button value=\\\"Femenino\\\" name=\\\"Gender\\\" style=\\\"margin: 0 20px;\\\">Femenino</mat-radio-button>\\r\\n                  </mat-radio-group>\\r\\n                </div>\\r\\n                <div class=\\\"col\\\">\\r\\n                  <mat-form-field class=\\\"form-field w-100\\\">\\r\\n                    <input matInput [matDatepicker]=\\\"dpp\\\" placeholder=\\\"Fecha de Nacimiento\\\" formControlName=\\\"DOB\\\">\\r\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"dpp\\\"></mat-datepicker-toggle>\\r\\n                    <mat-datepicker #dpp></mat-datepicker>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\" style=\\\"margin:0;\\\">\\r\\n                  <div class=\\\"col-6\\\">\\r\\n                    <mat-form-field class=\\\"form-field w-100\\\">\\r\\n                      <input matInput placeholder=\\\"Calle\\\" formControlName=\\\"Street\\\" type=\\\"text\\\" autocomplete=\\\"off\\\"\\r\\n                        accept=\\\"Street\\\" required>\\r\\n                      <mat-error *ngIf=\\\"FormRegisterProfesional.controls.Street.hasError('required')\\\">\\r\\n                        Su calle es<strong> obligatoria</strong>\\r\\n                      </mat-error>\\r\\n                    </mat-form-field>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-6\\\">\\r\\n                    <mat-form-field class=\\\"form-field w-100\\\">\\r\\n                      <input matInput placeholder=\\\"Altura\\\" formControlName=\\\"Number\\\" type=\\\"number\\\" autocomplete=\\\"off\\\"\\r\\n                        accept=\\\"Number\\\" required>\\r\\n                      <mat-error *ngIf=\\\"FormRegisterProfesional.controls.Number.hasError('required')\\\">\\r\\n                        La altura de su domicilio es<strong> necesaria</strong>\\r\\n                      </mat-error>\\r\\n                    </mat-form-field>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\" style=\\\"margin:0;\\\">\\r\\n                  <div class=\\\"col-6\\\">\\r\\n                    <mat-form-field class=\\\"form-field w-100\\\">\\r\\n                      <input matInput placeholder=\\\"Piso\\\" formControlName=\\\"Floor\\\" type=\\\"text\\\" autocomplete=\\\"off\\\"\\r\\n                        accept=\\\"Floor\\\">\\r\\n                    </mat-form-field>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-6\\\">\\r\\n                    <mat-form-field class=\\\"form-field w-100\\\">\\r\\n                      <input matInput placeholder=\\\"Departamento\\\" formControlName=\\\"Dpto\\\" type=\\\"text\\\" autocomplete=\\\"off\\\"\\r\\n                        accept=\\\"Dpto\\\">\\r\\n                    </mat-form-field>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\" style=\\\"margin:0;\\\">\\r\\n                  <div class=\\\"col-6\\\">\\r\\n                    <mat-form-field class=\\\"form-field w-100\\\">\\r\\n                      <input matInput placeholder=\\\"Barrio\\\" formControlName=\\\"Neighborhood\\\" type=\\\"text\\\" autocomplete=\\\"off\\\"\\r\\n                        accept=\\\"Neighborhood\\\" required>\\r\\n                      <mat-error *ngIf=\\\"FormRegisterProfesional.controls.Street.hasError('required')\\\">\\r\\n                        Su barrio es<strong> obligatorio</strong>\\r\\n                      </mat-error>\\r\\n                    </mat-form-field>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-6\\\">\\r\\n                    <mat-form-field class=\\\"form-field w-100\\\">\\r\\n                      <input matInput placeholder=\\\"Localidad\\\" formControlName=\\\"City\\\" type=\\\"text\\\" autocomplete=\\\"off\\\"\\r\\n                        accept=\\\"City\\\" required>\\r\\n                      <mat-error *ngIf=\\\"FormRegisterProfesional.controls.City.hasError('required')\\\">\\r\\n                        La localidad es<strong> obligatoria</strong>\\r\\n                      </mat-error>\\r\\n                    </mat-form-field>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\" style=\\\"margin:0;\\\">\\r\\n                  <div class=\\\"col-6\\\">\\r\\n                    <mat-form-field class=\\\"form-field w-100\\\" style=\\\"text-align: center\\\">\\r\\n                      <input matInput placeholder=\\\"Nombre comercial/Nombre del local\\\" formControlName=\\\"NombreComercial\\\"\\r\\n                        type=\\\"text\\\" autocomplete=\\\"off\\\" accept=\\\"NombreComercial\\\">\\r\\n                    </mat-form-field>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-6\\\">\\r\\n                    <mat-form-field class=\\\"form-field w-100\\\" style=\\\"text-align: center\\\">\\r\\n                      <input matInput placeholder=\\\"Número Comercial\\\" formControlName=\\\"PhoneNumber\\\" type=\\\"text\\\"\\r\\n                        autocomplete=\\\"off\\\" accept=\\\"PhoneNumber\\\">\\r\\n                    </mat-form-field>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\" style=\\\"margin:0;\\\">\\r\\n                  <div class=\\\"col-6\\\" align=\\\"right\\\">\\r\\n                    <mat-form-field appearance=\\\"fill\\\">\\r\\n                      <mat-label>Modalidad de trabajo</mat-label>\\r\\n                      <mat-select [(value)]=\\\"TipoModalidadTrabajoProfesionalSeleccionado\\\">\\r\\n                        <mat-option value=\\\"Domicilio\\\">\\r\\n                          Domicilio\\r\\n                        </mat-option>\\r\\n                        <mat-option value=\\\"Local\\\">\\r\\n                          Local\\r\\n                        </mat-option>\\r\\n                        <mat-option value=\\\"Hibrido\\\">\\r\\n                          Hibrido\\r\\n                        </mat-option>\\r\\n                      </mat-select>\\r\\n                    </mat-form-field>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-3\\\" align=right>\\r\\n                    <mat-form-field appearance=\\\"fill\\\">\\r\\n                      <mat-label>Tipo de servicio</mat-label>\\r\\n                      <mat-select [(value)]=\\\"TipoDeServicioSeleccionado\\\">\\r\\n                        <mat-option value=\\\"Peluqueria\\\">\\r\\n                          Peluqueria\\r\\n                        </mat-option>\\r\\n                        <mat-option value=\\\"Barberia\\\">\\r\\n                          Barberia\\r\\n                        </mat-option>\\r\\n                        <mat-option value=\\\"Manicuria\\\">\\r\\n                          Manicuria\\r\\n                        </mat-option>\\r\\n                        <mat-option value=\\\"Pedicuria/Podologia\\\">\\r\\n                          Pedicuria/Podologia\\r\\n                        </mat-option>\\r\\n                        <mat-option value=\\\"Maquillaje\\\">\\r\\n                          Maquillaje\\r\\n                        </mat-option>\\r\\n                        <mat-option value=\\\"Tratamientos Corporales\\\">\\r\\n                          Tratamientos Corporales\\r\\n                        </mat-option>\\r\\n                        <mat-option value=\\\"Depilacion\\\">\\r\\n                          Depilación\\r\\n                        </mat-option>\\r\\n                      </mat-select>\\r\\n                    </mat-form-field>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"col\\\">\\r\\n                  <mat-form-field class=\\\"form-field w-100\\\">\\r\\n                    <input matInput placeholder=\\\"Correo electronico\\\" formControlName=\\\"Email\\\" type=\\\"email\\\" required>\\r\\n                    <mat-hint>{{EmailErrorMessage}}</mat-hint>\\r\\n                    <mat-error *ngIf=\\\"FormRegisterProfesional.controls.Email.hasError('email')\\\">\\r\\n                      Por favor, Ingrese un correo electronico valido\\r\\n                    </mat-error>\\r\\n                    <mat-error *ngIf=\\\"FormRegisterProfesional.controls.Email.hasError('required')\\\">\\r\\n                      Su correo es <strong>obligatorio</strong>\\r\\n                    </mat-error>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n                <div class=\\\"col\\\">\\r\\n                  <mat-form-field class=\\\"form-field w-100\\\">\\r\\n                    <input matInput placeholder=\\\"Contraseña\\\" formControlName=\\\"Password\\\" type=\\\"password\\\" required>\\r\\n                    <mat-hint>{{PasswordErrorMessage}}</mat-hint>\\r\\n                    <mat-error *ngIf=\\\"FormRegisterProfesional.controls.Password.hasError('required')\\\">\\r\\n                      Contraseña <strong>obligatoria</strong>\\r\\n                    </mat-error>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n              </div>\\r\\n            </form>\\r\\n          </mat-tab>\\r\\n        </mat-tab-group>\\r\\n      </mat-card-content>\\r\\n      <mat-card-actions>\\r\\n        <div style=\\\"margin:0 0 15px 15px;\\\">\\r\\n          <button mat-raised-button [disabled]=\\\"isUsuario ? !FormRegisterUsuario.valid : !FormRegisterProfesional.valid\\\"\\r\\n            type=\\\"submit\\\" color=\\\"accent\\\" (click)=\\\"isUsuario ? OnSubmit() : OnSubmitProfesional()\\\">\\r\\n            <span *ngIf=\\\"!Loading\\\">Registrar</span>\\r\\n            <span *ngIf=\\\"Loading\\\" style=\\\"margin:0 19px;\\\"><i class=\\\"fal fa-spinner fa-spin\\\"></i></span>\\r\\n          </button>\\r\\n          <button [routerLink]=\\\"['/Auth/Login']\\\" color=\\\"primary\\\" mat-button class=\\\"boton_ingresar\\\">Ingresar</button>\\r\\n        </div>\\r\\n      </mat-card-actions>\\r\\n    </mat-card>\\r\\n  </div>\\r\\n</div>\";","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { FormBuilder, FormGroup, RequiredValidator, Validators } from '@angular/forms';\r\nimport { MyAuthService } from 'src/app/Services/my-auth.service';\r\nimport * as firebase from 'firebase/app';\r\nimport { Subscription } from 'rxjs';\r\nimport { IUser } from 'src/app/Models/i-user';\r\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit, OnDestroy {\r\n  User: firebase.UserInfo;\r\n  FormLogin: FormGroup;\r\n\r\n  NetworkErrorCount = 0;\r\n\r\n  hide = true;\r\n  Loading = false;\r\n\r\n  EmailErrorMessage = '';\r\n  PasswordErrorMessage = '';\r\n\r\n  LoginSub: Subscription;\r\n  FormValueChangesSub: Subscription;\r\n\r\n  constructor(\r\n    public MyAuth: MyAuthService,\r\n    private fb: FormBuilder) { }\r\n\r\n  ngOnInit() {\r\n    // this.MyAuth.Logout();\r\n    this.FormLogin = this.fb.group({\r\n      Email: ['', [Validators.required, Validators.email]],\r\n      Password: ['', [Validators.required, Validators.minLength(6)]],\r\n    });\r\n\r\n    this.FormValueChangesSub = this.FormLogin.valueChanges.subscribe(obs => {\r\n      // console.log(obs)\r\n      this.EmailErrorMessage = '';\r\n      this.PasswordErrorMessage = '';\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    console.log('ngOnDestroy called');\r\n    try {\r\n      this.LoginSub.unsubscribe();\r\n      this.FormValueChangesSub.unsubscribe();\r\n    } catch (err) {\r\n      // console.log(err)\r\n    }\r\n  }\r\n\r\n  OnSubmit() {\r\n  \r\n    this.Loading = true;\r\n    this.Login();\r\n  }\r\n\r\n  LoginWith(prov: string) {\r\n    let provider: firebase.auth.AuthProvider;\r\n    if (prov == 'Google') {\r\n      provider = new firebase.auth.GoogleAuthProvider;\r\n    }\r\n    else if (prov == 'Facebook') {\r\n      provider = new firebase.auth.FacebookAuthProvider;\r\n         }\r\n\r\n    this.MyAuth.afAuth.signInWithPopup(provider)\r\n      .then(User => {\r\n        // console.log(User)\r\n        this.MyAuth.BasicUserInfo = User.user;\r\n        this.LoginSub = this.MyAuth.afStore.doc('Users/' + User.user.uid).get().subscribe(u => {\r\n          console.log(u.data());\r\n          const data = u.data();\r\n          if (!data.Email) {\r\n            // this.AdditionalInfoRequired = true;\r\n\r\n            const props: IUser = {\r\n              Id: User.user.uid,\r\n              DisplayName: User.user.displayName,\r\n              Email: User.user.email,\r\n              PhotoURL: User.user.photoURL,\r\n              PostsCount: 0,\r\n              FollowersCount: 0,\r\n              FollowingCount: 0,\r\n              Provider: User.user.providerId,\r\n         \r\n            };\r\n\r\n            this.MyAuth.afAuth.updateProfile({ 'displayName': props.DisplayName, 'photoURL': props.PhotoURL });\r\n            this.MyAuth.afStore.doc('Users/' + User.user.uid).set(props).then(() => {\r\n              this.MyAuth.NavTo('/Home');\r\n              this.Loading = false;\r\n            })\r\n              .catch(err => {\r\n                console.log(err);\r\n              });\r\n            this.MyAuth.Notify.openSnackBar('You\\'ve logged in successfully, please tell us something more about you!', '');\r\n          } else {\r\n            // this.MyAuth.Notify.openSnackBar(\"Welcome, \" + u.data().DisplayName, \"\", () => {\r\n            //   this.MyAuth.NavTo('/Home')\r\n            // })\r\n            this.MyAuth.NavTo('/Home');\r\n          }\r\n        });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        if (err.code == 'auth/network-request-failed') {\r\n          this.NetworkErrorCount++;\r\n          if (this.NetworkErrorCount <= 3) {\r\n            console.log('Retrying: ', this.NetworkErrorCount);\r\n            this.LoginWith(prov);\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  Login() {\r\n    const Email = this.FormLogin.value.Email;\r\n    const pwd = this.FormLogin.value.Password;\r\n\r\n    this.MyAuth.afAuth.signInWithEmailAndPassword(Email, pwd).then(res => {\r\n      console.log(res);\r\n      if (res.user.uid) {\r\n        // this.MyAuth.Notify.openSnackBar(`Welcome back, ${res.user.displayName}`, '')\r\n        this.Loading = false;\r\n        this.MyAuth.NavTo('Home');\r\n      }\r\n    })\r\n      .catch(err => {\r\n        console.log(err);\r\n        this.Loading = false;\r\n        const errorCode = err.code;\r\n        const errorMessage = err.message;\r\n\r\n        switch (errorCode) {\r\n          case 'auth/invalid-email':\r\n            this.EmailErrorMessage = errorMessage;\r\n            this.EmailErrorMessage = 'Email invalido, por favor verifique'\r\n            break;\r\n          case 'auth/user-disabled':\r\n            this.EmailErrorMessage = errorMessage;\r\n            this.EmailErrorMessage= 'Usuario deshabilitado'\r\n            \r\n            break;\r\n          case 'auth/user-not-found':\r\n            console.log(errorMessage);\r\n            this.EmailErrorMessage = errorMessage;\r\n            this.EmailErrorMessage = 'Usuario no encontrado'\r\n            break;\r\n          case 'auth/wrong-password':\r\n            this.PasswordErrorMessage = errorMessage;\r\n            this.PasswordErrorMessage = 'La contraseña introducida es incorrecta, por favor verifique';\r\n          \r\n            break;\r\n\r\n          default:\r\n            this.MyAuth.Notify.openSnackBar('Ocurrio un error, inténtelo de nuevo mas tarde', '');\r\n            break;\r\n        }\r\n\r\n        if (err.code == 'auth/network-request-failed') {\r\n          this.MyAuth.Notify.openSnackBar('Existe un problema con su conexion de red, por favor verifique', '', () => { }, () => { }, 3500)\r\n        }\r\n        else {\r\n          this.MyAuth.Notify.openSnackBar(this.EmailErrorMessage, '')\r\n        }\r\n      });\r\n  }\r\n\r\n  // GetLoggedUser(): Observable<IUser> {\r\n  //   return new Observable(observer => {\r\n  //     this.MyAuth.GetLoggedUserInfo()\r\n  //       .subscribe((response => {\r\n  //         if (response) {\r\n  //           console.log(response);\r\n  //           observer.next(response);\r\n  //           observer.complete();\r\n  //         }\r\n  //         else {\r\n  //         }\r\n  //         return response;\r\n  //       }), error => {\r\n  //         observer.error(error);\r\n  //         observer.complete();\r\n  //         console.log(\"Error getting document:\", error);\r\n  //       });\r\n  //   });\r\n  // }\r\n\r\n}\r\n","export default \"<ng-container *ngIf=\\\"UserLoaded; else UserLoading\\\">\\r\\n  <div class=\\\"container-fluid background-gradient\\\">\\r\\n    <div class=\\\"col-12 col-lg-6 offset-lg-3\\\">\\r\\n      <mat-card>\\r\\n        <form [formGroup]=\\\"AdditionalInfoForm\\\" (submit)=\\\"OnSubmit()\\\">\\r\\n          <mat-card-header>\\r\\n            <mat-card-title class=\\\"title\\\">Hello {{MyAuth.LoggedUser.DisplayName}}, Welcome to {{MyAuth.AppTitle}}\\r\\n            </mat-card-title>\\r\\n            <mat-card-title class=\\\"second-title\\\">Tell us something more about you!</mat-card-title>\\r\\n          </mat-card-header>\\r\\n          <mat-card-content>\\r\\n            <div class=\\\"controls-container\\\">\\r\\n              <div class=\\\"col\\\">\\r\\n                <mat-form-field>\\r\\n                  <input matInput formControlName=\\\"DisplayName\\\" placeholder=\\\"DisplayName\\\" type=\\\"text\\\" required>\\r\\n                  <mat-error *ngIf=\\\"AdditionalInfoForm.controls.DisplayName.hasError('required')\\\">\\r\\n                    Name is <strong>required</strong>\\r\\n                  </mat-error>\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n              <div class=\\\"col\\\">\\r\\n                <mat-form-field>\\r\\n                  <input matInput formControlName=\\\"Email\\\" placeholder=\\\"Email\\\" type=\\\"email\\\" required>\\r\\n                  <mat-error *ngIf=\\\"AdditionalInfoForm.controls.Email.hasError('required')\\\">\\r\\n                    Email is <strong>required</strong>\\r\\n                  </mat-error>\\r\\n                  <mat-error *ngIf=\\\"AdditionalInfoForm.controls.Email.hasError('email')\\\">\\r\\n                    Please enter a valid <strong>email address</strong>\\r\\n                  </mat-error>\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n              <div class=\\\"col\\\">\\r\\n                <mat-form-field>\\r\\n                  <input matInput formControlName=\\\"PhoneNumber\\\" type=\\\"number\\\" placeholder=\\\"PhoneNumber\\\">\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n              <div class=\\\"col\\\" style=\\\"margin: 5px 0;\\\">\\r\\n                <mat-radio-group formControlName=\\\"Gender\\\" aria-required=\\\"true\\\">\\r\\n                  <mat-radio-button value=\\\"Male\\\" name=\\\"Gender\\\">Male</mat-radio-button>\\r\\n                  <mat-radio-button value=\\\"Female\\\" name=\\\"Gender\\\" style=\\\"margin-left: 32px;\\\">Female</mat-radio-button>\\r\\n                </mat-radio-group>\\r\\n              </div>\\r\\n              <div class=\\\"col\\\">\\r\\n                <mat-form-field>\\r\\n                  <input matInput [matDatepicker]=\\\"dp\\\" placeholder=\\\"Fecha Nacimiento\\\" formControlName=\\\"DOB\\\">\\r\\n                  <mat-datepicker-toggle matSuffix [for]=\\\"dp\\\"></mat-datepicker-toggle>\\r\\n                  <mat-datepicker #dp></mat-datepicker>\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n              <div class=\\\"col\\\">\\r\\n                <mat-form-field>\\r\\n                  <mat-select formControlName=\\\"Status\\\" placeholder=\\\"Status\\\">\\r\\n                    <mat-option value=\\\"Single\\\">Single</mat-option>\\r\\n                    <mat-option value=\\\"Engaged\\\">Engaged</mat-option>\\r\\n                    <mat-option value=\\\"Married\\\">Married</mat-option>\\r\\n                  </mat-select>\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n              <div class=\\\"col\\\">\\r\\n                <mat-form-field>\\r\\n                  <mat-label>City</mat-label>\\r\\n                  <mat-select formControlName=\\\"LivesIn\\\">\\r\\n                    <mat-option>-- None --</mat-option>\\r\\n                    <mat-optgroup *ngFor=\\\"let State of CitiesAndStates.StatesCities\\\" [label]=\\\"State.State\\\">\\r\\n                      <mat-option *ngFor=\\\"let City of State.Cities\\\" [value]=\\\"City\\\">\\r\\n                        {{City}}\\r\\n                      </mat-option>\\r\\n                    </mat-optgroup>\\r\\n                  </mat-select>\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n              <div class=\\\"col\\\">\\r\\n                <mat-form-field>\\r\\n                  <input matInput formControlName=\\\"Interests\\\" placeholder=\\\"Interests\\\">\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n              <div class=\\\"col\\\">\\r\\n                <mat-form-field>\\r\\n                  <input matInput formControlName=\\\"About\\\" placeholder=\\\"About\\\">\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n            </div>\\r\\n          </mat-card-content>\\r\\n          <mat-card-actions>\\r\\n            <div style=\\\"margin:0 0 15px 15px;\\\">\\r\\n              <button mat-raised-button [disabled]=\\\"AdditionalInfoForm.pristine || AdditionalInfoForm.invalid\\\"\\r\\n                type=\\\"submit\\\" color=\\\"accent\\\">\\r\\n                <span *ngIf=\\\"!Loading\\\">Complete</span>\\r\\n                <span *ngIf=\\\"Loading\\\" style=\\\"margin:0 19px;\\\"><i class=\\\"fal fa-spinner fa-spin\\\"></i></span>\\r\\n              </button>\\r\\n              <button *ngIf=\\\"IsPasswordProvider\\\" (click)=\\\"Skip()\\\" mat-button>Skip</button>\\r\\n            </div>\\r\\n          </mat-card-actions>\\r\\n        </form>\\r\\n      </mat-card>\\r\\n    </div>\\r\\n  </div>\\r\\n</ng-container>\\r\\n<ng-template #UserLoading>\\r\\n  <element-my-loader></element-my-loader>\\r\\n</ng-template>\";","export default \"  .controls-container{\\r\\n    width: 100%;\\r\\n  }\\r\\n  .FullCard{\\r\\n    border-radius: 14px;\\r\\n    background-color: rgba(0, 0, 0, 0.2);\\r\\n  \\r\\n  }\\r\\n  #grid {\\r\\n    background: linear-gradient(#8b73ff,#8a3788);\\r\\n    padding: 80px 0;\\r\\n    /*height: 100vh*/;\\r\\n    /* height: calc(100% - 64px); */\\r\\n  }\\r\\n  .boton_ingresar{\\r\\n    color: rgb(88, 3, 88);\\r\\n  }\\r\\n  \\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlZ2lzdGVyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkVBQUU7SUFDRSxXQUFXO0VBQ2I7RUFDQTtJQUNFLG1CQUFtQjtJQUNuQixvQ0FBb0M7O0VBRXRDO0VBQ0E7SUFDRSw0Q0FBNEM7SUFDNUMsZUFBZTtJQUNmLGdCQUFnQjtJQUNoQiwrQkFBK0I7RUFDakM7RUFFQTtJQUNFLHFCQUFxQjtFQUN2QiIsImZpbGUiOiJyZWdpc3Rlci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiICAuY29udHJvbHMtY29udGFpbmVye1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgfVxyXG4gIC5GdWxsQ2FyZHtcclxuICAgIGJvcmRlci1yYWRpdXM6IDE0cHg7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMik7XHJcbiAgXHJcbiAgfVxyXG4gICNncmlkIHtcclxuICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgjOGI3M2ZmLCM4YTM3ODgpO1xyXG4gICAgcGFkZGluZzogODBweCAwO1xyXG4gICAgLypoZWlnaHQ6IDEwMHZoKi87XHJcbiAgICAvKiBoZWlnaHQ6IGNhbGMoMTAwJSAtIDY0cHgpOyAqL1xyXG4gIH1cclxuXHJcbiAgLmJvdG9uX2luZ3Jlc2Fye1xyXG4gICAgY29sb3I6IHJnYig4OCwgMywgODgpO1xyXG4gIH1cclxuICAiXX0= */\";","import { Component, OnInit, Input } from '@angular/core';\r\nimport { MyAuthService } from 'src/app/Services/my-auth.service';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { cStatesCities } from 'src/app/Models/c-states-cities';\r\nimport { IUser } from 'src/app/Models/i-user';\r\nimport { take } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-additional-user-info',\r\n  templateUrl: './additional-user-info.component.html',\r\n  styleUrls: ['./additional-user-info.component.css']\r\n})\r\nexport class AdditionalUserInfoComponent implements OnInit {\r\n  AdditionalInfoForm: FormGroup;\r\n  CitiesAndStates: cStatesCities = new cStatesCities;\r\n  // @Input() User: any;\r\n  User: IUser;\r\n\r\n  Loading = false;\r\n  UserLoaded = false;\r\n\r\n  constructor(\r\n    public MyAuth: MyAuthService,\r\n    private fb: FormBuilder,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.MyAuth.afAuth.authState.subscribe(r => {\r\n      this.MyAuth.afStore.doc<IUser>(`Users/${r.uid}`).valueChanges().pipe(take(1))\r\n        .subscribe(res => {\r\n          this.User = res;\r\n\r\n          this.AdditionalInfoForm = this.fb.group({\r\n            Id: this.User.Id,\r\n            Email: [this.User.Email, [Validators.required, Validators.email]],\r\n            DisplayName: [this.User.DisplayName, Validators.required],\r\n            Gender: ['Male', Validators.required],\r\n            DOB: new Date(this.User.DOB).valueOf(),\r\n            PhoneNumber: this.User.PhoneNumber,\r\n            PhotoURL: this.User.PhotoURL,\r\n            Status: '',\r\n            LivesIn: '',\r\n            Interests: '',\r\n            About: '',\r\n          });\r\n\r\n          if (this.User.Provider === 'Password') {\r\n            this.AdditionalInfoForm.controls['Email'].disable();\r\n          }\r\n          this.UserLoaded = true;\r\n        });\r\n\r\n    });\r\n  }\r\n\r\n  OnSubmit() {\r\n    console.log(this.AdditionalInfoForm);\r\n    this.Loading = true;\r\n    this.UpdateUserInfoOnFireStore(this.AdditionalInfoForm.value);\r\n  }\r\n\r\n  Skip() {\r\n    this.MyAuth.NavTo('Home');\r\n  }\r\n\r\n  async UpdateUserInfoOnFireStore(User: IUser) {\r\n    User.DOB = User.DOB.valueOf();\r\n\r\n    if (this.AdditionalInfoForm.controls['Email'].disabled) {\r\n      User.Email = this.User.Email;\r\n    }\r\n\r\n    await this.MyAuth.afAuth.updateProfile({ 'displayName': User.DisplayName, 'photoURL': User.PhotoURL });\r\n    await this.MyAuth.afStore.doc('Users/' + User.Id).set(User);\r\n    this.MyAuth.NavTo('/Home');\r\n    this.Loading = false;\r\n  }\r\n\r\n}\r\n","export default \"\\r\\n<div class=\\\"container-fluid\\\" id=\\\"grid\\\">\\r\\n  <div class=\\\"col-12 col-sm-10 offset-sm-1 col-md-8 offset-md-2 col-lg-6 offset-lg-3\\\">\\r\\n    <form [formGroup]=\\\"FormLogin\\\" (submit)=\\\"OnSubmit()\\\">\\r\\n      <mat-card class=\\\"FullCard\\\">\\r\\n        <mat-card-header>\\r\\n          <mat-card-title>Ingresar</mat-card-title>\\r\\n        </mat-card-header>\\r\\n        <mat-card-content>\\r\\n          <div class=\\\"controls-container\\\">\\r\\n            <mat-form-field class=\\\"form-field\\\">\\r\\n              <input matInput placeholder=\\\"Correo electronico\\\" formControlName=\\\"Email\\\" type=\\\"email\\\" required>\\r\\n              <!-- <mat-hint>{{EmairrorMessalEge}}</mat-hint> -->\\r\\n              <mat-error *ngIf=\\\"FormLogin.controls.Email.hasError('required')\\\">\\r\\n                Su correo es <strong>obligatorio</strong>\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field class=\\\"form-field\\\">\\r\\n              <input matInput placeholder=\\\"Contraseña\\\" formControlName=\\\"Password\\\" [type]=\\\"hide ? 'password' : 'text'\\\"\\r\\n              required>\\r\\n              <mat-hint>{{PasswordErrorMessage}}</mat-hint>\\r\\n              <mat-error *ngIf=\\\"FormLogin.controls.Password.hasError('required')\\\">\\r\\n                Su contraseña es<strong> obligatoria</strong>\\r\\n              </mat-error>\\r\\n              <mat-error *ngIf=\\\"FormLogin.controls.Password.hasError('minlength')\\\">\\r\\n                Su contraseña deberia contener <strong>un mínimo de 6</strong> caracteres.\\r\\n              </mat-error>\\r\\n              <mat-icon matSuffix mat-icon-button (click)=\\\"hide = !hide\\\" style=\\\"cursor: pointer;\\\">\\r\\n                <span *ngIf=\\\"hide\\\"><i class=\\\"fal fa-eye-slash\\\"></i></span>\\r\\n                <span *ngIf=\\\"!hide\\\"><i class=\\\"fal fa-eye\\\"></i></span>\\r\\n              </mat-icon>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n        </mat-card-content>\\r\\n        <mat-card-actions class=\\\"link\\\">\\r\\n\\r\\n          <button mat-raised-button [disabled]=\\\"FormLogin.pristine || FormLogin.invalid\\\" type=\\\"submit\\\" class=\\\"btn_ingresar\\\">\\r\\n            <span *ngIf=\\\"!Loading\\\">Ingresar</span>\\r\\n            <span *ngIf=\\\"Loading\\\" style=\\\"margin:0 10px;\\\"><i class=\\\"fal fa-spinner fa-spin\\\"></i></span>\\r\\n          </button>\\r\\n\\r\\n           <h6 class=\\\"link_recuperar\\\">Olvide mi contraseña <a [routerLink]=\\\"['/Auth/recuperar']\\\" >Recuperar</a></h6>\\r\\n           \\r\\n           <h6 class=\\\"link_register\\\">¿Eres nuevo? <a [routerLink]=\\\"[ '/Auth/Register']\\\">hace click</a> y registrate!</h6>\\r\\n\\r\\n          <!-- <button mat-raised-button [routerLink]=\\\"[ '/Register']\\\" color=\\\"primary\\\">Register</button> -->\\r\\n        </mat-card-actions>\\r\\n      </mat-card>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\";","import { Routes, RouterModule } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { RegisterComponent } from 'src/app/components/auth/register/register.component';\r\nimport { LoginComponent } from 'src/app/components/auth/login/login.component';\r\nimport { redirectLoggedInTo, redirectUnauthorizedTo, canActivate } from \"@angular/fire/auth-guard\";\r\nimport { AdditionalUserInfoComponent } from 'src/app/components/auth/additional-user-info/additional-user-info.component';\r\nimport { AuthGuard } from 'src/app/guards/auth.guard';\r\nimport { RecuperarComponent } from 'src/app/components/auth/recuperar/recuperar';\r\nimport { UserPhotoComponent } from 'src/app/components/customElements/user-photo/user-photo.component';\r\nimport { VerificarComponent } from 'src/app/components/auth/verificar/verificar.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'Register',\r\n    component: RegisterComponent,\r\n    // ...canActivate(redirectLoggedInTo(['Home']))\r\n  },\r\n  {\r\n    path: 'Login',\r\n    component: LoginComponent,\r\n  },\r\n  {\r\n    path:'Verificar',\r\n    component:VerificarComponent\r\n  },\r\n  {\r\n    path:'AdditionInfo',\r\n    component: AdditionalUserInfoComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  { path: '', redirectTo: 'Login' },\r\n  {path:'recuperar', component:RecuperarComponent}\r\n \r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forChild(routes)],\r\n  // exports: [RouterModule]\r\n})\r\nexport class AuthenticationRoutingModule { }\r\n","export default \".mat-form-field, .mat-radio-group {\\r\\n    width:100%;\\r\\n}\\r\\n\\r\\n.second-title {\\r\\n    font-size: 12px;\\r\\n    color: #ff4081;\\r\\n}\\r\\n\\r\\n.title {\\r\\n    color:#3f51b5;\\r\\n}\\r\\n\\r\\n.background-gradient {\\r\\n    background: linear-gradient(to right, rgb(40, 60, 134), rgb(69, 162, 71));\\r\\n    padding: 64px 0;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFkZGl0aW9uYWwtdXNlci1pbmZvLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxVQUFVO0FBQ2Q7O0FBRUE7SUFDSSxlQUFlO0lBQ2YsY0FBYztBQUNsQjs7QUFFQTtJQUNJLGFBQWE7QUFDakI7O0FBRUE7SUFDSSx5RUFBeUU7SUFDekUsZUFBZTtBQUNuQiIsImZpbGUiOiJhZGRpdGlvbmFsLXVzZXItaW5mby5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC1mb3JtLWZpZWxkLCAubWF0LXJhZGlvLWdyb3VwIHtcclxuICAgIHdpZHRoOjEwMCU7XHJcbn1cclxuXHJcbi5zZWNvbmQtdGl0bGUge1xyXG4gICAgZm9udC1zaXplOiAxMnB4O1xyXG4gICAgY29sb3I6ICNmZjQwODE7XHJcbn1cclxuXHJcbi50aXRsZSB7XHJcbiAgICBjb2xvcjojM2Y1MWI1O1xyXG59XHJcblxyXG4uYmFja2dyb3VuZC1ncmFkaWVudCB7XHJcbiAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQodG8gcmlnaHQsIHJnYig0MCwgNjAsIDEzNCksIHJnYig2OSwgMTYyLCA3MSkpO1xyXG4gICAgcGFkZGluZzogNjRweCAwO1xyXG59Il19 */\";","export default \".controls-container{\\r\\n  width: 100%;\\r\\n}\\r\\n.Olvido {\\r\\n  text-decoration: none;\\r\\n  color:white;\\r\\n}\\r\\n.controls-container * {\\r\\n  width: 100%;\\r\\n}\\r\\n.FullCard{\\r\\n  border-radius: 14px;\\r\\n  background-color: rgba(0, 0, 0, 0.2);\\r\\n\\r\\n}\\r\\n#grid {\\r\\n  background: linear-gradient(#8b73ff,#8a3788);\\r\\n  padding: 80px 0;\\r\\n  height: 100vh;\\r\\n  /* height: calc(100% - 64px); */\\r\\n}\\r\\nbody { padding: 2em; }\\r\\n/* Shared */\\r\\n.loginBtn {\\r\\n  box-sizing: border-box;\\r\\n  position: relative;\\r\\n  /* width: 13em;  - apply for fixed size */\\r\\n  margin: 0.2em;\\r\\n  margin: 3px 0px !important;\\r\\n  padding: 0 15px 0 46px;\\r\\n  border: none;\\r\\n  text-align: left;\\r\\n  line-height: 34px;\\r\\n  white-space: nowrap;\\r\\n  border-radius: 0.2em;\\r\\n  /* font-size: 16px; */\\r\\n  color: rgb(253, 253, 253);\\r\\n}\\r\\n.loginBtn:before {\\r\\n  content: \\\"\\\";\\r\\n  box-sizing: border-box;\\r\\n  position: absolute;\\r\\n  top: 0;\\r\\n  left: 0;\\r\\n  width: 34px;\\r\\n  height: 100%;\\r\\n}\\r\\n.loginBtn:focus {\\r\\n  outline: none;\\r\\n}\\r\\n.loginBtn:active {\\r\\n  box-shadow: inset 0 0 0 32px rgba(112, 13, 96, 0.842);\\r\\n}\\r\\n/* Facebook */\\r\\n.loginBtn--facebook {\\r\\n  background-color: #4C69BA;\\r\\n  background-image: linear-gradient(#4C69BA, #3B55A0);\\r\\n  /*font-family: \\\"Helvetica neue\\\", Helvetica Neue, Helvetica, Arial, sans-serif;*/\\r\\n  text-shadow: 0 -1px 0 #354C8C;\\r\\n}\\r\\n.loginBtn--facebook:before {\\r\\n  border-right: #364e92 1px solid;\\r\\n  background: url('https://s3-us-west-2.amazonaws.com/s.cdpn.io/14082/icon_facebook.png') 6px 6px no-repeat;\\r\\n}\\r\\n.loginBtn--facebook:hover,\\r\\n.loginBtn--facebook:focus {\\r\\n  background-color: #5B7BD5;\\r\\n  background-image: linear-gradient(#5B7BD5, #4864B1);\\r\\n}\\r\\n/* Google */\\r\\n.loginBtn--google {\\r\\n  /*font-family: \\\"Roboto\\\", Roboto, arial, sans-serif;*/\\r\\n  background: #DD4B39;\\r\\n}\\r\\n.loginBtn--google:before {\\r\\n  border-right: #BB3F30 1px solid;\\r\\n  background: url('https://s3-us-west-2.amazonaws.com/s.cdpn.io/14082/icon_google.png') 6px 6px no-repeat;\\r\\n}\\r\\n.loginBtn--google:hover,\\r\\n.loginBtn--google:focus {\\r\\n  background: #E74B37;\\r\\n}\\r\\n.link{\\r\\n  font-size: 120%;\\r\\n  padding-left: 3%;\\r\\n}\\r\\n.btn_ingresar{\\r\\n  width: 30%;\\r\\n  padding: 0.5%;\\r\\n  left: 35%;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxvZ2luLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXO0FBQ2I7QUFDQTtFQUNFLHFCQUFxQjtFQUNyQixXQUFXO0FBQ2I7QUFFQTtFQUNFLFdBQVc7QUFDYjtBQUNBO0VBQ0UsbUJBQW1CO0VBQ25CLG9DQUFvQzs7QUFFdEM7QUFFQTtFQUNFLDRDQUE0QztFQUM1QyxlQUFlO0VBQ2YsYUFBYTtFQUNiLCtCQUErQjtBQUNqQztBQUVBLE9BQU8sWUFBWSxFQUFFO0FBRXJCLFdBQVc7QUFDWDtFQUNFLHNCQUFzQjtFQUN0QixrQkFBa0I7RUFDbEIseUNBQXlDO0VBQ3pDLGFBQWE7RUFDYiwwQkFBMEI7RUFDMUIsc0JBQXNCO0VBQ3RCLFlBQVk7RUFDWixnQkFBZ0I7RUFDaEIsaUJBQWlCO0VBQ2pCLG1CQUFtQjtFQUNuQixvQkFBb0I7RUFDcEIscUJBQXFCO0VBQ3JCLHlCQUF5QjtBQUMzQjtBQUNBO0VBQ0UsV0FBVztFQUNYLHNCQUFzQjtFQUN0QixrQkFBa0I7RUFDbEIsTUFBTTtFQUNOLE9BQU87RUFDUCxXQUFXO0VBQ1gsWUFBWTtBQUNkO0FBQ0E7RUFDRSxhQUFhO0FBQ2Y7QUFDQTtFQUNFLHFEQUFxRDtBQUN2RDtBQUdBLGFBQWE7QUFDYjtFQUNFLHlCQUF5QjtFQUN6QixtREFBbUQ7RUFDbkQsK0VBQStFO0VBQy9FLDZCQUE2QjtBQUMvQjtBQUNBO0VBQ0UsK0JBQStCO0VBQy9CLHlHQUF5RztBQUMzRztBQUNBOztFQUVFLHlCQUF5QjtFQUN6QixtREFBbUQ7QUFDckQ7QUFHQSxXQUFXO0FBQ1g7RUFDRSxvREFBb0Q7RUFDcEQsbUJBQW1CO0FBQ3JCO0FBQ0E7RUFDRSwrQkFBK0I7RUFDL0IsdUdBQXVHO0FBQ3pHO0FBQ0E7O0VBRUUsbUJBQW1CO0FBQ3JCO0FBRUE7RUFDRSxlQUFlO0VBQ2YsZ0JBQWdCO0FBQ2xCO0FBRUE7RUFDRSxVQUFVO0VBQ1YsYUFBYTtFQUNiLFNBQVM7QUFDWCIsImZpbGUiOiJsb2dpbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRyb2xzLWNvbnRhaW5lcntcclxuICB3aWR0aDogMTAwJTtcclxufVxyXG4uT2x2aWRvIHtcclxuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgY29sb3I6d2hpdGU7XHJcbn1cclxuXHJcbi5jb250cm9scy1jb250YWluZXIgKiB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuLkZ1bGxDYXJke1xyXG4gIGJvcmRlci1yYWRpdXM6IDE0cHg7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjIpO1xyXG5cclxufVxyXG5cclxuI2dyaWQge1xyXG4gIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgjOGI3M2ZmLCM4YTM3ODgpO1xyXG4gIHBhZGRpbmc6IDgwcHggMDtcclxuICBoZWlnaHQ6IDEwMHZoO1xyXG4gIC8qIGhlaWdodDogY2FsYygxMDAlIC0gNjRweCk7ICovXHJcbn1cclxuXHJcbmJvZHkgeyBwYWRkaW5nOiAyZW07IH1cclxuXHJcbi8qIFNoYXJlZCAqL1xyXG4ubG9naW5CdG4ge1xyXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIC8qIHdpZHRoOiAxM2VtOyAgLSBhcHBseSBmb3IgZml4ZWQgc2l6ZSAqL1xyXG4gIG1hcmdpbjogMC4yZW07XHJcbiAgbWFyZ2luOiAzcHggMHB4ICFpbXBvcnRhbnQ7XHJcbiAgcGFkZGluZzogMCAxNXB4IDAgNDZweDtcclxuICBib3JkZXI6IG5vbmU7XHJcbiAgdGV4dC1hbGlnbjogbGVmdDtcclxuICBsaW5lLWhlaWdodDogMzRweDtcclxuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xyXG4gIGJvcmRlci1yYWRpdXM6IDAuMmVtO1xyXG4gIC8qIGZvbnQtc2l6ZTogMTZweDsgKi9cclxuICBjb2xvcjogcmdiKDI1MywgMjUzLCAyNTMpO1xyXG59XHJcbi5sb2dpbkJ0bjpiZWZvcmUge1xyXG4gIGNvbnRlbnQ6IFwiXCI7XHJcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgdG9wOiAwO1xyXG4gIGxlZnQ6IDA7XHJcbiAgd2lkdGg6IDM0cHg7XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG59XHJcbi5sb2dpbkJ0bjpmb2N1cyB7XHJcbiAgb3V0bGluZTogbm9uZTtcclxufVxyXG4ubG9naW5CdG46YWN0aXZlIHtcclxuICBib3gtc2hhZG93OiBpbnNldCAwIDAgMCAzMnB4IHJnYmEoMTEyLCAxMywgOTYsIDAuODQyKTtcclxufVxyXG5cclxuXHJcbi8qIEZhY2Vib29rICovXHJcbi5sb2dpbkJ0bi0tZmFjZWJvb2sge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICM0QzY5QkE7XHJcbiAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KCM0QzY5QkEsICMzQjU1QTApO1xyXG4gIC8qZm9udC1mYW1pbHk6IFwiSGVsdmV0aWNhIG5ldWVcIiwgSGVsdmV0aWNhIE5ldWUsIEhlbHZldGljYSwgQXJpYWwsIHNhbnMtc2VyaWY7Ki9cclxuICB0ZXh0LXNoYWRvdzogMCAtMXB4IDAgIzM1NEM4QztcclxufVxyXG4ubG9naW5CdG4tLWZhY2Vib29rOmJlZm9yZSB7XHJcbiAgYm9yZGVyLXJpZ2h0OiAjMzY0ZTkyIDFweCBzb2xpZDtcclxuICBiYWNrZ3JvdW5kOiB1cmwoJ2h0dHBzOi8vczMtdXMtd2VzdC0yLmFtYXpvbmF3cy5jb20vcy5jZHBuLmlvLzE0MDgyL2ljb25fZmFjZWJvb2sucG5nJykgNnB4IDZweCBuby1yZXBlYXQ7XHJcbn1cclxuLmxvZ2luQnRuLS1mYWNlYm9vazpob3ZlcixcclxuLmxvZ2luQnRuLS1mYWNlYm9vazpmb2N1cyB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzVCN0JENTtcclxuICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQoIzVCN0JENSwgIzQ4NjRCMSk7XHJcbn1cclxuXHJcblxyXG4vKiBHb29nbGUgKi9cclxuLmxvZ2luQnRuLS1nb29nbGUge1xyXG4gIC8qZm9udC1mYW1pbHk6IFwiUm9ib3RvXCIsIFJvYm90bywgYXJpYWwsIHNhbnMtc2VyaWY7Ki9cclxuICBiYWNrZ3JvdW5kOiAjREQ0QjM5O1xyXG59XHJcbi5sb2dpbkJ0bi0tZ29vZ2xlOmJlZm9yZSB7XHJcbiAgYm9yZGVyLXJpZ2h0OiAjQkIzRjMwIDFweCBzb2xpZDtcclxuICBiYWNrZ3JvdW5kOiB1cmwoJ2h0dHBzOi8vczMtdXMtd2VzdC0yLmFtYXpvbmF3cy5jb20vcy5jZHBuLmlvLzE0MDgyL2ljb25fZ29vZ2xlLnBuZycpIDZweCA2cHggbm8tcmVwZWF0O1xyXG59XHJcbi5sb2dpbkJ0bi0tZ29vZ2xlOmhvdmVyLFxyXG4ubG9naW5CdG4tLWdvb2dsZTpmb2N1cyB7XHJcbiAgYmFja2dyb3VuZDogI0U3NEIzNztcclxufVxyXG5cclxuLmxpbmt7XHJcbiAgZm9udC1zaXplOiAxMjAlO1xyXG4gIHBhZGRpbmctbGVmdDogMyU7XHJcbn1cclxuXHJcbi5idG5faW5ncmVzYXJ7XHJcbiAgd2lkdGg6IDMwJTtcclxuICBwYWRkaW5nOiAwLjUlO1xyXG4gIGxlZnQ6IDM1JTtcclxufSJdfQ== */\";"],"sourceRoot":"webpack:///"}